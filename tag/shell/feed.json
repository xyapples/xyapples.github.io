{
    "version": "https://jsonfeed.org/version/1",
    "title": "LinuxSre云原生 • All posts by \"shell\" tag",
    "description": "专注于 Linux 运维、云计算、云原⽣等技术",
    "home_page_url": "http://ixuyong.cn",
    "items": [
        {
            "id": "http://ixuyong.cn/posts/2848848125.html",
            "url": "http://ixuyong.cn/posts/2848848125.html",
            "title": "Shell常用命令-grep-sed",
            "date_published": "2025-10-20T13:13:14.000Z",
            "content_html": "<h3 id=\"shell常用命令-grep-sed\"><a class=\"anchor\" href=\"#shell常用命令-grep-sed\">#</a> Shell 常用命令 - grep-sed</h3>\n<h4 id=\"1grep正则表达式介绍\"><a class=\"anchor\" href=\"#1grep正则表达式介绍\">#</a> 1.grep 正则表达式介绍</h4>\n<h5 id=\"11-什么是正则表达式\"><a class=\"anchor\" href=\"#11-什么是正则表达式\">#</a> <strong>1.1</strong> <strong>什么是正则表达式</strong></h5>\n<p>以特定的符号 &quot;表示一组数字或字母的&quot;，一种规则</p>\n<h5 id=\"12-为何需要正则表达式\"><a class=\"anchor\" href=\"#12-为何需要正则表达式\">#</a> <strong>1.2</strong> <strong>为何需要正则表达式</strong></h5>\n<ul>\n<li>在工作中，我们时刻面对着大量的日志，程序，以及命令的输出。迫切的需要过滤我们需要的一部分内容，甚至是一个字符串。</li>\n<li>比如：现在有一个上千行的文件，我们仅需要其中包含 “ERROR” 的行，怎么办？此时就需要使用到正则表达式的规则来筛选想要的内容。</li>\n</ul>\n<h5 id=\"13-正则表达式注意事项\"><a class=\"anchor\" href=\"#13-正则表达式注意事项\">#</a> <strong>1.3</strong> <strong>正则表达式注意事项</strong></h5>\n<ul>\n<li>正则表达式应用非常广泛，存在于各种编程语言中。</li>\n<li>正则表达式和 Linux 的通配符以及特殊字符是有区别的 。</li>\n<li>要想学好 grep、sed、awk 首先就需要对正则表达式有一定的了解，只有了解了规则，才能灵活的运用。</li>\n</ul>\n<h5 id=\"14-正则表达式规则语法\"><a class=\"anchor\" href=\"#14-正则表达式规则语法\">#</a> <strong>1.4</strong> <strong>正则表达式规则语法</strong></h5>\n<p>1. 正则表达式</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">\\</span>：转义符，将特殊字符进行转义，忽略其特殊意义</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>^：匹配行首，匹配字符串的开始</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$：匹配行尾，匹配字符串的结尾</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>^$：表示空行</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.：匹配除换行符<span class=\"token punctuation\">\\</span>n之外的任意单个字符 </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>：匹配包含在<span class=\"token punctuation\">[</span>字符<span class=\"token punctuation\">]</span>之中的任意一个字符 <span class=\"token punctuation\">[</span>a<span class=\"token operator\">|</span>b<span class=\"token punctuation\">]</span>cd</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">]</span>：匹配<span class=\"token punctuation\">[</span>^a<span class=\"token punctuation\">]</span>之外的任意字符 </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span> - <span class=\"token punctuation\">]</span>：匹配<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>中指定范围内的任意一个字符 <span class=\"token punctuation\">[</span>a-z<span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>?：匹配之前的项1次或者0次 </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>+：匹配之前的项1次或者多次 <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span>+</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>*：匹配之前的项0次或者多次 .* </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>：匹配表达式，创建一个用于匹配的子串 <span class=\"token function\">grep</span> <span class=\"token string\">\"ab(c|d)\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span>：匹配之前的项n次，n是可以为0的正整数 <span class=\"token function\">grep</span> <span class=\"token string\">\"[0-9]&#123;1,3&#125;\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span>n,<span class=\"token punctuation\">&#125;</span>：之前的项至少需要匹配n次</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span>n,m<span class=\"token punctuation\">&#125;</span>：指定之前的项至少匹配n次，最多匹配m次，n<span class=\"token operator\">&lt;=</span>m</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">|</span>：交替匹配，<span class=\"token operator\">|</span>两边的任意一项ab<span class=\"token punctuation\">(</span>c<span class=\"token operator\">|</span>d<span class=\"token punctuation\">)</span>匹配abc或abd</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">></span>或<span class=\"token punctuation\">\\</span>b锚定词首与词尾， <span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>grep<span class=\"token punctuation\">\\</span><span class=\"token operator\">></span> ，匹配所有包含grep字符的行,如果出现grepa是不会被匹配</pre></td></tr></table></figure><p>2. 特殊字符</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:space:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>：匹配空格</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:digit:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>：匹配<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:lower:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>：匹配<span class=\"token punctuation\">[</span>a-z<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:upper:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>：匹配<span class=\"token punctuation\">[</span>A-Z<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:alpha:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>：匹配<span class=\"token punctuation\">[</span>a-Z<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>3.grep 常用选项</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>作用说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-i</code></td>\n<td>忽略大小写（大小写不敏感匹配）。</td>\n</tr>\n<tr>\n<td>-o</td>\n<td><code>grep -o</code>  是  <code>grep</code>  命令中一个非常实用的选项，其作用是<strong>只输出匹配到的内容本身</strong>（而非整行），且每个匹配项单独占一行。</td>\n</tr>\n<tr>\n<td><code>-v</code></td>\n<td>反向匹配，只输出不匹配模式的行。</td>\n</tr>\n<tr>\n<td><code>-n</code></td>\n<td>显示匹配行的行号。</td>\n</tr>\n<tr>\n<td><code>-l</code></td>\n<td>只显示包含匹配模式的文件名（而非具体行内容）。</td>\n</tr>\n<tr>\n<td><code>-r</code> / <code>-R</code></td>\n<td>递归搜索目录下的所有文件（ <code>-R</code>  会跟随符号链接）。</td>\n</tr>\n<tr>\n<td><code>-w</code></td>\n<td>匹配完整单词（避免部分匹配，如搜索 &quot;cat&quot; 不会匹配 &quot;category&quot;）。</td>\n</tr>\n<tr>\n<td><code>-c</code></td>\n<td>统计匹配的行数（而非显示内容）。</td>\n</tr>\n<tr>\n<td><code>-E</code></td>\n<td>使用扩展正则表达式（支持 ``、 <code>()</code>  等元字符，无需转义），等价于 <code>egrep</code> 。</td>\n</tr>\n<tr>\n<td><code>-F</code></td>\n<td>按固定字符串匹配（不解析正则表达式），等价于  <code>fgrep</code> 。</td>\n</tr>\n<tr>\n<td><code>--color=auto</code></td>\n<td>为匹配到的内容添加颜色高亮（多数系统默认开启）。</td>\n</tr>\n</tbody>\n</table>\n<p>4. 准备如下文件，然后进行正则表达式规则验证。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat test.txt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I am xuyong teacher<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>I teach linux.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">test</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>I like badminton ball ,billiard ball and</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>chinese chess<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>my blog is</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>http://xuyonglinux.blog.51cto.com</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>our site is http://www.ixuyong.cn</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>my qq num is <span class=\"token number\">572891887</span>.</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>not <span class=\"token number\">572891888887</span>.</pre></td></tr></table></figure><p>进行如下场景验证：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 过滤以 m 开头的行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"^m\" test.txt </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 排除空行，并打印行号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -vn \"^$\" test.txt </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#3. 匹配任意一个字符，不包括空行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \".\" test.txt</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#4. 匹配所有内容</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \".*\" test.txt</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#5. 匹配以点结尾的</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"\\.$\" test.txt </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#6. 匹配有 a 或 b 或 c 的行</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep \"[a|b|c]\" test.txt </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#7. 匹配数字所在的行</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep \"[0-9]\" test.txt</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#8. 匹配所有小写字母</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep \"[a-z]\" test.txt </span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#9. 匹配包含 5 个 8 的行</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep \"[8]&#123;5&#125;\" test.txt</span></pre></td></tr></table></figure><h4 id=\"2grep正则表达式案例\"><a class=\"anchor\" href=\"#2grep正则表达式案例\">#</a> 2.grep 正则表达式案例</h4>\n<h5 id=\"21-提取服务器网卡地址\"><a class=\"anchor\" href=\"#21-提取服务器网卡地址\">#</a> <strong>2.1</strong> <strong>提取服务器网卡地址</strong></h5>\n<p>需求：使用 grep 正则方式方式，提取 eth0 的 IP 地址；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ifconfig eth0 | grep \"^.*inet \" | egrep -o \"[0-9]&#123;2,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  ifconfig eth0 | grep \"^.*inet \" | egrep -o \"[[:digit:]]&#123;2,3&#125;\\.[[:digit:]]&#123;1,3&#125;\\.[[:digit:]]&#123;1,3&#125;\\.[[:digit:]]&#123;1,3&#125;\"</span></pre></td></tr></table></figure><h5 id=\"22-过滤空行与开头的行\"><a class=\"anchor\" href=\"#22-过滤空行与开头的行\">#</a> <strong>2.2</strong> 过滤空行与 #开头的行</h5>\n<p>需求：使用 grep 正则表达式方式，排除 nginx 日志文件的空行和 #号开头的行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep -v \"(^#|^$|^[[:space:]]+#)\" nginx.conf</span></pre></td></tr></table></figure><h5 id=\"23-匹配日志中http版本\"><a class=\"anchor\" href=\"#23-匹配日志中http版本\">#</a> <strong>2.3</strong> <strong>匹配日志中</strong> http 版本</h5>\n<p>需求：使用 grep 正则表达式方式，匹配 nginx 日志中的 http3.0 http3.1 http2.1 http2.0</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat test1.txt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">27</span>/Sep/2021:09:55:06 +0800<span class=\"token punctuation\">]</span><span class=\"token string\">\"GET/HTTP/1.0\"</span><span class=\"token number\">200</span> <span class=\"token number\">4</span><span class=\"token string\">\"_\"</span>\"curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>：1[27/Sep/2021:09:55:18+0800] \"</span>GET/HTTP/1.1<span class=\"token string\">\"\"</span><span class=\"token number\">2004</span><span class=\"token string\">\"_\"</span>\"curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>：1[27/Sep/2021:09:55:21 +0800] \"</span>GETT/HTTP/1.1<span class=\"token string\">\"20044\"</span>_<span class=\"token string\">\"\"</span>curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>：:1[27/Sep/2021:09:55:25+0800]]\"</span>GET/HTTP/2.O<span class=\"token string\">\"20044\"</span>_<span class=\"token string\">\"\"</span>curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>：：1[27/Sep/2021:09:55:255+0800]\"</span>GET/HTTP/2.0<span class=\"token string\">\"200 4\"</span>_<span class=\"token string\">\"\"</span>curl/7.29.0<span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>：1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span>/Sep/2021:09:55:255+0800<span class=\"token punctuation\">]</span>“GET/HTTP/2.1<span class=\"token string\">\"2004\"</span>_<span class=\"token string\">\"\"</span>curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>：:1[27/Sep/2021:09:55:265+0800]“GETHTTP/1.1\"</span>\"200 <span class=\"token number\">4</span><span class=\"token string\">\"_\"</span>\"curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>：:1[27/Sep/2021:09:55:265+0800]“GETHTTP/3.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">4</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"curl/7.29.0\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>:1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span>/Sep/2021:09:55:265+0800<span class=\"token punctuation\">]</span><span class=\"token string\">\"GET/HTTP/3.1\"</span><span class=\"token number\">200</span> <span class=\"token number\">4</span><span class=\"token string\">\"_\"</span>\"curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>[27/Sep/2021:09:55:265+0800]“GETHTTP/3.0\"</span><span class=\"token number\">200</span> <span class=\"token number\">4</span><span class=\"token string\">\"_\"</span>\"curl/7.29.0<span class=\"token string\">\"</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>[root@client ~]# grep -io \"</span>http/<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">\\</span>.<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\" test1.txt </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>HTTP/1.0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>HTTP/1.1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>HTTP/1.1</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>HTTP/2.0</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>HTTP/2.1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>HTTP/1.1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>HTTP/3.1</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>HTTP/3.1</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>HTTP/3.0</pre></td></tr></table></figure><h5 id=\"24-过滤无注释的配置文件\"><a class=\"anchor\" href=\"#24-过滤无注释的配置文件\">#</a> <strong>2.4</strong> <strong>过滤无注释的配置文件</strong></h5>\n<p>需求：使用 grep 正则表达式方式，匹配 zabbix_agentd.conf 配置文件中所有已启用的配置。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep -v \"^#|^$\" zabbix_agentd.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep '^[a-Z]' zabbix_agentd.conf</span></pre></td></tr></table></figure><h5 id=\"25-匹配用户手机号是否合法\"><a class=\"anchor\" href=\"#25-匹配用户手机号是否合法\">#</a> <strong>2.5</strong> <strong>匹配用户手机号是否合法</strong></h5>\n<p>需求：使用 grep 正则表达式方式，匹配 133、152、166、135 开头的手机号码。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat grep01.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要测试的手机号[[ 133 | 152 | 166 ]: \"</span> Action</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token operator\">=~</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">11</span><span class=\"token punctuation\">&#125;</span>$ <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\"># 判断开头是否为 133 152</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token operator\">=~</span> ^<span class=\"token punctuation\">(</span><span class=\"token number\">133</span><span class=\"token operator\">|</span><span class=\"token number\">152</span><span class=\"token operator\">|</span><span class=\"token number\">166</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">8</span><span class=\"token punctuation\">&#125;</span>$ <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$Action</span> 是合法手机号....\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$Action</span> 手机号输入错误\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$Action</span> 目前属于非法手机号...\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"26-匹配用户邮箱是否合法\"><a class=\"anchor\" href=\"#26-匹配用户邮箱是否合法\">#</a> <strong>2.6</strong> <strong>匹配用户邮箱是否合法</strong></h5>\n<p>需求：使用 grep 正则表达式方式，匹配 qq、163、sina 的 email 地址。</p>\n<ul>\n<li>前缀：数字 | 字母 组成方式 （长度，不可以超过 16）</li>\n<li>@ 正常出现</li>\n<li>qq | sina | foxmail | 163 | gmail 固定的字段</li>\n<li>.com .cn .org 不做控制</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat email.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入找回密码的邮箱: \"</span> Action</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">Action_pre</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;Action<span class=\"token operator\">%</span>@*&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 比对前缀的长度是否超过 16</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>Action_pre&#125;</span> <span class=\"token parameter variable\">-le</span> <span class=\"token number\">16</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你输入的邮箱长度太长\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 匹配</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\"># (0-9 | a-z )+    </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\"># 纯数字</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\"># 数字 + 字母</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\"># 纯字母</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\"># 字母 + 数字</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token operator\">=~</span> ^<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span>a-z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>+<span class=\"token operator\">|</span>@<span class=\"token punctuation\">(</span>qq<span class=\"token operator\">|</span>sina<span class=\"token operator\">|</span><span class=\"token number\">163</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">..</span>+$ <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$Action</span> 邮件已经发送，请登录邮箱点击链接找回密码\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$Action</span> 不符合系统预定的邮箱规则，请重新尝试\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"27-正则匹配文件中的域名\"><a class=\"anchor\" href=\"#27-正则匹配文件中的域名\">#</a> <strong>2.7</strong> <strong>正则匹配文件中的域名</strong></h5>\n<p>需求：现在有如下文件，希望通过如下方式进行匹配：grep &quot; 正则 .shop.oldxu.com</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat rege.txt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xxt-demo.shop.oldxu.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>xxt-demoadmin.shop.oldxu.com</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>abc.shop.oldxu.com</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>abcadmin.shop.oldxu.com</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">123</span>.shop.oldxu.com</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>abc123.shop.oldxu.com</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>bbb.admin.oldxu.com</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>bbb-ccc.admin.oldxu.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>bbb-ccc-ddd.admin.oldxu.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>bbb-ccc-ddd.shop.oldxu.com</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep \"^([a-z]|-)+\\.(shop|admin)\\.oldxu\\.com\" rege.txt</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>xxt-demo.shop.oldxu.com</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>xxt-demoadmin.shop.oldxu.com</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>abc.shop.oldxu.com</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>abcadmin.shop.oldxu.com</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>bbb.admin.oldxu.com</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>bbb-ccc.admin.oldxu.com</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>bbb-ccc-ddd.admin.oldxu.com</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>bbb-ccc-ddd.shop.oldxu.com</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep \"^([a-z]&#123;1,&#125;-[a-z]&#123;1,&#125;|[a-z]&#123;1,&#125;|admin)\\.shop\\.oldxu\\.com\" rege.txt</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>xxt-demo.shop.oldxu.com</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>xxt-demoadmin.shop.oldxu.com</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>abc.shop.oldxu.com</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>abcadmin.shop.oldxu.com</pre></td></tr></table></figure><h4 id=\"3sed文本处理\"><a class=\"anchor\" href=\"#3sed文本处理\">#</a> <strong>3.sed</strong> 文本处理</h4>\n<h5 id=\"31-sed基本介绍\"><a class=\"anchor\" href=\"#31-sed基本介绍\">#</a> <strong>3.1 sed</strong> 基本介绍</h5>\n<ul>\n<li>sed (Stream Editor) 流编辑器，能够对标准输出或文件进行逐行处理。</li>\n<li>简单来说，sed 可以实现对文件的增、删、查、改。</li>\n</ul>\n<h5 id=\"32-sed工作模式\"><a class=\"anchor\" href=\"#32-sed工作模式\">#</a> <strong>3.2 sed</strong> 工作模式</h5>\n<p>sed 读取文件一行，存放在缓存区，然后处理，最后输出。</p>\n<h5 id=\"33-sed基础语法\"><a class=\"anchor\" href=\"#33-sed基础语法\">#</a> <strong>3.3 sed</strong> 基础语法</h5>\n<p>第一种形式：stdout | sed [option] &quot;pattern command&quot;</p>\n<ul>\n<li>option: 选项</li>\n<li>pattern：匹配 sed '/^root/' |grep</li>\n<li>command: 动作 p,d, c , s###g , r,w,i,a</li>\n</ul>\n<p>第二种形式： sed [option] &quot;pattern command&quot; file</p>\n<h5 id=\"34-sed常用选项\"><a class=\"anchor\" href=\"#34-sed常用选项\">#</a> <strong>3.4 sed</strong> 常用选项</h5>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>含义</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-n</td>\n<td>只打印匹配的行（取消文件的默认输出）</td>\n</tr>\n<tr>\n<td>-e</td>\n<td>允许多项编辑</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>编辑动作保存在文件，指定文件才执行</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>支持扩展正则表达式</td>\n</tr>\n<tr>\n<td>-i</td>\n<td>直接变更文件内容</td>\n</tr>\n</tbody>\n</table>\n<p>1.sed 相关示例文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat file.txt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I love shell</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>I love <span class=\"token environment constant\">SHELL</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>This is <span class=\"token builtin class-name\">test</span> <span class=\"token function\">file</span></pre></td></tr></table></figure><h6 id=\"341-n选项\"><a class=\"anchor\" href=\"#341-n选项\">#</a> <strong>3.4.1 -n</strong> 选项</h6>\n<p>sed -n 用于取消默认输出</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '/shell/p' file.txt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I love shell</pre></td></tr></table></figure><h6 id=\"342-e选项\"><a class=\"anchor\" href=\"#342-e选项\">#</a> <strong>3.4.2 -e</strong> 选项</h6>\n<p>sed -n 用于多项编辑</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n -e '/shell/p' -e '/SHELL/p' file.txt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I love shell</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>I love <span class=\"token environment constant\">SHELL</span></pre></td></tr></table></figure><h6 id=\"343-f选项\"><a class=\"anchor\" href=\"#343-f选项\">#</a> <strong>3.4.3 -f</strong> 选项</h6>\n<p>sed -f 编辑动作保存在文件，指定文件才执行将 pattern 写入文件中</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat edit.sed</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/shell/p</pre></td></tr></table></figure><p>通过 sed -f 执行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n -f edit.sed file.txt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I love shell</pre></td></tr></table></figure><h6 id=\"344-r选项\"><a class=\"anchor\" href=\"#344-r选项\">#</a> <strong>3.4.4 -r</strong> 选项</h6>\n<p>sed -r 支持扩展正则表达式</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -rn '/shell|SHELL/p' file.txt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I love shell</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>I love <span class=\"token environment constant\">SHELL</span></pre></td></tr></table></figure><h6 id=\"345-sed实战\"><a class=\"anchor\" href=\"#345-sed实战\">#</a> 3.4.5 sed 实战</h6>\n<p>sed 取 ip 地址</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ifconfig eth0 | sed -n '/inet /p' | sed -r 's#(^.*et )(.*)(net.*$)#\\2#g'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">192.168</span>.40.10</pre></td></tr></table></figure><h5 id=\"35-sed-pattern过滤\"><a class=\"anchor\" href=\"#35-sed-pattern过滤\">#</a> <strong>3.5 sed pattern</strong> 过滤</h5>\n<p>命令格式：sed [option] '/pattern/command'file</p>\n<h6 id=\"351-pattern命令格式\"><a class=\"anchor\" href=\"#351-pattern命令格式\">#</a> <strong>3.5.1 pattern</strong> 命令格式</h6>\n<table>\n<thead>\n<tr>\n<th><strong>匹配模式</strong></th>\n<th><strong>含义</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10command</td>\n<td>匹配第 10 行</td>\n</tr>\n<tr>\n<td>10,20command</td>\n<td>匹配从第 10 行开始，到第 20 行结束</td>\n</tr>\n<tr>\n<td>10,+5command</td>\n<td>匹配从第 10 行开始，到第 16 行结束</td>\n</tr>\n<tr>\n<td>/pattern1/,/pattern2/command</td>\n<td>匹配到 pattern1 的行开始，到 匹配到 pattrn2 的行结束</td>\n</tr>\n<tr>\n<td>10,/pattern1/command</td>\n<td>匹配从第 10 行开始，到匹配到 pattern1 的行结束</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"352-pattern命令示例\"><a class=\"anchor\" href=\"#352-pattern命令示例\">#</a> <strong>3.5.2 pattern</strong> 命令示例</h6>\n<p>1. 示例：指定行号。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#打印 passwd 文件的第 10 行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '10p' passwd </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>operator:x:11:0:operator:/root:/sbin/nologin</pre></td></tr></table></figure><p>2. 示例：指定起始行号和结束行号</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#打印 passwd 文件的 10 到 20 行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '10,20p' passwd </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>operator:x:11:0:operator:/root:/sbin/nologin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>games:x:12:100:games:/usr/games:/sbin/nologin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nobody:x:99:99:Nobody:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dbus:x:81:81:System message bus:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>polkitd:x:999:998:User <span class=\"token keyword\">for</span> polkitd:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>abrt:x:173:173::/etc/abrt:/sbin/nologin</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>postfix:x:89:89::/var/spool/postfix:/sbin/nologin</pre></td></tr></table></figure><p>3. 指定起始行号，然后后面 N 行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#打印 passwd 文件中从第 1 行开始，往后面加 5 行的内容</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '1,+5p' passwd </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>root:x:0:0:root:/root:/bin/bash</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>bin:x:1:1:bin:/bin:/sbin/nologin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>daemon:x:2:2:daemon:/sbin:/sbin/nologin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>adm:x:3:4:adm:/var/adm:/sbin/nologin</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sync:x:5:0:sync:/sbin:/bin/sync</pre></td></tr></table></figure><p>4. 正则表达式匹配（打印 passwd 文件中以 root 开头的行）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '/^root/p' passwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root:x:0:0:root:/root:/bin/bash</pre></td></tr></table></figure><p>5. 从匹配到 pattern1 的行，到匹配 pattern2 的行（打印 passwd 文件第一个匹配到以 bin 开头的行，到第二个匹配到以 ftp 的行）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -rn '/^bin/,/^ftp/p' passwd </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bin:x:1:1:bin:/bin:/sbin/nologin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>daemon:x:2:2:daemon:/sbin:/sbin/nologin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>adm:x:3:4:adm:/var/adm:/sbin/nologin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sync:x:5:0:sync:/sbin:/bin/sync</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>halt:x:7:0:halt:/sbin:/sbin/halt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>operator:x:11:0:operator:/root:/sbin/nologin</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>games:x:12:100:games:/usr/games:/sbin/nologin</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</pre></td></tr></table></figure><p>6. 从指定的行号开始匹配，直到匹配到 pattern1 的行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#打印 passwd 文件中从第 11 行开始匹配，直到以 ^ftp 开头的行结束</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '11,/^ftp/p' passwd </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>games:x:12:100:games:/usr/games:/sbin/nologin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</pre></td></tr></table></figure><h6 id=\"353-pattern章节练习\"><a class=\"anchor\" href=\"#353-pattern章节练习\">#</a> <strong>3.5.3 pattern</strong> 章节练习</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 打印 /etc/passwd 中第 20 行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'20p'</span> /etc/passwd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 打印 /etc/passwd 中从第 8 行开始，到第 15 行结束的内容</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'8,15p'</span> /etc/passwd</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#3. 打印 /etc/passwd 中从第 8 行开始，然后 + 5 行结束的内容</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'8,+5p'</span> /etc/passwd</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#4. 打印 /etc/passwd 中开头匹配 bin 字符串的内容</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/^bin/'</span> /etc/passwd</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#5. 打印 /etc/passwd 中开头为 root 的行开始，到开头为 ftp 的行结束的内容</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/^root/,/ftp/p'</span> /etc/passwd</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#6. 打印 /etc/passwd 中第 8 行开始，到含有 /sbin/nologin 的内容的行结束内容</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'8,/\\/sbin\\/nologin/p'</span> /etc/passwd</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -n '/^\\[base\\]/,/\\[.*/p' /etc/yum.repos.d/CentOS-Base.repo | sed -r '/^\\[|^#/d'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>CentOS-<span class=\"token variable\">$releasever</span> - Base - mirrors.aliyun.com</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">failovermethod</span><span class=\"token operator\">=</span>priority</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">baseurl</span><span class=\"token operator\">=</span>http://mirrors.aliyun.com/centos/<span class=\"token variable\">$releasever</span>/os/<span class=\"token variable\">$basearch</span>/</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        http://mirrors.aliyuncs.com/centos/<span class=\"token variable\">$releasever</span>/os/<span class=\"token variable\">$basearch</span>/</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        http://mirrors.cloud.aliyuncs.com/centos/<span class=\"token variable\">$releasever</span>/os/<span class=\"token variable\">$basearch</span>/</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">gpgcheck</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token assign-left variable\">gpgkey</span><span class=\"token operator\">=</span>http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</pre></td></tr></table></figure><h5 id=\"36-sed追加命令\"><a class=\"anchor\" href=\"#36-sed追加命令\">#</a> <strong>3.6 sed</strong> 追加命令</h5>\n<h6 id=\"361-追加命令格式\"><a class=\"anchor\" href=\"#361-追加命令格式\">#</a> <strong>3.6.1</strong> <strong>追加命令格式</strong></h6>\n<table>\n<thead>\n<tr>\n<th><strong>编辑命令</strong></th>\n<th><strong>含义</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a</td>\n<td>行后追加内容 append</td>\n</tr>\n<tr>\n<td>i</td>\n<td>行前追加内容 insert</td>\n</tr>\n<tr>\n<td>r</td>\n<td>读入外部文件，行后追加</td>\n</tr>\n<tr>\n<td>w</td>\n<td>将匹配行写入外部文件</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"362-追加命令示例\"><a class=\"anchor\" href=\"#362-追加命令示例\">#</a> <strong>3.6.2</strong> <strong>追加命令示例</strong></h6>\n<p>1. 匹配 /bin/bash 的行，在其行后面添加一行内容。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -i '/^bin/a ok' passwd</span></pre></td></tr></table></figure><p>2. 以 /bin 开头的行到已 sshd 开头的行，前面添加一行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -i '/^bin/,/^sshd/i OKOK' passwd</span></pre></td></tr></table></figure><p>3. 指定给文件的 30 行添加一行内容。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -i '30i listen 80' passwd</span></pre></td></tr></table></figure><p>4. 将 list.txt 文件中的内容，追加到匹配模式的行后面</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -i '/root/r list.txt'</span></pre></td></tr></table></figure><p>5. 匹配 /bin/bash 所有的行，将其保存至 /tmp/login.txt 文件中</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed '/\\/bin\\/bash/w /tmp/login.txt' passwd</span></pre></td></tr></table></figure><p>6.ssh 配置文件 /etc/ssh/sshd_config ，端口改为 6666</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sed -i '/#Port/a port 666' /etc/ssh/sshd_config</span></pre></td></tr></table></figure><h6 id=\"363-追加章节练习\"><a class=\"anchor\" href=\"#363-追加章节练习\">#</a> <strong>3.6.3</strong> <strong>追加章节练习</strong></h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>）passwd文件第10行后面追加 <span class=\"token string\">\"Add Line\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'10a Add Line'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2</span>）passwd文件第10行到第20行，每一行后面都追加<span class=\"token string\">\"Test Line\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'10,20a Test Line'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">3</span>）passwd文件匹配到/bin/bash的行后面追加<span class=\"token string\">\"Insert Line\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'10a Insert Line'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">4</span>）passwd文件匹配到以bin开头的行，在匹配的行前住家 <span class=\"token string\">\"Add Line Before\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/^bin/i Add Line Before'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">5</span>）passwd文件每一行前面都追加 <span class=\"token string\">\"Insert LineBefore\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/^/i Insert Line Before'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">6</span>）将/etc/fstab文件的内容追加到passwd文件的第10行后面</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'10r /etc/fstab'</span> <span class=\"token function\">passwd</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">7</span>）将/etc/inittab文件内容追加到passwd文件匹配/bin/sync行的后面</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/\\/sbin\\/nologin/r /etc/inittab'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">8</span>）将/etc/hosts文件内容追加到passwd文件中10行的后面</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/\\/sbin\\/nologin/r /etc/inittab'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token number\">9</span>）将passwd文件匹配到/bin/bash的行追加到/tmp/sed.txt文件中</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/\\/bin\\/bash/w /tmp/sed.txt'</span> <span class=\"token function\">passwd</span></pre></td></tr></table></figure><h5 id=\"37-sed删除命令\"><a class=\"anchor\" href=\"#37-sed删除命令\">#</a> <strong>3.7 sed</strong> 删除命令</h5>\n<h6 id=\"371-删除命令格式\"><a class=\"anchor\" href=\"#371-删除命令格式\">#</a> <strong>3.7.1</strong> <strong>删除命令格式</strong></h6>\n<table>\n<thead>\n<tr>\n<th><strong>编辑命令</strong></th>\n<th><strong>含义</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1d</td>\n<td>删除第 1 行的内容</td>\n</tr>\n<tr>\n<td>1,5d</td>\n<td>删除 1 行到 5 行的内容</td>\n</tr>\n<tr>\n<td>2,+5d</td>\n<td>删除 2 行以及往下的 5 行的内容</td>\n</tr>\n<tr>\n<td>/pattern1/d</td>\n<td>删除每行中匹配到 pattern1 的行内容</td>\n</tr>\n<tr>\n<td>/pattern1/,/pattern2/d</td>\n<td>删除匹配到 pattern1 的行直到匹配到 pattern2 的所有行内容</td>\n</tr>\n<tr>\n<td>/pattern1/,10d</td>\n<td>删除匹配到 pattern1 的行到 10 行的所有行内容</td>\n</tr>\n<tr>\n<td>10,/pattern1/d</td>\n<td>删除第 10 行直到匹配到 pattern1 的所有内容</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"372删除命令示例\"><a class=\"anchor\" href=\"#372删除命令示例\">#</a> <strong>3.7.2</strong> 删除命令示例</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 删除 passwd 文件中第 1 行内容</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'1d'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 删除 passwd 文件中第 1 行到第 5 行的内容</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'1,5d'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#3. 删除 passwd 文件中第 2 行以及往下的 5 行内容</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'2,+5d'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#4. 匹配 /sbin/nologin 结尾的行，然后进行删除</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/\\/sbin\\/nologin$/d'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#5. 匹配以 sshd 开头的行，到 rpc 开头的行删除</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/^sshd/,/^rpc/d'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#6. 删除 vsftpd 配置文件以 # 号开头的行，以及空行</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#删除配置文件中 #号开头的注释行，如果碰到 tab 或空格是无法删除</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/^#/d'</span> <span class=\"token function\">file</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#删除配置文件中含有 tab 键的注释行</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'/^[ \\t]*#/d'</span> <span class=\"token function\">file</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#删除无内容空行</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'/^[ \\t]*$/d'</span> <span class=\"token function\">file</span></pre></td></tr></table></figure><h6 id=\"373-删除章节练习\"><a class=\"anchor\" href=\"#373-删除章节练习\">#</a> <strong>3.7.3</strong> <strong>删除章节练习</strong></h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 删除 /etc/passwd 中的第 15 行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'15d'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 删除 /etc/passwd 中的第 8 行到第 14 行的所有内容</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'8,14d'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#4. 删除 /etc/passwd 中以 /sbin/nologin 结尾的行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/\\/sbin\\/nologin$/d'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#4. 删除 /etc/passwd 中以 bin 开头的行，到以 ntp 开头的行的所有内容</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/^bin/,/^ntp/d'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#5. 删除 /etc/passwd 中第 3 行到以 ftp 开头的所有行内容</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'3,/^ftp/d'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#6. 典型需求：删除 Nginx 配置文件中所有的注释以及空行</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/^#|^$/d'</span></pre></td></tr></table></figure><h5 id=\"38-sed修改命令\"><a class=\"anchor\" href=\"#38-sed修改命令\">#</a> <strong>3.8 sed</strong> 修改命令</h5>\n<h6 id=\"381-修改命令格式\"><a class=\"anchor\" href=\"#381-修改命令格式\">#</a> <strong>3.8.1</strong> <strong>修改命令格式</strong></h6>\n<table>\n<thead>\n<tr>\n<th><strong>编辑命令</strong></th>\n<th><strong>含义</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1s/old/new/</td>\n<td>替换第 1 行内容 old 为 new</td>\n</tr>\n<tr>\n<td>1,10s/old/new/</td>\n<td>替换 1 行到 10 行的内容 old 为 new</td>\n</tr>\n<tr>\n<td>1,+5s/old/new/</td>\n<td>替换 1 行到 6 行的内容 old 为 new</td>\n</tr>\n<tr>\n<td>/pattern1/s/old/new/</td>\n<td>替换匹配 pattern1 的内容 old 为 new</td>\n</tr>\n<tr>\n<td>/pattern1/,/pattern2/s/old/new/</td>\n<td>替换匹配到 pattern1 的行直到匹配到 pattern2 的所有行内容 old 为 new</td>\n</tr>\n<tr>\n<td>10,/pattern1/s/old/new/</td>\n<td>替换第 10 行直到匹配到 pattern1 的所有行内容 old 为 new</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"382-修改命令示例\"><a class=\"anchor\" href=\"#382-修改命令示例\">#</a> <strong>3.8.2</strong> <strong>修改命令示例</strong></h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 修改 passwd 文件第 1 行中第一个 root 为 ROOT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'1s/root/ROOT/'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 修改 passwd 文件中第 5 行到第 10 行中所有的 /sbin/nologin 为 /bin/bash</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'5,10s/\\/sbin\\/nologin/\\/bin\\/bash/'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'5,10s#/sbin/nologin#/bin/bash#'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#3. 修改 passwd 文件中匹配到 /sbin/nologin 的行，将匹配到行中的 login 为该大写的 LOGIN</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/\\/sbin\\/nologin/s#login#LOGIN#g'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/\\/sbin\\/nologin/s/login/LOGIN#g'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#4. 修改 passwd 文件中从匹配到以 root 开头的行，到匹配到行中包含 bin 的行</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/^root/,/^bin/s/bin/BIN/g'</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#5. 修改 SELINUX=enforcing 修改为 SELINUX=disabled（可以使用 c 替换方式）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/^SELINUX=/c SELINUX=disabled'</span> selinux</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#6. 将 nginx.conf 配置文件添加注释</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/^/# /'</span> nginx.conf</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#7. 使用 sed 提取 eth0 网卡的 IP 地址</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-rn</span> <span class=\"token string\">'2s/^.*et //p'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-rn</span> <span class=\"token string\">'s/ ne.*//p'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-nr</span> <span class=\"token string\">'2s/(^.*et) (.*) (net.*)/\\2/p'</span></pre></td></tr></table></figure><h5 id=\"39-sed脚本实践\"><a class=\"anchor\" href=\"#39-sed脚本实践\">#</a> <strong>3.9 sed</strong> 脚本实践</h5>\n<h6 id=\"391-分析ansible主机清单实践\"><a class=\"anchor\" href=\"#391-分析ansible主机清单实践\">#</a> <strong>3.9.1</strong> <strong>分析</strong> Ansible 主机清单实践</h6>\n<p>需求： 处理一个 ansible 的 invtory 主机清单。</p>\n<ul>\n<li>1. 输出主机组，一对 [ ] 为一个主机组。</li>\n<li>2. 输出每个主机组下的主机总个数。</li>\n</ul>\n<p>执行结果：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh example.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span>: web01： 有 <span class=\"token number\">2</span> 台主机</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span>: web02： 有 <span class=\"token number\">12</span> 台主机</pre></td></tr></table></figure><p>1. 主机清单文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat hosts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>dnsservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">172.16</span>.1.91</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">172.16</span>.1.92</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>routes<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">172.16</span>.1.200</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>lbservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">172.16</span>.1.3</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">172.16</span>.1.4</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>proxyservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">172.16</span>.1.5</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">172.16</span>.1.6</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>webservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">172.16</span>.1.7</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">172.16</span>.1.8 </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">172.16</span>.1.9</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">[</span>dbservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">172.16</span>.1.51</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>redisservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">172.16</span>.1.41</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">[</span>nfsservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">172.16</span>.1.32</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>backupservers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">172.16</span>.1.31</pre></td></tr></table></figure><p>2. 需求实现</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat ansible_sed.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">inventory</span><span class=\"token operator\">=</span>hosts</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 获取主机组的名称的函数（有很多主机组的名称）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function-name function\">get_host_groups_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token assign-left variable\">get_names</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/^\\[/p'</span> $<span class=\"token punctuation\">&#123;</span>inventory<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'s/\\[//p'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'s/\\]//p'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$get_names</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 通过拿到主机组的名称，能够提取对应的数量</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function-name function\">get_host_number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token assign-left variable\">get_hosts</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/^\\['</span>$1<span class=\"token string\">'\\]/,/\\[.*\\]/p'</span> hosts <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'/\\[|^$/d'</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$get_hosts</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function-name function\">get_host_ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token assign-left variable\">get_ip</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/^\\['</span>$1<span class=\"token string\">'\\]/,/\\[.*\\]/p'</span> hosts <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'/\\[|^$/d'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$get_ip</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 遍历获取每个主机组的数量</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">#1. 调用函数拿到所有的组名称</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">#2. 将 webservers 赋值给 host 变量</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">host</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>get_host_groups_name<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\"># 3. 执行 get_host_number 这个函数 传递了一个参数 host  host 的结果是 webservers</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token assign-left variable\">numbers</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>get_host_number $host<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token assign-left variable\">host_ip</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>get_host_ip $host<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">#  $host 对应的就是组的名称  $numbers 就是最终这个组对应的数量</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;index&#125;</span>: 主机组名称: <span class=\"token variable\">$host</span>  主机数量: <span class=\"token variable\">$numbers</span> 对应的IP是: <span class=\"token variable\">$&#123;host_ip&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$index</span> +1 <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h6 id=\"392-分析mysql配置文件实践\"><a class=\"anchor\" href=\"#392-分析mysql配置文件实践\">#</a> <strong>3.9.2</strong> <strong>分析</strong> MySQL 配置文件实践</h6>\n<p>需求：处理一个 MySQL 配置文件的 my.cnf 文件。</p>\n<ul>\n<li>1. 输文件中有几个段，一对 [ ] 为一段。</li>\n<li>2. 针对每个段统计配置文件参数总个数。</li>\n</ul>\n<p>脚本执行结果:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh mysql_conf_total.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span>: client <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span>: server <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span>: mysqld <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span>: mysqld_safe <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">5</span>: embedded <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">6</span>: mysqld-5.5 <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 1 获取 [] 内容，sed -n '/^\\[/p' my.cnf | sed's/\\[//' | sed's/\\]//'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 2 基于 [] 内容，提取的数量；sed -n '/\\[mysqld\\]/,/\\[.*\\]/p' my.cnf | sed -r '/\\[|^$|#/d' |wc -l</span></pre></td></tr></table></figure><p>1.MySQL 配置文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat my.cnf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># this is read by the standalone daemon and embedded servers</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>client<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">port</span><span class=\"token operator\">=</span><span class=\"token number\">3306</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">socket</span><span class=\"token operator\">=</span>/tmp/mysql.socket</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#This For server</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>server<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">innodb_buffer_pool_size</span><span class=\"token operator\">=</span>8G</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">innodb_buffer_pool_instances</span><span class=\"token operator\">=</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">innodb_buffer_pool_load_at_startup</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">innodb_buffer_pool_dump_at_shutdown</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">innodb_data_file_path</span><span class=\"token operator\">=</span>ibdata1:1G:autoextend</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">innodb_flush_log_at_trx_commit</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">innodb_log_buffer_size</span><span class=\"token operator\">=</span>32M</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">innodb_log_file_size</span><span class=\"token operator\">=</span>2G</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">innodb_log_files_in_group</span><span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">innodb_max_undo_log_size</span><span class=\"token operator\">=</span>4G</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">innodb_undo_directory</span><span class=\"token operator\">=</span>undolog</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">innodb_undo_tablespaces</span><span class=\"token operator\">=</span><span class=\"token number\">95</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#this is ysqld stand alone daemon</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token assign-left variable\">port</span><span class=\"token operator\">=</span><span class=\"token number\">3306</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token assign-left variable\">socket</span><span class=\"token operator\">=</span>/tmp/mysql.sock</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">basedir</span><span class=\"token operator\">=</span>/usr/local/mysql</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token assign-left variable\">datadir</span><span class=\"token operator\">=</span>/data/mysql</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pid-file<span class=\"token operator\">=</span>/data/mysql/mysql.pid</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token assign-left variable\">user</span><span class=\"token operator\">=</span>mysql</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>bind-address<span class=\"token operator\">=</span><span class=\"token number\">0.0</span>.0.0</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token assign-left variable\">sort_buffer_size</span><span class=\"token operator\">=</span>16M</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token assign-left variable\">join_buffer_size</span><span class=\"token operator\">=</span>16M</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token assign-left variable\">thread_cache_size</span><span class=\"token operator\">=</span><span class=\"token number\">3000</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token assign-left variable\">interactive_timeout</span><span class=\"token operator\">=</span><span class=\"token number\">600</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token assign-left variable\">wait_timeout</span><span class=\"token operator\">=</span><span class=\"token number\">600</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#This Form ysqld_safe</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>mysqld_safe<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>log-error<span class=\"token operator\">=</span>/var/log/mariadb/mariadb.log</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>pid-file<span class=\"token operator\">=</span>/var/run/mariadb/mariadb.pid</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token assign-left variable\">max_connections</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token assign-left variable\">open_files_limit</span><span class=\"token operator\">=</span><span class=\"token number\">65535</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token assign-left variable\">thread_stack</span><span class=\"token operator\">=</span>512K</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>external-locking<span class=\"token operator\">=</span>FALSE</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token assign-left variable\">max_allowed_packet</span><span class=\"token operator\">=</span>32M</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#this is only for embedded server</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">[</span>embedded<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token assign-left variable\">gtid_mode</span><span class=\"token operator\">=</span>on</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token assign-left variable\">enforce_gtid_consistency</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>log_slave_updates</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>slave-rows-search-algorithms<span class=\"token operator\">=</span><span class=\"token string\">'INDEX_SCAN,HASH_SCAN'</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token assign-left variable\">binlog_format</span><span class=\"token operator\">=</span>row</pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token assign-left variable\">binlog_checksum</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token assign-left variable\">relay_log_recovery</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>relay-log-purge<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">#mysqld configure</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">[</span>mysqld-5.0<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token assign-left variable\">key_buffer_size</span><span class=\"token operator\">=</span>32M</pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token assign-left variable\">read_buffer_size</span><span class=\"token operator\">=</span>8M</pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token assign-left variable\">read_rnd_buffer_size</span><span class=\"token operator\">=</span>16M</pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token assign-left variable\">bulk_insert_buffer_size</span><span class=\"token operator\">=</span>64M</pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token assign-left variable\">myisam_sort_buffer_size</span><span class=\"token operator\">=</span>128M</pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token assign-left variable\">myisam_max_sort_file_size</span><span class=\"token operator\">=</span>10G</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token assign-left variable\">myisam_repair_threads</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token assign-left variable\">lock_wait_timeout</span><span class=\"token operator\">=</span><span class=\"token number\">3600</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token assign-left variable\">explicit_defaults_for_timestamp</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token assign-left variable\">innodb_file_per_table</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p>2. 需求实现</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat mysql_sed.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bah</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#1. 先定义函数，拿到 [] 中的名字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function-name function\">get_mysql_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/^\\[/p'</span> my.cnf  <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/\\[//'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/\\]//'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function-name function\">get_mysql_number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'/\\['</span><span class=\"token variable\">$1</span><span class=\"token string\">'\\]/,/\\[.*\\]/p'</span> my.cnf  <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'/\\[|^$|#/d'</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span>  <span class=\"token variable\"><span class=\"token variable\">$(</span>get_mysql_name<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token assign-left variable\">numbers</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>get_mysql_number $i<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$index</span>: <span class=\"token variable\">$i</span>         <span class=\"token variable\">$numbers</span>\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$index</span> + <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure>",
            "tags": [
                "Shell"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/4281775956.html",
            "url": "http://ixuyong.cn/posts/4281775956.html",
            "title": "Shell循环控制-for-while",
            "date_published": "2025-09-27T13:15:55.000Z",
            "content_html": "<h3 id=\"shell循环控制-for-while\"><a class=\"anchor\" href=\"#shell循环控制-for-while\">#</a> Shell 循环控制 - for-while</h3>\n<h4 id=\"1for循环\"><a class=\"anchor\" href=\"#1for循环\">#</a> <strong>1.for</strong> 循环</h4>\n<h5 id=\"11-什么是循环\"><a class=\"anchor\" href=\"#11-什么是循环\">#</a> <strong>1.1</strong> <strong>什么是循环</strong></h5>\n<ul>\n<li>脚本在执行任务的时候，总会遇到需要循环执行的时候。</li>\n<li>场景：批量创建 100 个用户，我们就需要使用循环来实现</li>\n</ul>\n<h5 id=\"12-什么是for循环\"><a class=\"anchor\" href=\"#12-什么是for循环\">#</a> <strong>1.2</strong> <strong>什么是</strong> for 循环</h5>\n<ul>\n<li>很多人把 for 循环叫做条件循环；</li>\n<li>因为 for 循环的次数和给予的条件是成正比的，也就是你给 5 个条件，那么他就循环 5 次；</li>\n</ul>\n<h5 id=\"13-for循环基础语法\"><a class=\"anchor\" href=\"#13-for循环基础语法\">#</a> <strong>1.3 for</strong> 循环基础语法</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1.for 循环基础语法示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for1.sh </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> a b c </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#2.for 循环基础语法示例</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for1.sh </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#3.for 循环基础语法示例</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for1.sh </span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#4.for 循环基础语法示例</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for1.sh </span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span>\t<span class=\"token comment\"># 设置步长</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#4.for 循环基础语法示例</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for1.sh </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>for 循环默认使用空格为分隔符，可以使用 IFS 来自定义分隔符</p>\n<ul>\n<li>以冒号做分隔符 IFS=:</li>\n<li>以换行符做为字段分隔符 IFS=$'\\n'</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token string\">$'<span class=\"token entity\" title=\"\\n\">\\n</span>'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/hosts<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"14-for循环通过文件创建用户脚本\"><a class=\"anchor\" href=\"#14-for循环通过文件创建用户脚本\">#</a> <strong>1.4 for</strong> 循环通过文件创建用户脚本</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat user.txt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xuyong:123456</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>zhangwuji:123456</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>zhaomin:123456</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>xiexun:123456</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>yangxiao:123456</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-4.sh </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-25</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#FileName   : for-4.sh</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /root/user.txt<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token assign-left variable\">user</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $i <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $1&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token assign-left variable\">pass</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $i <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">id</span> <span class=\"token variable\">$&#123;user&#125;</span> <span class=\"token operator\">&amp;></span> /dev/null</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">useradd</span> <span class=\"token variable\">$&#123;user&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$pass</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">passwd</span> <span class=\"token parameter variable\">--stdin</span> <span class=\"token variable\">$user</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        action <span class=\"token string\">\"User Created Successfully\"</span> /bin/true</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        action <span class=\"token string\">\"User Already Exists\"</span> /bin/false</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"15-for循环输出整数升序降序脚本\"><a class=\"anchor\" href=\"#15-for循环输出整数升序降序脚本\">#</a> <strong>1.5 for</strong> 循环输出整数升序降序脚本</h5>\n<p>需求：同时输出 1-9 的升序和降序</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-5.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">b</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$a</span> <span class=\"token variable\">$b</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">#let a--</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">#let b++</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token parameter variable\">-1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token assign-left variable\">b</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$b</span> + <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"16-for循环计算10以内整除3脚本\"><a class=\"anchor\" href=\"#16-for循环计算10以内整除3脚本\">#</a> 1.6 for 循环计算 10 以内整除 3 脚本</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-6.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">num</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token assign-left variable\">sum</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> % <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$sum</span>  <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token assign-left variable\">num</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$num</span> + <span class=\"token variable\">$i</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$num</span></pre></td></tr></table></figure><h5 id=\"17-for循环计算123n的值脚本\"><a class=\"anchor\" href=\"#17-for循环计算123n的值脚本\">#</a> <strong>1.7 for</strong> 循环计算 1+2+3+n 的值脚本</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo &#123;1..8769&#125; | xargs | sed 's# #+#g' | bc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-7.sh </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">sum</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">8769</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token assign-left variable\">sum</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$sum</span> + <span class=\"token variable\">$i</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$sum</span></pre></td></tr></table></figure><h4 id=\"2for循环案例\"><a class=\"anchor\" href=\"#2for循环案例\">#</a> <strong>2.for</strong> 循环案例</h4>\n<h5 id=\"21-探测主机存活性脚本\"><a class=\"anchor\" href=\"#21-探测主机存活性脚本\">#</a> <strong>2.1</strong> <strong>探测主机存活性脚本</strong></h5>\n<p>需求 1：</p>\n<ol>\n<li>批量探测某个网段的主机存活状态；</li>\n<li>通过 for 循环遍历出所有的 IP 地址；</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-8.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">254</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.40.<span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">ping</span> <span class=\"token parameter variable\">-c1</span> <span class=\"token parameter variable\">-W1</span> <span class=\"token variable\">$ip</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ip</span> ok\"</span> <span class=\"token operator\">>></span> ip_ok.txt</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ip</span> ok\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function\">wait</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"done..\"</span></pre></td></tr></table></figure><p>需求 2：将所有的 IP 地址写入到一个文本文件中，批量探测主机存活状态</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># seq 254 | sed -r 's#(.*)#192.168.40.\\1#g' > ip.tx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-9.sh </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">ip</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> ip.txt<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">ping</span> <span class=\"token parameter variable\">-c1</span> <span class=\"token parameter variable\">-W1</span> <span class=\"token variable\">$ip</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ip</span> ok\"</span> <span class=\"token operator\">>></span> ip_ok.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ip</span> ok\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">wait</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"done..\"</span></pre></td></tr></table></figure><p><font style=\"color:rgb(51, 51, 51);\">需求 3：批量探测某个网段的主机存活状态，要求判断三次，如果三次失败则失败；</font></p>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[root@client ~]# cat for-8.sh </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> #!/bin/bash</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> for i in &#123;1..254&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> do</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     ip=192.168.40.$i</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     ping -c1 -W1 $ip &amp;>/dev/null</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     if [ $? -ne 0 ];then</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         for j in &#123;1..3&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         do</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                 ping -c1 -W1 $ip &amp;>/dev/null</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>             if [ $? -eq 0 ];then</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                 echo \"$ip探测第$j次才OK\"</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                 break</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>             else</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                 echo \"$ip探测$j次不通\"</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>             fi</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         done</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     else</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                 echo \"$ip 通\" </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     fi</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> done</pre></td></tr></table></figure><h5 id=\"font-stylecolorrgb51-51-51font22-探测主机开放端口脚本\"><a class=\"anchor\" href=\"#font-stylecolorrgb51-51-51font22-探测主机开放端口脚本\">#</a> <font style=\"color:rgb(51, 51, 51);\"></font>2.2 探测主机开放端口脚本</h5>\n<p>需求：</p>\n<ol>\n<li>有一个 ip.txt 的文件，里面有很多 IP 地址。</li>\n<li>有一个 port.txt 的文件，里面有很多端口号。</li>\n<li>现在希望对 ip.txt 的每个 IP 地址进行 port.txt 文件中的端口号进行挨个探测。</li>\n<li>最后将开放的端口和 IP 保存到一个 ok.txt 文件。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-8.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#外层循环</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">ip</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> ip.txt<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 内循环</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">port</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> port.txt<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 探测 ip+pprt</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">nc</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$ip</span> <span class=\"token variable\">$port</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$port</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"80\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\e\">\\e</span>[31m <span class=\"token variable\">$ip</span> 的 <span class=\"token variable\">$port</span>开放了，比较危险..<span class=\"token entity\" title=\"\\e\">\\e</span>[0m\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\e\">\\e</span>[32m <span class=\"token variable\">$ip</span> 的 <span class=\"token variable\">$port</span> 开放了.. <span class=\"token entity\" title=\"\\e\">\\e</span>[0m\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"23-获取系统普通用户脚本\"><a class=\"anchor\" href=\"#23-获取系统普通用户脚本\">#</a> <strong>2.3</strong> <strong>获取系统普通用户脚本</strong></h5>\n<p>需求：获取系统的所有用户并输出。效果如下:</p>\n<ul>\n<li>This is 1 user: root</li>\n<li>This is 2 user: bin</li>\n<li>This is 3 user: daemon</li>\n<li>This is 4 user: adm</li>\n<li>..............</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-9.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token string\">$'<span class=\"token entity\" title=\"\\n\">\\n</span>'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/passwd<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      \t<span class=\"token assign-left variable\">user</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $i <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $1&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"This is <span class=\"token variable\">$&#123;index&#125;</span> user: <span class=\"token variable\">$&#123;user&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      \t<span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$index</span>+1 <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"24-获取普通用户对应的组脚本\"><a class=\"anchor\" href=\"#24-获取普通用户对应的组脚本\">#</a> <strong>2.4</strong> <strong>获取普通用户对应的组脚本</strong></h5>\n<p>需求：</p>\n<ol>\n<li>获取已存在的普通用户对应的基本组以及附加组</li>\n<li>用户名称: u1, 基本组: 1002 (u1), 附加组：1001 (grp1) 1007 (oldxu)</li>\n<li>用户名称: u2, 基本组: 1003 (u2), 附加组：1001 (grp1)</li>\n<li>用户名称: oldxu, 基本组: 1007 (oldxu), 附加组：Null</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">pass_file</span><span class=\"token operator\">=</span>/etc/passwd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#1. 获取用户名称</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">users</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $1&#125;'</span> $<span class=\"token punctuation\">&#123;</span>pass_file<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$users</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">#3. 获取用户的基本组</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token assign-left variable\">group</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">id</span> $<span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span>  <span class=\"token string\">\"groups\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'='</span> <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">\",\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'NR==1'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">#4. 获取附加组</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token assign-left variable\">groups</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">id</span> $<span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span>  <span class=\"token string\">\"groups\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'='</span> <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">\",\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'NR>1'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$groups</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"用户名称: <span class=\"token variable\">$&#123;i&#125;</span>, 基本组: <span class=\"token variable\">$&#123;group&#125;</span>, 附加组: Null\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"用户名称: <span class=\"token variable\">$&#123;i&#125;</span>, 基本组: <span class=\"token variable\">$&#123;group&#125;</span>, 附加组: <span class=\"token variable\">$&#123;groups&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"25-对mysql数据库进行备份\"><a class=\"anchor\" href=\"#25-对mysql数据库进行备份\">#</a> <strong>2.5</strong> 对 MySQL 数据库进行备份</h5>\n<p>场景 1：备份 MySQL 数据库，将每个库都备份一个 sql 文件，存储至 /backup/mysql/2025-9-27/xx.sql</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-10.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">Db_Name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mysql <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"show databases;\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> 1d <span class=\"token operator\">|</span> <span class=\"token function\">egrep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"*_schema\"</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">Date</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">DB_Dir</span><span class=\"token operator\">=</span>/backup/mysql/<span class=\"token variable\">$&#123;Date&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 确保备份的目录是存在的</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token variable\">$&#123;DB_Dir&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$&#123;DB_Dir&#125;</span>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 备份业务逻辑</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">database</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;Db_Name&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    mysqldump <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-B</span> <span class=\"token variable\">$&#123;database&#125;</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;DB_Dir&#125;</span>/<span class=\"token variable\">$&#123;database&#125;</span>.sql</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 判断文件是否有内容</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-s</span> <span class=\"token variable\">$&#123;DB_Dir&#125;</span>/<span class=\"token variable\">$&#123;database&#125;</span>.sql <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        action <span class=\"token string\">\"<span class=\"token variable\">$&#123;DB_Dir&#125;</span>/<span class=\"token variable\">$&#123;database&#125;</span>.sql 备份成功\"</span> /bin/true</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        action <span class=\"token string\">\"<span class=\"token variable\">$&#123;DB_Dir&#125;</span>/<span class=\"token variable\">$&#123;database&#125;</span>.sql 备份失败\"</span> /bin/false</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>场景 2：对 MySQL 数据库进行分库分表备份，存储至 /backup/mysql/2025-9-27/database/tables.sql</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-10.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">DB_Name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mysql <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"show databases;\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> 1d <span class=\"token operator\">|</span> <span class=\"token function\">egrep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"*_schema\"</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">Date</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">DB_Dir</span><span class=\"token operator\">=</span>/backup/mysql/<span class=\"token variable\">$&#123;Date&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 外循环，提取库的名称</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">database</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;DB_Name&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\"># 创建库对应的备份目录</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token variable\">$DB_Dir</span>/<span class=\"token variable\">$database</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  \t\t<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"<span class=\"token variable\">$DB_Dir</span>/<span class=\"token variable\">$database</span>\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\"># 提取表名称</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token assign-left variable\">TB_Name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mysql <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"use <span class=\"token variable\">$&#123;database&#125;</span>;show tables;\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> 1d<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\"># 内循环，基于库名称然后取获取表名称</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">table</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;TB_Name&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tmysqldump <span class=\"token parameter variable\">-uroot</span> <span class=\"token variable\">$&#123;database&#125;</span> <span class=\"token variable\">$&#123;table&#125;</span> <span class=\"token operator\">></span> <span class=\"token variable\">$DB_Dir</span>/<span class=\"token variable\">$&#123;database&#125;</span>/<span class=\"token variable\">$&#123;table&#125;</span>.sql</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-s</span> <span class=\"token variable\">$DB_Dir</span>/<span class=\"token variable\">$&#123;database&#125;</span>/<span class=\"token variable\">$&#123;table&#125;</span>.sql <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    \t\t\taction <span class=\"token string\">\"<span class=\"token variable\">$DB_Dir</span>/<span class=\"token variable\">$&#123;database&#125;</span>/<span class=\"token variable\">$&#123;table&#125;</span>.sql 备份成功\"</span> /bin/true</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    \t\t\taction <span class=\"token string\">\"<span class=\"token variable\">$DB_Dir</span>/<span class=\"token variable\">$&#123;database&#125;</span>/<span class=\"token variable\">$&#123;table&#125;</span>.sql 备份失败\"</span> /bin/false</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"26-实现九九乘法表脚本\"><a class=\"anchor\" href=\"#26-实现九九乘法表脚本\">#</a> <strong>2.6</strong> <strong>实现九九乘法表脚本</strong></h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-10.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 内循环</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">j</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$j</span> * <span class=\"token variable\">$i</span> = $[ <span class=\"token variable\">$i</span> * <span class=\"token variable\">$j</span> ] \"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          \t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token variable\">$j</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            \t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            \t\t<span class=\"token builtin class-name\">break</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          \t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"27-随机点名脚本\"><a class=\"anchor\" href=\"#27-随机点名脚本\">#</a> <strong>2.7</strong> <strong>随机点名脚本</strong></h5>\n<p>需求：</p>\n<ul>\n<li>1. 执行脚本拿到一位同学的名字；</li>\n<li>2. 被点过的同学，不会在出现第二次；</li>\n<li>3. 该点名脚本将所有的同学都点到过之后，文件就空了，空了就提示请重置；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-10.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#重置操作</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-s</span> user.txt <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"所有的同学都被点到过了,是否需要重置 [ yes | no ]:\"</span> Action</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;Action<span class=\"token operator\">:=</span>yes&#125;</span>  <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">cat</span> user_new.txt <span class=\"token operator\">></span> user.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> user_new.txt\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"重置成功，可以继续\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">fi</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">file</span><span class=\"token operator\">=</span>user.txt</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">RANDOm</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$RANDOM</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">file_line</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> $<span class=\"token punctuation\">&#123;</span>file<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">sj</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;RANDOm&#125;</span> % <span class=\"token variable\">$&#123;file_line&#125;</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;sj&#125;</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token assign-left variable\">sj</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$sj</span> + <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">Full_Name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;sj&#125;</span>p\"</span> user.txt<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"此次回答问题的是: <span class=\"token variable\">$&#123;Full_Name&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 备份的</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;sj&#125;</span>p\"</span> user.txt <span class=\"token operator\">>></span> user_new.txt</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;sj&#125;</span>d\"</span> user.txt</pre></td></tr></table></figure><h5 id=\"28-模拟恢复误删除文件\"><a class=\"anchor\" href=\"#28-模拟恢复误删除文件\">#</a> <strong>2.8</strong> <strong>模拟恢复误删除文件</strong></h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat for-10.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">pid</span><span class=\"token operator\">=</span><span class=\"token number\">23416</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">thread_id</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>pstree <span class=\"token parameter variable\">-p</span> $<span class=\"token punctuation\">&#123;</span>pid<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span> <span class=\"token function\">egrep</span> <span class=\"token parameter variable\">-o</span> <span class=\"token string\">\"[0-9]+\"</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># thread_id 拿到很多线程的 id 号码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">iid</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;thread_id&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\"># 线程的一个 ID</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token assign-left variable\">fd</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /proc/$<span class=\"token punctuation\">&#123;</span>iid<span class=\"token punctuation\">&#125;</span>/fd <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"deleted\"</span> <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $9&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">id</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;fd&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\"># 基于文件描述符，提取对应的文件名称</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token assign-left variable\">fd_file</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /proc/$<span class=\"token punctuation\">&#123;</span>pid<span class=\"token punctuation\">&#125;</span>/fd/$<span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $11&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\"># 恢复操作</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">cat</span> /proc/<span class=\"token variable\">$&#123;pid&#125;</span>/fd/<span class=\"token variable\">$&#123;id&#125;</span> <span class=\"token operator\">></span> <span class=\"token variable\">$fd_file</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\"># 恢复后的文件获取 md5 值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token assign-left variable\">hf_file_md5</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>md5sum <span class=\"token string\">\"<span class=\"token variable\">$&#123;fd_file&#125;</span>\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\"># 源文件</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token assign-left variable\">src_file_md5</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>md5sum <span class=\"token string\">\"<span class=\"token variable\">$&#123;fd_file<span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>soft&#125;</span>\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;hf_file_md5&#125;</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;src_file_md5<span class=\"token operator\">:=</span>xxx&#125;</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\taction <span class=\"token string\">\" <span class=\"token variable\">$fd_file</span> 成功\"</span> /bin/true</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\taction <span class=\"token string\">\" <span class=\"token variable\">$fd_file</span> 失败\"</span> /bin/false</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h4 id=\"3while循环\"><a class=\"anchor\" href=\"#3while循环\">#</a> <strong>3.while</strong> 循环</h4>\n<h5 id=\"31-什么是while\"><a class=\"anchor\" href=\"#31-什么是while\">#</a> <strong>3.1</strong> <strong>什么是</strong> while</h5>\n<p>while 在 shell 中也是负责循环的语句，和 for 一样。</p>\n<h5 id=\"32-while与for如何选\"><a class=\"anchor\" href=\"#32-while与for如何选\">#</a> <strong>3.2 while</strong> 与 for 如何选</h5>\n<p>因为功能一样，很多人在学习和工作中的脚本遇到循环到底该使用 for 还是 while 呢？很多人不知道，就会出现有人一遇循环就使用 for、有人一遇循环就使用 while，到底选 for 好还是 while 好：</p>\n<ul>\n<li>1. 知道循环次数的使用 for，比如一天循环 24 次；</li>\n<li>2. 如果不知道要循环多少次，那就用 while，比如猜数字游戏，每个人猜对的次数是未知的</li>\n</ul>\n<h5 id=\"33-while循环基础语法\"><a class=\"anchor\" href=\"#33-while循环基础语法\">#</a> <strong>3.3 while</strong> 循环基础语法</h5>\n<p>1.while 循环基本使用示例，降序输出 10 到 1 的数字</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-1.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$var</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$var</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span><span class=\"token variable\">$var</span>-1<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>2.while 循环基本使用示例，输出如下图，两数相乘</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span><span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">var2</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$var</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$var</span> * <span class=\"token variable\">$var2</span> = $[ <span class=\"token variable\">$var</span> * <span class=\"token variable\">$var2</span> ]\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$var</span> <span class=\"token parameter variable\">-1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token assign-left variable\">var2</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$var2</span> + <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p><strong>3.4 while</strong> 嵌套整数比对</p>\n<p>循环嵌套整数比对，判断用户输入的数值是否大于 0，如果大于 0，则三秒输出一次大于。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入数字: \"</span> num</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$num</span> <span class=\"token parameter variable\">-ge</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"大于\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">sleep</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"35-while嵌套文件比对\"><a class=\"anchor\" href=\"#35-while嵌套文件比对\">#</a> <strong>3.5 while</strong> 嵌套文件比对</h5>\n<p>循环嵌套文件比较，判断 /tmp/oldxu 文件是否存在。</p>\n<ul>\n<li>如果不存在则 3s 输出一次 not found</li>\n<li>如果存在自动退出</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> /tmp/oldxu <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"not found /tmp/oldxu\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">sleep</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"36-while嵌套字符比对\"><a class=\"anchor\" href=\"#36-while嵌套字符比对\">#</a> <strong>3.6 while</strong> 嵌套字符比对</h5>\n<p>循环嵌套字符比较，判断用户输入的用户名，如果不是 root 则一直让其输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Login: \"</span> account</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$account</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'root'</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Login: \"</span> account</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"37-while循环控制语句\"><a class=\"anchor\" href=\"#37-while循环控制语句\">#</a> <strong>3.7 while</strong> 循环控制语句</h5>\n<p>在使用循环语句进行循环的过程中，有时候需要在未达到循环结束条件时强制跳出循环；</p>\n<p>那么 Shell 给我们提供了内置方法来实现该功能：exit、break、continue</p>\n<h6 id=\"371-exit方法\"><a class=\"anchor\" href=\"#371-exit方法\">#</a> <strong>3.7.1 exit</strong> 方法</h6>\n<ul>\n<li>exit，退出整个程序。</li>\n<li>当脚本碰到 exit 时，直接退出，剩余不管有多少代码都不执行。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"123\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"456\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Done.....\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh while1.sh </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr></table></figure><h6 id=\"372-break方法\"><a class=\"anchor\" href=\"#372-break方法\">#</a> <strong>3.7.2 break</strong> 方法</h6>\n<p>break，结束当前循环</p>\n<p>当脚本碰到 break 时，会结束当前循环，但会执行循环之后的所有的代码。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"123\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">break</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"456\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Done.....\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh while1.sh </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Done<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><h6 id=\"373-continue方法\"><a class=\"anchor\" href=\"#373-continue方法\">#</a> <strong>3.7.3 continue</strong> 方法</h6>\n<ul>\n<li>continue 忽略本次循环剩余的所有代码.</li>\n<li>当脚本碰到 continue 时，直接进入下一次循环，直到循环结束，然后继续执行循环之后的代码。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"123\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"456\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Done.....\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh while1.sh </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Done<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><h6 id=\"374-while嵌套continue\"><a class=\"anchor\" href=\"#374-while嵌套continue\">#</a> <strong>3.7.4 while</strong> 嵌套 continue</h6>\n<p>需求：循环嵌套 continue，打印 1-9 当数值为 5 则跳过本次循环，继续下一次循环。请分别使用 for 和</p>\n<p>while 实现 1234 6789</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h6 id=\"375-while嵌套break\"><a class=\"anchor\" href=\"#375-while嵌套break\">#</a> <strong>3.7.5 while</strong> 嵌套 break</h6>\n<p>需求：循环嵌套 break，打印 1-9 当数值为 5 则停止。请分别使用 for 和 while 实现。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">#continue</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin class-name\">break</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"38-while循环案例\"><a class=\"anchor\" href=\"#38-while循环案例\">#</a> <strong>3.8. while</strong> 循环案例</h5>\n<h6 id=\"381-猜测随机数字脚本\"><a class=\"anchor\" href=\"#381-猜测随机数字脚本\">#</a> <strong>3.8.1</strong> <strong>猜测随机数字脚本</strong></h6>\n<p>猜数字游戏</p>\n<ul>\n<li>1) 随机输出一个 1-100 的数字</li>\n<li>2) 要求用户输入的必须是数字（数字处加判断）</li>\n<li>3) 如果比随机数小则提示比随机数小了 大则提示比随机数大了</li>\n<li>4) 正确则退出 错误则继续死循环</li>\n<li>5) 最后统计猜了多少次（猜对了多少次，失败多少次)</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat sj.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">sj</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $<span class=\"token punctuation\">[</span> <span class=\"token environment constant\">$RANDOM</span>%100+1 <span class=\"token punctuation\">]</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$sj</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入一个随机数字：\"</span> Num</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Num</span> <span class=\"token operator\">=~</span> ^<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span>+$ <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$index</span>+1 <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Num</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token variable\">$sj</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"恭喜您猜对了，一共猜了<span class=\"token variable\">$&#123;index&#125;</span>次\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Num</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token variable\">$sj</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"您猜的数字太大了！！！\"</span>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"您猜的数字太小了！！！\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h6 id=\"382-破解随机字符串脚本\"><a class=\"anchor\" href=\"#382-破解随机字符串脚本\">#</a> 3.8.2 <strong>破解随机字符串脚本</strong></h6>\n<p>字符串 efbaf275cd、4be9c40b8b、44b2395c46 是通过对随机数变量 RANDOM 随机执行命令： echo$RANDOM|md5sum|cut -c1-10 后的结果，请破解这些字符串对应的 RANDOM 值。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while2.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> efbaf275cd 4be9c40b8b 44b2395c46</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token assign-left variable\">num</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">do</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token assign-left variable\">md5_sum</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $<span class=\"token punctuation\">&#123;</span>num<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span><span class=\"token function\">cut</span> -c1-10<span class=\"token variable\">)</span></span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;md5_sum&#125;</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$i</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;num&#125;</span>加密后结果是<span class=\"token variable\">$&#123;md5_sum&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token builtin class-name\">break</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token assign-left variable\">num</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$num</span> + <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh while2.sh </span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">15000</span>加密后结果是efbaf275cd</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">12000</span>加密后结果是4be9c40b8b</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">9000</span>加密后结果是44b2395c46</pre></td></tr></table></figure><h6 id=\"383-通过文本创建用户脚本\"><a class=\"anchor\" href=\"#383-通过文本创建用户脚本\">#</a> <strong>3.8.3</strong> <strong>通过文本创建用户脚本</strong></h6>\n<ul>\n<li>\n<p>通过读入文件中的用户与密码文件，进行批量添加用户。</p>\n</li>\n<li>\n<p>文件中的格式: user:passwd</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while-3.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># for 是按照空格作为分隔符读取</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># while 是按照行来读取的文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token assign-left variable\">user</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $line <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $1&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token assign-left variable\">pass</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $line <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">id</span> <span class=\"token variable\">$user</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">useradd</span> <span class=\"token variable\">$user</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$pass</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">passwd</span> <span class=\"token parameter variable\">--stdin</span> <span class=\"token variable\">$user</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$user</span> <span class=\"token variable\">$pass</span> created successfully\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">fi</span>   </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>done<span class=\"token operator\">&lt;</span>user.txt</pre></td></tr></table></figure><h6 id=\"385-防止ssh暴力破解脚本\"><a class=\"anchor\" href=\"#385-防止ssh暴力破解脚本\">#</a> <strong>3.8.5</strong> <strong>防止</strong> ssh 暴力破解脚本</h6>\n<ul>\n<li>如果使用 oldxu 用户登录系统，则立即将其踢出，然后将其拉入黑名单，以防止该用户继续使用该 IP 地址进行登录。</li>\n<li>将 sshd:username ip 地址 内容写至 /etc/hosts.deny，则可拒绝用户登陆系统。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat deny_user.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span>oldxu</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token assign-left variable\">login_user</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">who</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> $<span class=\"token punctuation\">&#123;</span>User<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token assign-left variable\">deny_file</span><span class=\"token operator\">=</span>/etc/hosts.deny</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$login_user</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 说明用户是存在</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token assign-left variable\">login_user_ip</span><span class=\"token operator\">=</span><span class=\"token punctuation\">$(</span>who <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token variable\">$&#123;User&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $NF&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'[()]'</span> <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">sort</span> <span class=\"token operator\">|</span><span class=\"token function\">uniq</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 写入限制</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"sshd:<span class=\"token variable\">$&#123;User&#125;</span> <span class=\"token variable\">$&#123;login_user_ip&#125;</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;deny_file&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># 剔除用户</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">pkill</span> <span class=\"token parameter variable\">-9</span> <span class=\"token parameter variable\">-u</span> <span class=\"token variable\">$&#123;User&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        action  <span class=\"token string\">\"探测 <span class=\"token variable\">$&#123;User&#125;</span> 已经登录系统, 已被干掉\"</span> /bin/false</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$index</span> + <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        action <span class=\"token string\">\"探测 <span class=\"token variable\">$&#123;User&#125;</span> 是否登录系统, 第 <span class=\"token variable\">$&#123;index&#125;</span> 次，目前正常\"</span> /bin/true</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">sleep</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h6 id=\"386-99乘法表\"><a class=\"anchor\" href=\"#386-99乘法表\">#</a> <strong>3.8.6</strong> 9*9 乘法表</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat while.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">num1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$num1</span> <span class=\"token parameter variable\">-le</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token assign-left variable\">num2</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">#内循环小于等于外循环，则条件成立</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$num2</span> <span class=\"token parameter variable\">-le</span> <span class=\"token variable\">$num1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$num1</span> * <span class=\"token variable\">$num2</span> = $[ <span class=\"token variable\">$num1</span>* <span class=\"token variable\">$num2</span> ]  \"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token assign-left variable\">num2</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$num2</span> +1 <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token assign-left variable\">num1</span><span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span> <span class=\"token variable\">$num1</span> + <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure>",
            "tags": [
                "Shell"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/4031268474.html",
            "url": "http://ixuyong.cn/posts/4031268474.html",
            "title": "Shell流程控制-if-case",
            "date_published": "2025-09-27T13:15:31.000Z",
            "content_html": "<h3 id=\"shell流程控制-if-case\"><a class=\"anchor\" href=\"#shell流程控制-if-case\">#</a> Shell 流程控制 - if-case</h3>\n<h4 id=\"1if判断语句\"><a class=\"anchor\" href=\"#1if判断语句\">#</a> 1.if 判断语句</h4>\n<h5 id=\"11-什么是if\"><a class=\"anchor\" href=\"#11-什么是if\">#</a> <strong>1.1</strong> <strong>什么是</strong> if</h5>\n<p>if 就是模仿人类的判断来进行的，但它没有人类那么有情感，只有 True 和 False 这两种结果。</p>\n<h5 id=\"12-为何要使用if\"><a class=\"anchor\" href=\"#12-为何要使用if\">#</a> <strong>1.2</strong> <strong>为何要使用</strong> if</h5>\n<ul>\n<li>当我们在写程序的时候，经常需要对上一步的执行结果进行判断，那么判断就需要使用 if 语句来实现；</li>\n<li>if 语句在我们程序中主要就是用来做判断的；</li>\n<li>不管大家以后学习什么语言，以后只要涉及到判断的部分，大家就可以直接拿 if 来使用；</li>\n<li>不同的语言之间的 if 只是语法不同，原理是相同的。</li>\n</ul>\n<h5 id=\"13-if的基础语法\"><a class=\"anchor\" href=\"#13-if的基础语法\">#</a> <strong>1.3 if</strong> 的基础语法</h5>\n<h6 id=\"131-单分支结构\"><a class=\"anchor\" href=\"#131-单分支结构\">#</a> <strong>1.3.1</strong> 单分支结构</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 单分支代码示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token variable\">$2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ok\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"132-双分支结构\"><a class=\"anchor\" href=\"#132-双分支结构\">#</a> <strong>1.3.2</strong> <strong>双分支结构</strong></h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 双分支代码示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token variable\">$2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ok!\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"error!\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"133-多分支结构\"><a class=\"anchor\" href=\"#133-多分支结构\">#</a> <strong>1.3.3</strong> <strong>多分支结构</strong></h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 多分支结构</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 如果你有房 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    我就嫁给你</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> 你有车 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    我就嫁给你</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> 你有钱 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    我就嫁给你</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    再见</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"14-if分支场景\"><a class=\"anchor\" href=\"#14-if分支场景\">#</a> <strong>1.4 if</strong> 分支场景</h5>\n<h6 id=\"141-单分支脚本案例\"><a class=\"anchor\" href=\"#141-单分支脚本案例\">#</a> 1.4.1 单分支脚本案例</h6>\n<p>需求：判断当前用户是不是 root，如果不是那么返回 ERROR</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-1.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token environment constant\">$USER</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'root'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ERROR\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"142-双分支脚本案例\"><a class=\"anchor\" href=\"#142-双分支脚本案例\">#</a> <strong>1.4.2</strong> <strong>双分支脚本案例</strong></h6>\n<p>需求：判断当前登录用户是管理员还是普通用户</p>\n<ul>\n<li>如果是管理员输出 hey admin</li>\n<li>如果是普通用户输出 hey guest</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-2.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token environment constant\">$USER</span> <span class=\"token operator\">==</span> <span class=\"token string\">'root'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hey admin\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hey guest\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"143-多分支脚本案例\"><a class=\"anchor\" href=\"#143-多分支脚本案例\">#</a> <strong>1.4.3</strong> <strong>多分支脚本案例</strong></h6>\n<p>需求：通过脚本传入两个参数，进行整数关系比较。</p>\n<p>比如： <a href=\"http://if.sh\">if.sh</a> [1 2 | 2 2 | 2 3]，请使用双分支和多分支两种方式实现。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 双分支 (嵌套)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token variable\">$2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> = <span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token variable\">$2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> > <span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> &lt; <span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">fi</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p>多分支结构实现</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token variable\">$2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> = <span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token variable\">$2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> > <span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> &lt; <span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"15-if基于文件比较\"><a class=\"anchor\" href=\"#15-if基于文件比较\">#</a> <strong>1.5 if</strong> 基于文件比较</h5>\n<p>if 语句中的文件比较</p>\n<ul>\n<li>-e：如果文件或目录存在则为真</li>\n<li>-s：如果文件存在且至少有一个字符则为真</li>\n<li>-d：如果文件存在且为目录则为真</li>\n<li>-f：如果文件存在且为普通文件则为真</li>\n<li>-r：如果文件存在且可读则为真</li>\n<li>-w：如果文件存在且可写则为真</li>\n<li>-x：如果文件存在且可执行则为真</li>\n</ul>\n<h6 id=\"151-备份脚本案例1\"><a class=\"anchor\" href=\"#151-备份脚本案例1\">#</a> <strong>1.5.1</strong> 备份脚本案例 1</h6>\n<p>需求 1：备份文件至 /backup/system/filename-2019-10-29，如果该目录不存在则自动创建。</p>\n<ul>\n<li>1. 源文件，让用户手动输入；</li>\n<li>2. 如果备份文件存在则继续，如果备份文件不存在则提示 No such file，然后退出；</li>\n<li>3. 如果备份文件不为空则继续，如果备份文件为空则提示 &quot;This is file empty&quot;，然后退出；</li>\n<li>4. 目标位置：/backup/system/ 判断， 判断该目录是否存在，如果不存在则创建；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-3.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Dest_Dir</span><span class=\"token operator\">=</span>/backup/system/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">Date</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要备份的文件: \"</span> src_file</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#1. 判断文件是否存在</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$&#123;src_file&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;src_file&#125;</span> is not found..\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#2. 判断文件是否为空，如果为空就不用备份，退出即可</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-s</span> <span class=\"token variable\">$&#123;src_file&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;src_file&#125;</span> Content Null...\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\" 是否将 <span class=\"token variable\">$&#123;src_file&#125;</span> 文件备份到 <span class=\"token variable\">$&#123;Dest_Dir&#125;</span>/filename-<span class=\"token variable\">$&#123;Date&#125;</span>  [ yes | no ]\"</span> Action</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#3. 判断目标的目录是否存在</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token variable\">$&#123;Dest_Dir&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$&#123;Dest_Dir&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#4. 执行备份操作</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">cp</span> <span class=\"token parameter variable\">-rp</span> <span class=\"token variable\">$src_file</span> <span class=\"token variable\">$Dest_Dir</span>/filename-<span class=\"token variable\">$&#123;Date&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"152-为执行脚本添加锁\"><a class=\"anchor\" href=\"#152-为执行脚本添加锁\">#</a> **1.5.2 ** 为执行脚本添加锁</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-4.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#1. 判断是否存在锁</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> /tmp/test.lock <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"该脚本正在运行，请稍后再试...\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#2. 加锁</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">touch</span> /tmp/test.lock</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#3. 业务逻辑</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">sleep</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#4. 解锁</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> /tmp/test.lock <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> /tmp/test.lock</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"16-if基于整数比较\"><a class=\"anchor\" href=\"#16-if基于整数比较\">#</a> <strong>1.6 if</strong> 基于整数比较</h5>\n<p>if 语句中的整数比较 [整数 1 操作符 整数 2]</p>\n<ul>\n<li>-eq：等于则条件为真，示例：[1 -eq 10]</li>\n<li>-ne：不等于则条件为真，示例：[1 -ne 10]</li>\n<li>-gt：大于则条件为真，示例：[1 -gt 10]</li>\n<li>-lt：小于则条件为真，示例：[1 -lt 10]</li>\n<li>-ge：大于等于则条件为真，示例：[1 -ge 10]</li>\n<li>-le：小于等于则条件为真，示例：[1 -le 10]</li>\n</ul>\n<h6 id=\"161-检查服务状态脚本\"><a class=\"anchor\" href=\"#161-检查服务状态脚本\">#</a> <strong>1.6.1</strong> <strong>检查服务状态脚本</strong></h6>\n<p>需求：用户执行脚本 sh <a href=\"http://status.sh\">status.sh</a> nginx 则检查 nginx 服务的运行状态。（仅支持传递一个参数）</p>\n<ul>\n<li>1. 控制能传递的参数；</li>\n<li>2. 返回状态为 3，表示没有运行；</li>\n<li>3. 返回状态为 0，表示正在运行；</li>\n<li>4.. 返回状态为 4，表示暂未安装此服务；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-6.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#1. 控制能传递的参数个数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage: <span class=\"token variable\">$0</span> [ nginx | tomcat | php-fpm | mysql ]\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#2. 业务逻辑判断</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>systemctl status <span class=\"token variable\">$1</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">Result</span><span class=\"token operator\">=</span><span class=\"token variable\">$?</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Result</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> Service Is Running...\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Result</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> Service Is Not Running...\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Result</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> Service Is Not Installed\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"是否需要安装 <span class=\"token variable\">$1</span> 这个服务 [Default yes]: \"</span> Action</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;Action<span class=\"token operator\">:=</span>yes&#125;</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        yum <span class=\"token function\">install</span> <span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"162-配置yum仓库脚本\"><a class=\"anchor\" href=\"#162-配置yum仓库脚本\">#</a> <strong>1.6.2</strong> <strong>配置</strong> yum 仓库脚本</h6>\n<p>需求：根据相同的系统不同版本，配置不同的 yum 源</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@manager if<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-23.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">system_version</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/redhat-release  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $(NF-1)&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># -ne 不等于 -eq 等于</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;system_version<span class=\"token operator\">%%</span>.*&#125;</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"CentOS <span class=\"token variable\">$&#123;system_version&#125;</span> Epel OK\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;system_version<span class=\"token operator\">%%</span>.*&#125;</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"CentOS <span class=\"token variable\">$&#123;system_version&#125;</span> Epel OK\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"163-获取进程详情脚本\"><a class=\"anchor\" href=\"#163-获取进程详情脚本\">#</a> <strong>1.6.3</strong> <strong>获取进程详情脚本</strong></h6>\n<p>需求：获取进程的详情</p>\n<ul>\n<li>1. 首先要传递 1 个参数，服务的名称；</li>\n<li>2. 判断：是否存在该进程，如果不存在则警告，然后退出脚本；</li>\n<li>3. 获取进程的 pid 相关的信息；</li>\n<li>4. 获取该服务的运行状态；</li>\n<li>5. 提取运行的用户：pid，STAT，command 命令；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-11.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-24</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : if-11.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#1. 接受传递的参数总个数为 1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage: <span class=\"token variable\">$0</span> [ serviceName...]\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#2. 判断服务名称是否存在对应的 id 编号</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#service_status=$(ps aux | grep \"$1\" | grep -v grep | grep -v \"$$\" | wc -l)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">service_status</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>pstree <span class=\"token parameter variable\">-l</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">tmp_file</span><span class=\"token operator\">=</span>/tmp/<span class=\"token variable\">$1_status</span>.txt</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#3. 判断该服务是否正在运行</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$service_status</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 业务逻辑</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token assign-left variable\">service_runtime</span><span class=\"token operator\">=</span><span class=\"token punctuation\">$(</span>systemctl status <span class=\"token variable\">$1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> Active <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $2,$3&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">sed</span> <span class=\"token string\">'s/[()]//g'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"当前 <span class=\"token variable\">$1</span> 进程的状态是:\"</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> : <span class=\"token variable\">$service_runtime</span>\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"****************************************************\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"当前 <span class=\"token variable\">$1</span> 进程的详情是: \"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">ps</span> aux<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token function\">grep</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"<span class=\"token variable\">$$</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN &#123;printf \"%-15s%-15s%-20s\\n\",\"进程的用户\",\"进程的PID\",\"进程的命令\"&#125; &#123;printf \"%-20s%-20d%-20s\\n\",$1,$2,$NF&#125;'</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;tmp_file&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">cat</span> <span class=\"token variable\">$&#123;tmp_file&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"***************************************************\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 删除临时文件</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$&#123;tmp_file&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"该 <span class=\"token variable\">$1</span> 服务暂未运行...\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#打印效果</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh if-11.sh nginx</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>当前 nginx 进程的状态是:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>nginx <span class=\"token builtin class-name\">:</span> active running</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>****************************************************</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>当前 nginx 进程的详情是: </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>进程的用户          进程的PID         进程的命令               </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>root                <span class=\"token number\">3842</span>                /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>nginx               <span class=\"token number\">3843</span>                process             </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>nginx               <span class=\"token number\">3844</span>                process             </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>***************************************************</pre></td></tr></table></figure><h6 id=\"164-数字排序脚本\"><a class=\"anchor\" href=\"#164-数字排序脚本\">#</a> <strong>1.6.4</strong> <strong>数字排序脚本</strong></h6>\n<p>需求：输入三个数并进行升序排序</p>\n<ul>\n<li>1. 控制只能输入三个参数；</li>\n<li>2. 将行，转为列的显示方式；</li>\n<li>3.sort 排序；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-8.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Error...\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span> <span class=\"token variable\">$3</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n1</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-rn</span></pre></td></tr></table></figure><h5 id=\"17-if基于字符比较\"><a class=\"anchor\" href=\"#17-if基于字符比较\">#</a> <strong>1.7 if</strong> 基于字符比较</h5>\n<p>if 语句中的字符串比较 [整数 1 操作符 整数 2]</p>\n<ul>\n<li>==：等于则条件为真，示例 [ &quot;<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi mathvariant=\"normal\">&quot;</mi><mo>=</mo><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi></mrow><annotation encoding=\"application/x-tex\">a&quot; == &quot;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">&quot;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">&quot;</span></span></span></span>b&quot; ]</li>\n<li>!=：不相等则条件为真，示例 [ &quot;<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi mathvariant=\"normal\">&quot;</mi><mo stretchy=\"false\">!</mo><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi></mrow><annotation encoding=\"application/x-tex\">a&quot; != &quot;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">&quot;</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">&quot;</span></span></span></span>b&quot;]</li>\n<li>-z：字符串的长度为零则为真（内容空则为真），示例 [-z &quot;$a&quot;]</li>\n<li>-n：字符串的长度不为空则为真（有内容则为真），示例 [-n &quot;$a&quot;]</li>\n</ul>\n<h6 id=\"171-检查执行身份是否为root\"><a class=\"anchor\" href=\"#171-检查执行身份是否为root\">#</a> <strong>1.7.1</strong> <strong>检查执行身份是否为</strong> root</h6>\n<p>需求：判断用户是否为 root 超级管理员；</p>\n<ul>\n<li>如果是则提示 hey admin</li>\n<li>如果不是则提示</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-9.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-24</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : if-9.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token environment constant\">$USER</span> <span class=\"token operator\">==</span>  <span class=\"token string\">\"root\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hey admin\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hey guest\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"172-判断用户输入是否为空脚本\"><a class=\"anchor\" href=\"#172-判断用户输入是否为空脚本\">#</a> <strong>1.7.2</strong> <strong>判断用户输入是否为空脚本</strong></h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-3.sh    </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入一个字符: \"</span> Action</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$Action</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"请不要直接回车...\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你输入的是：<span class=\"token variable\">$&#123;Action&#125;</span>\"</span></pre></td></tr></table></figure><h6 id=\"173-检查selinux是否为disabled\"><a class=\"anchor\" href=\"#173-检查selinux是否为disabled\">#</a> <strong>1.7.3</strong> <strong>检查</strong> selinux 是否为 disabled</h6>\n<p>需求：检查是否为 disabled 状态；</p>\n<ul>\n<li>是：则输出 该状态已经是 disabled，不做修改；</li>\n<li>不是：则修改状态为 disabled，并返回一段提示，说 selinux 已经修改为 disabled；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-10.sh  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Selinux_File</span><span class=\"token operator\">=</span>/etc/selinux/config</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Selinux_status</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> <span class=\"token string\">\"^SELINUX=\"</span> $<span class=\"token punctuation\">&#123;</span>Selinux_File<span class=\"token punctuation\">&#125;</span>  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'='</span> <span class=\"token string\">'&#123;print $NF&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;Selinux_status&#125;</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"disabled\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你的SELINUX是关闭状态\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"SELINUX状态是: <span class=\"token variable\">$&#123;Selinux_status&#125;</span> 不符合预期，则尝试修改中..\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/^SELINUX=/c SELINUX=disabled'</span> <span class=\"token variable\">$&#123;Selinux_File&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">sleep</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"修改成功,SELINUX已经是Disabled关闭的\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"18-if基于正则比较\"><a class=\"anchor\" href=\"#18-if基于正则比较\">#</a> <strong>1.8 if</strong> 基于正则比较</h5>\n<p>if 语句中的正则比较 [[变量 =~ 正则匹配的内容]]</p>\n<p>[[&quot;$USER&quot; =~ ^r]]：判断用户是否已 r 开头； ro,rt,ra,root,</p>\n<p>[[ &quot;<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi mathvariant=\"normal\">&quot;</mi><mo>=</mo><msup><mtext> </mtext><mo stretchy=\"false\">[</mo></msup><mn>0</mn><mo>−</mo><mn>9</mn><mo stretchy=\"false\">]</mo><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">num&quot; =~ ^[0-9]+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">&quot;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9713299999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mspace nobreak\"> </span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mopen mtight\">[</span></span></span></span></span></span></span></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">9</span><span class=\"mclose\">]</span><span class=\"mord\">+</span></span></span></span> ]]：判断用户输入的是否为全数字；</p>\n<p>注意：单中括号使用正则语法会报错，bash: [:=~: binary operator expected</p>\n<h6 id=\"181-控制用户输入必须为整数脚本\"><a class=\"anchor\" href=\"#181-控制用户输入必须为整数脚本\">#</a> <strong>1.8.1</strong> <strong>控制用户输入必须为整数脚本</strong></h6>\n<p>需求：通过正则方式控制用户输入的必须是数字。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-7.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入手机号码：\"</span> num</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$&#123;num&#125;</span> <span class=\"token operator\">=~</span> ^<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span>+$ <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你输入不是一个有效电话...\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>num&#125;</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你输入电话长度不是13位...\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你输入的电话号码是<span class=\"token variable\">$&#123;num&#125;</span>\"</span></pre></td></tr></table></figure><h6 id=\"182-遍历单词筛选其中关键字脚本\"><a class=\"anchor\" href=\"#182-遍历单词筛选其中关键字脚本\">#</a> <strong>1.8.2</strong> <strong>遍历单词筛选其中关键字脚本</strong></h6>\n<p>需求：使用 for 循环打印一推单词，然后仅输出以 r 开头的单词。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat if-11.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> r rt ttr rtt aar aaq abr root r0o</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 判断</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">=~</span> ^r <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h6 id=\"183-批量创建用户脚本\"><a class=\"anchor\" href=\"#183-批量创建用户脚本\">#</a> <strong>1.8.3</strong> <strong>批量创建用户脚本</strong></h6>\n<p>需求：编写一个创建用户的脚本。</p>\n<ul>\n<li>1. 提示用户输入要创建用户的前缀，必须是英文；</li>\n<li>2. 提示用户输入后缀，必须是数字；</li>\n<li>3. 如果前缀和后缀都没有问题，则进行用户创建；</li>\n<li>4. 并且密码是随机的；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat useradd.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 让用户输入前缀名称\t\txuyong</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 让用户输入创建的数量\t\t10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入要创建的用户名称[default: xuyong]: \"</span> UserName</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入要创建的用户数量[default: 10]: \"</span> UserNumber</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入要创建的密码长度[default:  8]: \"</span> PassNumber</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"你要创建的用户是 <span class=\"token variable\">$&#123;UserName<span class=\"token operator\">:=</span>xuyong&#125;</span> 随机密码 <span class=\"token variable\">$&#123;PassNumber<span class=\"token operator\">:=</span>8&#125;</span> 创建 <span class=\"token variable\">$&#123;UserNumber<span class=\"token operator\">:=</span>10&#125;</span>  ,确定创建吗? [ yes(default) | no ]: \"</span> Action</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 判断用户输入的是 yes 还是 no</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;Action<span class=\"token operator\">:=</span>yes&#125;</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 循环</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">number</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> $<span class=\"token punctuation\">&#123;</span>UserNumber<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 随机密码 - l 长度 -c 小写个数 -C 大小个数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token assign-left variable\">UserPass</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mkpasswd <span class=\"token parameter variable\">-l</span> $<span class=\"token punctuation\">&#123;</span>PassNumber<span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-C</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">-c</span> <span class=\"token number\">1</span> <span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 判断用户是否存在</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">id</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span>\"</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    action <span class=\"token string\">\"用户: <span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span> is already exists..\"</span> /bin/false</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token comment\"># 创建用户</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token function\">useradd</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span>\"</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token comment\"># 设定密码</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserPass&#125;</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">passwd</span> <span class=\"token parameter variable\">--stdin</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span>\"</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span> : <span class=\"token variable\">$&#123;UserPass&#125;</span>\"</span> <span class=\"token operator\">>></span> /tmp/user_pass.txt</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    action <span class=\"token string\">\"用户: <span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span> User creation successful\"</span> /bin/true</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">fi</span> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"184-批量删除用户脚本\"><a class=\"anchor\" href=\"#184-批量删除用户脚本\">#</a> <strong>1.8.4</strong> <strong>批量删除用户脚本</strong></h6>\n<p>需求：编写一个删除用户的脚本。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat useradd_del.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 让用户输入前缀名称\t\txuyong</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 让用户输入创建的数量\t\t10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 使用有密码。且随机，长度 15 大写 5  小写 5 数字 3 特殊字符 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入要删除的用户名称[default: xuyong]: \"</span> UserName</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入要删除的用户数量[default: 10]: \"</span> UserNumber</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"你要删除的用户是 <span class=\"token variable\">$&#123;UserName<span class=\"token operator\">:=</span>xuyong&#125;</span> 创建 <span class=\"token variable\">$&#123;UserNumber<span class=\"token operator\">:=</span>10&#125;</span>  ,确定创建吗? [ yes(default) | no ]: \"</span> Action</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 判断用户输入的是 yes 还是 no</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;Action<span class=\"token operator\">:=</span>yes&#125;</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 循环</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">number</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> $<span class=\"token punctuation\">&#123;</span>UserNumber<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">id</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span>\"</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># 如果用户存在则为 0，不存在则为 1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">userdel</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span>\"</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            action <span class=\"token string\">\"用户: <span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span> is delete successful\"</span> /bin/true</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            action <span class=\"token string\">\"用户: <span class=\"token variable\">$&#123;UserName&#125;</span>_<span class=\"token variable\">$&#123;number&#125;</span> is not found..\"</span> /bin/false</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">fi</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"185-批量删除目录脚本\"><a class=\"anchor\" href=\"#185-批量删除目录脚本\">#</a> <strong>1.8.5</strong> <strong>批量删除目录脚本</strong></h6>\n<p>需求：编写一个删除目录的脚本。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat user_del_dir.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">home_dir</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ls</span> /home <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n1</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">dir</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;home_dir&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 删除以 d 开头或以 x 开头的目录</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$dir</span> <span class=\"token operator\">=~</span> ^d <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$dir</span> <span class=\"token operator\">=~</span> ^x <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /home/<span class=\"token variable\">$dir</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        action <span class=\"token string\">\"删除 /home/<span class=\"token variable\">$dir</span> delete successful\"</span> /bin/true</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">sleep</span> <span class=\"token number\">0.2</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"19-if判断相关脚本案例\"><a class=\"anchor\" href=\"#19-if判断相关脚本案例\">#</a> <strong>1.9 if</strong> 判断相关脚本案例</h5>\n<p>需求：在每月第一天备份并压缩 /etc 目录的所有内容，存放到 /backup 目录，存放的形式 2019_04_10_etc.tar.gz，脚本名称为 fileback，</p>\n<p>存放在 /root 的家目录下。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat fileback.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Date</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">Dir</span><span class=\"token operator\">=</span>/backup</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">Lock_File</span><span class=\"token operator\">=</span>/tmp/back.lock</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">Log_File</span><span class=\"token operator\">=</span>/var/log/<span class=\"token variable\">$&#123;0&#125;</span>.log</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function-name function\">Log_Format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F_%T<span class=\"token variable\">)</span></span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">hostname</span><span class=\"token variable\">)</span></span> <span class=\"token variable\">$0</span>: <span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;Log_File&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 1. 判断操作的用户身份</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token environment constant\">$USER</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"root\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Log_Format <span class=\"token string\">\"请使用Root身份运行..\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Log_Format <span class=\"token string\">\"Root开始执行备份脚本---->\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 2. 加锁</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$Lock_File</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"该脚本 <span class=\"token variable\">$0</span> 正在执行备份操作--->\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#第一次备份时，没有锁，所以需要添加</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">touch</span> <span class=\"token variable\">$Lock_File</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#3. 判断备份的目录是否存在</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token variable\">$&#123;Dir&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$&#123;Dir&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#4. 执行 tar 打包</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>Log_Format <span class=\"token string\">\"Root开始执行tar命令打包---->\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token function\">sleep</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#5. 判断打包是否成功</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token builtin class-name\">cd</span> / <span class=\"token operator\">&amp;&amp;</span>  <span class=\"token function\">tar</span> czf <span class=\"token variable\">$&#123;Dir&#125;</span>/<span class=\"token variable\">$&#123;Date&#125;</span>_etc.tar.gz etc</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$&#123;Dir&#125;</span>/<span class=\"token variable\">$Date_etc</span>.tar.gz <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    Log_Format <span class=\"token string\">\"备份文件<span class=\"token variable\">$&#123;Dir&#125;</span>/<span class=\"token variable\">$&#123;Date&#125;</span>_etc.tar.gz 成功---->\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Log_Format <span class=\"token string\">\"备份文件<span class=\"token variable\">$&#123;Dir&#125;</span>/<span class=\"token variable\">$&#123;Date&#125;</span>_etc.tar.gz 失败---->\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># 程序执行成功后记得解锁</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span>  <span class=\"token variable\">$Lock_File</span></pre></td></tr></table></figure><p>打印日志日志示例：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /var/log/fileback.sh.log </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2025</span>-09-24_18:15:28 client fileback.sh: Root开始执行备份脚本----<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2025</span>-09-24_18:15:28 client fileback.sh: Root开始执行tar命令打包----<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2025</span>-09-24_18:15:31 client fileback.sh: 备份文件/backup/2025-09-24_etc.tar.gz 成功----<span class=\"token operator\">></span></pre></td></tr></table></figure><h4 id=\"3case判断语句\"><a class=\"anchor\" href=\"#3case判断语句\">#</a> <strong>3.case</strong> 判断语句</h4>\n<h5 id=\"31-什么是case\"><a class=\"anchor\" href=\"#31-什么是case\">#</a> <strong>3.1</strong> <strong>什么是</strong> case</h5>\n<ul>\n<li>case 语句和 if 多分支判断语句类似，主要用来做多条件判断；</li>\n<li>只不过 case 在 Shell 脚本中比 if 多分支条件判断更方便。</li>\n</ul>\n<h5 id=\"32-case使用场景\"><a class=\"anchor\" href=\"#32-case使用场景\">#</a> <strong>3.2 case</strong> 使用场景</h5>\n<ul>\n<li>在生产环境中，我们会根据” 一个问题 “ 做多种预案，然后根据用户选择来加载不同的预案。</li>\n<li>比如服务的启停脚本，我们首先要写好启动、停止、重启的预案，然后根据用户选择来加载不同的预案。</li>\n</ul>\n<h5 id=\"33-case基础语法\"><a class=\"anchor\" href=\"#33-case基础语法\">#</a> <strong>3.3 case</strong> 基础语法</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat case.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-24</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : case.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入数字：\"</span> num</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$num</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"2\"</span>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    *<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"error\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr></table></figure><p>case 示例: (PS: 建议先使用 if 实现如下例子)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@bgx shell<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat case.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">eof</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>****************</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>** 1. backup **</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>** 2. copy **</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>** 3. quit **</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>****************</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>eof</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Input a choose: \"</span> OP</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$OP</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token operator\">|</span>backup<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"BACKUP......\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token operator\">|</span>copy<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"COPY.....\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token operator\">|</span>quit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    *<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> error<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr></table></figure><h5 id=\"34-case场景实践\"><a class=\"anchor\" href=\"#34-case场景实践\">#</a> <strong>3.4 case</strong> 场景实践</h5>\n<h6 id=\"341-场景1-编写nginx启停脚本\"><a class=\"anchor\" href=\"#341-场景1-编写nginx启停脚本\">#</a> <strong>3.4.1</strong> <strong>场景</strong> 1 - 编写 nginx 启停脚本</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat nginx.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">ngx_pid</span><span class=\"token operator\">=</span>/var/run/nginx.pid</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">ngx_tmp</span><span class=\"token operator\">=</span>/tmp/ngx.status</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$1</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    start<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># 判断服务是否存活</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$ngx_pid</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            nginx <span class=\"token parameter variable\">-t</span> <span class=\"token operator\">&amp;></span><span class=\"token variable\">$&#123;ngx_tmp&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token assign-left variable\">ngx_file</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /tmp/ngx.status  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/emerg/'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $NF&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\":\"</span> <span class=\"token string\">'&#123;print $1&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token assign-left variable\">ngx_line</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /tmp/ngx.status  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/emerg/'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $NF&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\":\"</span> <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Nginx的 <span class=\"token variable\">$&#123;ngx_file&#125;</span> 的第 <span class=\"token variable\">$&#123;ngx_line&#125;</span> 行出现了错误，是否需要进入编辑 [ y | n ]:\"</span> Action</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;Action<span class=\"token operator\">:=</span>y&#125;</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"y\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token function\">vim</span> <span class=\"token variable\">$&#123;ngx_file&#125;</span> +<span class=\"token variable\">$&#123;ngx_line&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token comment\"># 启动</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                /usr/sbin/nginx </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token comment\"># 查看进程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token assign-left variable\">ngx_process_pid</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> $<span class=\"token punctuation\">&#123;</span>ngx_pid<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token assign-left variable\">ngx_process_mess</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span><span class=\"token function\">grep</span> $<span class=\"token punctuation\">&#123;</span>ngx_process_pid<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token function\">grep</span><span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$ngx_process_mess</span> <span class=\"token parameter variable\">-ge</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    action <span class=\"token string\">\"Nginx启动成功\"</span> /bin/true</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    action <span class=\"token string\">\"Nginx启动失败\"</span> /bin/false</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            action <span class=\"token string\">\"Nginx已启动\"</span> /bin/false</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">fi</span>\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    stop<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    status<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    *<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage <span class=\"token variable\">$0</span> [ start | stop | restart ]\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr></table></figure><h6 id=\"342-场景2-编写rsync启停脚本\"><a class=\"anchor\" href=\"#342-场景2-编写rsync启停脚本\">#</a> <strong>3.4.2</strong> <strong>场景</strong> 2 - 编写 rsync 启停脚本</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat rsync.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/init.d/functions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">Rsync_Pid_File</span><span class=\"token operator\">=</span>/var/run/rsyncd.pid</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function-name function\">start_rsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># 判断 pid 是否存在，如果存在说明服务已经启动过了</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$Rsync_Pid_File</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                action <span class=\"token string\">\"Rsync正在运行中,不用重复启动..\"</span> /bin/false</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                /usr/bin/rsync <span class=\"token parameter variable\">--daemon</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token assign-left variable\">Rsync_Status</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-lntp</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">873</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-w</span> <span class=\"token string\">\"^tcp\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Rsync_Status</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    action <span class=\"token string\">\"Rsync 启动成功\"</span>  /bin/true</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    action <span class=\"token string\">\"Rsync 启动失败\"</span>  /bin/false</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function-name function\">stop_rsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\"># 判断是否存活</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span>  <span class=\"token variable\">$Rsync_Pid_File</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token comment\">#停止</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token function\">kill</span>  <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> $<span class=\"token punctuation\">&#123;</span>Rsync_Pid_File<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token function\">sleep</span> <span class=\"token number\">0.5</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token assign-left variable\">Rsync_Status</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-lntp</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">873</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-w</span> <span class=\"token string\">\"^tcp\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Rsync_Status</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    action <span class=\"token string\">\"Rsync 停止成功\"</span> /bin/true</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    action <span class=\"token string\">\"Rsync 停止失败\"</span> /bin/false</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token comment\"># 已经是停止状态</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                action <span class=\"token string\">\"Rsync 已经是停止状态\"</span> /bin/false</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$1</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    start<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        start_rsync </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    stop<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        stop_rsync</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    restart<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$Rsync_Pid_File</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            stop_rsync</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            start_rsync</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            start_rsync</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    status<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$Rsync_Pid_File</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token assign-left variable\">rsync_process_id</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> $<span class=\"token punctuation\">&#123;</span>Rsync_Pid_File<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span>\t\t\t</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"****************Rsync Status ****************************\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token assign-left variable\">rsync_process_message</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> aux<span class=\"token operator\">|</span><span class=\"token function\">grep</span> $<span class=\"token punctuation\">&#123;</span>rsync_process_id<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token function\">grep</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;rsync_process_message&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"*******************************************************\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            action <span class=\"token string\">\"Rsync 暂未启动..\"</span> /bin/false</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    *<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage <span class=\"token variable\">$0</span> [ start | status | restart | stop ]\"</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr></table></figure><h6 id=\"343-场景3-编写lvs启停脚本\"><a class=\"anchor\" href=\"#343-场景3-编写lvs启停脚本\">#</a> <strong>3.4.3</strong> <strong>场景</strong> 3 - 编写 LVS 启停脚本</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat lvs_rs.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">net_eth1</span><span class=\"token operator\">=</span>eth1:1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">net_vip</span><span class=\"token operator\">=</span><span class=\"token number\">172.16</span>.1.33</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">net_port</span><span class=\"token operator\">=</span><span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">rs_ip</span><span class=\"token operator\">=</span><span class=\"token string\">\"172.16.1.5 172.16.1.6 172.16.1.7 172.16.1.8\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$1</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    start<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#1. 配置 vip</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/sysconfig/network-scripts/ifcfg-<span class=\"token variable\">$&#123;net_eth1&#125;</span> <span class=\"token operator\">&lt;&lt;-</span>EOF</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token assign-left variable\">TYPE</span><span class=\"token operator\">=</span>Ethernet</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token assign-left variable\">BOOTPROTO</span><span class=\"token operator\">=</span>none</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token assign-left variable\">DEFROUTE</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;net_eth1&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token assign-left variable\">DEVICE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;net_eth1&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token assign-left variable\">ONBOOT</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token assign-left variable\">IPADDR</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;net_vip&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token assign-left variable\">PREFIX</span><span class=\"token operator\">=</span><span class=\"token number\">24</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        EOF</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># 启动 LVS-VIP</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">ifup</span> <span class=\"token variable\">$&#123;net_eth1&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">#2. 配置 ipvsadm 规则</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        ipvsadm <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$&#123;net_vip&#125;</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$&#123;net_port&#125;</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">host</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;rs_ip&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            ipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$&#123;net_vip&#125;</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$&#123;host&#125;</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$&#123;net_port&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\"># 3. 打印 LVS 规则</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token function\">clear</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        ipvsadm <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">-n</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    stop<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">ifdown</span> <span class=\"token variable\">$&#123;net_eth1&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">sleep</span> <span class=\"token number\">0.5</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> /etc/sysconfig/network-scripts/ifcfg-<span class=\"token variable\">$&#123;net_eth1&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        ipvsadm <span class=\"token parameter variable\">-C</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    *<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage <span class=\"token variable\">$0</span> [ start | stop ]\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr></table></figure><h6 id=\"344-场景4-编写jar包启停脚本\"><a class=\"anchor\" href=\"#344-场景4-编写jar包启停脚本\">#</a> <strong>3.4.4</strong> <strong>场景</strong> 4 - 编写 Jar 包启停脚本</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat service_start.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 描述：服务启动脚本</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># by: Oldxu  Email: xuy@nf-leasing.com</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#定义变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">JAR_NAME</span><span class=\"token operator\">=</span><span class=\"token variable\">$2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">JAVA_OPTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-Xms256m -Xmx1024m -Dspring.profiles.active=prd -Djava.security.egd=file:/dev/./urandom -Duser.timezone=GMT+08\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">COUNT</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token string\">'$&#123;JAR_NAME&#125;'</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token function\">grep</span><span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">PID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>pgrep <span class=\"token parameter variable\">-l</span> $<span class=\"token punctuation\">&#123;</span>JAR_NAME<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#使用说明，用来提示数据参数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function-name function\">usage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage: <span class=\"token variable\">$0</span> stop|restart|status JARPATH/JAR_NAME\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#启动应用</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function-name function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;COUNT&#125;</span>\"</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;JAR_NAME&#125;</span>正在运行,进行ID是<span class=\"token variable\">$&#123;PID&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"$正在启动&#123;JAR_NAME&#125;\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">nohup</span> <span class=\"token function\">java</span> <span class=\"token variable\">$&#123;JAVA_OPTS&#125;</span> <span class=\"token parameter variable\">-jar</span> <span class=\"token variable\">$2</span> <span class=\"token operator\">&amp;></span> /dev/null <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#停止应用</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token function-name function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;COUNT&#125;</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">kill</span> <span class=\"token parameter variable\">-9</span> <span class=\"token variable\">$&#123;PID&#125;</span> <span class=\"token operator\">&amp;></span> /dev/null</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">sleep</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;JAR_NAME&#125;</span>已经停止\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;JAR_NAME&#125;</span>未运行\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#应用状态</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token function-name function\">status</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;COUNT&#125;</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;JAR_NAME&#125;</span>正在运行，进程ID是<span class=\"token variable\">$&#123;PID&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;JAR_NAME&#125;</span>已经停止\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">#重启应用</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token function-name function\">restart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    stop</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    start</pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#启动参数</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    start<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"************************Start Service************************\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        start</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    stop<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"************************Stop Service************************\"</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        stop</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    restart<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"************************Restart Service************************\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        restart</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    status<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"************************Service Status************************\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        status</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    *<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"************************Script Usage************************\"</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        usage</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr></table></figure>",
            "tags": [
                "Shell"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/1361162481.html",
            "url": "http://ixuyong.cn/posts/1361162481.html",
            "title": "Shell脚本基础与变量",
            "date_published": "2025-09-27T13:15:24.000Z",
            "content_html": "<h3 id=\"shell脚本编程及sed-awk进阶实践\"><a class=\"anchor\" href=\"#shell脚本编程及sed-awk进阶实践\">#</a> Shell 脚本编程及 Sed、AWK 进阶实践</h3>\n<h4 id=\"1-shell脚本概述\"><a class=\"anchor\" href=\"#1-shell脚本概述\">#</a> 1. Shell 脚本概述</h4>\n<h5 id=\"11什么是shell\"><a class=\"anchor\" href=\"#11什么是shell\">#</a> 1.1. 什么是 shell</h5>\n<p>Shell 是一个命令解释器，它在操作系统的最外层，负责直接与用户进行对话，将用户输入的命令翻译给操作系统，并将处理的结果输出至屏幕。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/ZfHrX6u.png\" alt=\"\" /></p>\n<p>当然 shell 命令是存在 交互式、非交互式两种方式：</p>\n<ul>\n<li>交互：日常使用，登陆、执行命令、退出；</li>\n<li>非交互：直接读取某个文件，文件从头执行到尾即结束；</li>\n</ul>\n<h5 id=\"12-shell脚本号的使用\"><a class=\"anchor\" href=\"#12-shell脚本号的使用\">#</a> 1.2 Shell 脚本 #号的使用</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Date       : 2021-09-22</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#FileName   : args.sh</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr></table></figure><h5 id=\"13-自动添加shell的首部\"><a class=\"anchor\" href=\"#13-自动添加shell的首部\">#</a> 1.3 自动添加 Shell 的首部</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat ~/.vimrc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>autocmd BufNewFile *.sh <span class=\"token builtin class-name\">exec</span> <span class=\"token string\">\":call SetTitle()\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>func SetTitle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> expand<span class=\"token punctuation\">(</span><span class=\"token string\">\"%:e\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'sh'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">\"#!/bin/bash\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>,<span class=\"token string\">\"#********************************************************************\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,<span class=\"token string\">\"#Author     : XuYong\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">4</span>,<span class=\"token string\">\"#Date       : \"</span>.strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>,<span class=\"token string\">\"#FileName   : \"</span>.expand<span class=\"token punctuation\">(</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">6</span>,<span class=\"token string\">\"#Description: The test script\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">7</span>,<span class=\"token string\">\"#********************************************************************\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>call setline<span class=\"token punctuation\">(</span><span class=\"token number\">8</span>,<span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>endif</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>endfunc</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>autocmd BufNewFile * normal G</pre></td></tr></table></figure><h4 id=\"2-shell变量\"><a class=\"anchor\" href=\"#2-shell变量\">#</a> 2. Shell 变量</h4>\n<h5 id=\"21-什么是变量\"><a class=\"anchor\" href=\"#21-什么是变量\">#</a> 2.1 什么是变量</h5>\n<p>变量是 shell 中传递数据的一种方法。简单理解，就是用一个固定的字符串去表示不固定的值，便于后续引用。</p>\n<h5 id=\"22-变量命名规范\"><a class=\"anchor\" href=\"#22-变量命名规范\">#</a> 2.2 变量命名规范</h5>\n<ul>\n<li 注意:=\"\" 变量名称最好具备一定含义=\"\">变量定义命名：大写小写字母、下划线组成，尽量字母开头。</li>\n<li>变量定义语法：变量名 = 变量值，等号是赋值，需要注意：等号两边不能有空格，其次定义的变量不要与系统命令出现冲突。参考如下定义变量方式：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.0.100</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">Hostname_Ip</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.0.100</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">hostname_IP</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.0.100</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">system_cpu_load_avg1</span><span class=\"token operator\">=</span>w <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1&#125;'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">system_cpu_load_avg5</span><span class=\"token operator\">=</span>w <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $2&#125;'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">system_cpu_load_avg15</span><span class=\"token operator\">=</span>w <span class=\"token operator\">|</span><span class=\"token function\">awk</span> '<span class=\"token punctuation\">&#123;</span>print <span class=\"token variable\">$3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"23-变量定义方式\"><a class=\"anchor\" href=\"#23-变量定义方式\">#</a> 2.3 变量定义方式</h5>\n<ul>\n<li>1. 用户自定义变量：人为定义变量名与变量的值。</li>\n<li>2. 系统环境变量：保存的是和系统操作环境相关的数据，所有用户都可以使用。</li>\n<li>3. 位置参数变量：向脚本中进行参数传递，变量名不能自定义，变量作用是固定的。</li>\n<li>4. 特殊参数变量：是 Bash 中已经定义好的变量，变量名不能自定义，变量作用也是固定的。</li>\n</ul>\n<h6 id=\"231-用户自定义变量\"><a class=\"anchor\" href=\"#231-用户自定义变量\">#</a> 2.3.1 用户自定义变量</h6>\n<p>1. 定义变量，变量名 = 变量值。不能出现 &quot;- 横岗&quot; 命名</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># var=\"hello shell\"         #定义变量有空格必须使用双引号</span></pre></td></tr></table></figure><p 变量名=\"\">2. 引用变量，$ 变量名 或 $</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $var</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hello shell</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $var_log</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;var&#125;_log</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>hello shell_log</pre></td></tr></table></figure><p>3. 注意事项，引用变量时注意事项，&quot;&quot; 双引号属于弱引用，'' 单引号属于强引用</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># var2=Iphone</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"$var2 is good\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Iphone is good</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo '$var2 is good'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$var2</span> is good</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 如果有变量的情况下，建议增加双引号；</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 如果存在特殊的字符，不希望被解析，这个时需要使用 '' 或者转移字符；</span></pre></td></tr></table></figure><h6 id=\"232-系统环境变量\"><a class=\"anchor\" href=\"#232-系统环境变量\">#</a> 2.3.2 系统环境变量</h6>\n<p>1. 使用系统已定义好的环境变量</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat env.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : env.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"用户的家目录: <span class=\"token environment constant\">$HOME</span>\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"当前主机名是: <span class=\"token environment constant\">$HOSTNAME</span>\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"当前所在目录: <span class=\"token environment constant\">$PWD</span>\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh env.sh </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>用户的家目录: /root</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>当前主机名是: web01</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>当前所在目录: /root</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 场景：脚本只能 root 用户运行，非 root 拒绝运行；</span></pre></td></tr></table></figure><p>2. 人为定义环境变量：export 变量，将自定义变量转换成环境变量；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># var2=hello</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $var2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hello</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat env.sh </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$var2</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#执行 a.sh 时，会使用另一个 bash 去执行，就访问不到 $VAR1 的值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh env.sh </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#将变量转为环境变量</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># export var2=hello</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh env.sh </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>hello</pre></td></tr></table></figure><h6 id=\"233-位置参数变量\"><a class=\"anchor\" href=\"#233-位置参数变量\">#</a> 2.3.3 位置参数变量</h6>\n<p>位置参数顾名思义，就是传递给脚本参数的位置，例如给一个脚本传递一个参数，我们可以在 Shell 脚本内部获取传入的位置参数，获取参数的格式为：$n。n 代表一个数字。</p>\n<p>例如传递给脚本的第一个参数就为 $1，第 2 个参数就为 $2, 以此类推……，其中 $0 为该脚本的名称。</p>\n<p>1. 编写脚本</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat args.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : args.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"#当前shell脚本的文件名： <span class=\"token variable\">$0</span>\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"#第1个shell脚本位置参数：<span class=\"token variable\">$1</span>\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"#第2个shell脚本位置参数：<span class=\"token variable\">$2</span>\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"#第3个shell脚本位置参数：<span class=\"token variable\">$3</span>\"</span></pre></td></tr></table></figure><p>2. 执行脚本（发现第一个参数 11、第二个参数 22、第三个参数 33、<a href=\"http://xn--args-uk1gv62h3p1ae8l.sh\">脚本名称 args.sh</a>）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh args.sh 11 22 33</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#当前 shell 脚本的文件名： args.sh</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#第 1 个 shell 脚本位置参数：11</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#第 2 个 shell 脚本位置参数：22</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#第 3 个 shell 脚本位置参数：33</span></pre></td></tr></table></figure><h6 id=\"234-特殊参数变量\"><a class=\"anchor\" href=\"#234-特殊参数变量\">#</a> 2.3.4 特殊参数变量</h6>\n<p>特殊参数：</p>\n<ul>\n<li>$#：传递给脚本或函数的参数个数总和；</li>\n<li>$*：传递给脚本或函数的所有参数，当被双引号 &quot;&quot; 包含时，所有的位置参数被看做一个字符串</li>\n<li>$@：传递给脚本或函数的所有参数，当被双引号 &quot;&quot; 包含时，每个位置参数被看做独立的字符串</li>\n<li>$?：上个命令的退出状态，或函数的返回值，0 为执行成功，非 0 则为执行失败</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>：当前程序运行的</mtext><mi>P</mi><mi>I</mi><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">：当前程序运行的 PID\n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">：</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord cjk_fallback\">前</span><span class=\"mord cjk_fallback\">程</span><span class=\"mord cjk_fallback\">序</span><span class=\"mord cjk_fallback\">运</span><span class=\"mord cjk_fallback\">行</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></p>\n</li>\n</ul>\n<p>[root@web01 ~]# cat <a href=\"http://args2.sh\">args2.sh</a><br />\n#!/bin/bash<br />\n#********************************************************************<br />\n#Author     : XuYong<br />\n#Date       : 2025-09-17<br />\n#FileName   : <a href=\"http://args2.sh\">args2.sh</a><br />\n#Description: The test script<br />\n#********************************************************************<br />\necho &quot;第一个参数为: $1&quot;<br />\necho&quot; 第二个参数为: $2&quot;<br />\necho&quot; 脚本名称为: $0&quot;<br />\necho&quot; 脚本接受参数总数为: $#&quot;</p>\n<p>curl -I <a href=\"http://baidu.com\">baidu.com</a> &amp;&gt;/dev/null<br />\necho &quot;运行命令的状态为:$?&quot;</p>\n<p>echo &quot;脚本的 ID 为:$$&quot;<br />\necho&quot;$* 的结果为:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"normal\">&quot;</mi><mi>e</mi><mi>c</mi><mi>h</mi><mi>o</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">$</mi><mi mathvariant=\"normal\">@</mi><mtext>的结果为</mtext><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">*&quot;\necho &quot;\\$@ 的结果为:</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">∗</span><span class=\"mord\">&quot;</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord\">&quot;</span><span class=\"mord\">$</span><span class=\"mord\">@</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">结</span><span class=\"mord cjk_fallback\">果</span><span class=\"mord cjk_fallback\">为</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span></span>@&quot;<br />\necho &quot;==========================&quot;</p>\n<p>echo &quot;$* 循环接收的结果&quot;<br />\nfor i in &quot;$*&quot;;<br />\ndo<br />\necho $i<br />\ndone</p>\n<p>echo &quot;$@ 循环接收的结果&quot;<br />\nfor j in &quot;$@&quot;;<br />\ndo<br />\necho $j<br />\ndone</p>\n<pre><code>\n2.执行脚本\n\n```bash\n[root@web01 ~]# sh args2.sh jenkins docker kubernetes\n第一个参数为: jenkins\n第二个参数为: docker\n脚本名称为: args2.sh\n脚本接受参数总数为: 3\n运行命令的状态为:0\n脚本的ID为:12989\n$* 的结果为:jenkins docker kubernetes\n$@ 的结果为:jenkins docker kubernetes\n==========================\n$* 循环接收的结果\njenkins docker kubernetes\n$@ 循环接收的结果\njenkins\ndocker\nkubernetes\n</code></pre>\n<h6 id=\"235-参数场景示例\"><a class=\"anchor\" href=\"#235-参数场景示例\">#</a> 2.3.5 参数场景示例</h6>\n<p>需求 1：通过位置变量创建 Linux 系统账户及密码，执行 <a href=\"http://var1.sh\">var1.sh</a> username password</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 var<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat var1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : var1.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#$1 是执行脚本的第一个参数，$2 是执行脚本的第二个参数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">useradd</span> <span class=\"token variable\">$1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$2</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">passwd</span>  <span class=\"token parameter variable\">--stdin</span> <span class=\"token variable\">$1</span></pre></td></tr></table></figure><p>需求 2：通过位置变量创建 Linux 系统账户及密码，执行 <a href=\"http://var1.sh\">var1.sh</a> username password，控制最多传递两个参数。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 var<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat var1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : var1.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#通过 $# 控制用户传递参数的个数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"USAGE USER|PASSWD\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#$1 是执行脚本的第一个参数，$2 是执行脚本的第二个参数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">useradd</span> <span class=\"token variable\">$1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$2</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">passwd</span>  <span class=\"token parameter variable\">--stdin</span> <span class=\"token variable\">$1</span></pre></td></tr></table></figure><p>需求 3：通过位置变量创建 Linux 系统账户及密码，执行 <a href=\"http://var1.sh\">var1.sh</a> username password，控制最多传递两个参数，且必须是 root 身份；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 var<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat var1.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : var1.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 1. 判断执行者的身份</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token environment constant\">$UID</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span> Permission denied, Please Switch Root.\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#1. 判断传递的参数总个数 -ne 不等于</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"USAGE <span class=\"token variable\">$0</span> [ UserName &amp;&amp; Password]\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 执行业务逻辑</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token function\">useradd</span> <span class=\"token variable\">$1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$2</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">passwd</span> <span class=\"token parameter variable\">--stdin</span> <span class=\"token variable\">$1</span></pre></td></tr></table></figure><h5 id=\"24-read交互传递变量\"><a class=\"anchor\" href=\"#24-read交互传递变量\">#</a> 2.4 read 交互传递变量</h5>\n<p>除了自定义变量，以及系统内置变量，还可以使用 read 命令通过交互式方式传递变量。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>read</strong> 选项</th>\n<th><strong>选项含义</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">-p</td>\n<td>打印信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-t</td>\n<td>限定时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-s</td>\n<td>不回显</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-n</td>\n<td>指定字符个数</td>\n</tr>\n</tbody>\n</table>\n<p>1.read 示例语法</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat read-1.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : read-1.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Login: \"</span> acc</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Passwd: \"</span> pw</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"account:  <span class=\"token variable\">$acc</span>\tpassword:  <span class=\"token variable\">$pw</span>\"</span></pre></td></tr></table></figure><p>2.read -p 示例</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 read<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat read-2.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : read-2.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Login: \"</span> acc</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Passwd: \"</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"account: <span class=\"token variable\">$acc</span> password: <span class=\"token variable\">$passwd</span>\"</span></pre></td></tr></table></figure><p>3.read -p -t -n -s 示例，限制用户输入密码超时 5s，密码密文，位数不能超过 6。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 read<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat read-2.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : read-2.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Login: \"</span> acc</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">60</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">6</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Passwd: \"</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"account: <span class=\"token variable\">$acc</span> password: <span class=\"token variable\">$passwd</span>\"</span></pre></td></tr></table></figure><h6 id=\"241-场景1模拟登陆页面脚本\"><a class=\"anchor\" href=\"#241-场景1模拟登陆页面脚本\">#</a> 2.4.1 场景 1 模拟登陆页面脚本</h6>\n<p>使用 read 模拟 Linux 登陆页面:</p>\n<ul>\n<li>1. 如果输入用户为 root，密码为 123，则输出欢迎登陆；</li>\n<li>2. 否则输出用户或密码错误；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@web01 read<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat read-2.sh </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#Author     : XuYong</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#Date       : 2025-09-17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#FileName   : read-2.sh</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#Author     : Oldxu</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#Date       : 2021-09-22</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#FileName   : read-2.sh</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#Description: The test script</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#********************************************************************</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">System</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>hostnamectl  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/Operating/'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">': '</span> <span class=\"token string\">'&#123;print $NF&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">Kernel</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>hostnamectl  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/Kernel/'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'[: ]+'</span> <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">Kernel_version</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>hostnamectl  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/Kernel/'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'[: ]+'</span> <span class=\"token string\">'&#123;print $4&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 打印系统信息</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$System</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;Kernel&#125;</span> <span class=\"token variable\">$&#123;Kernel_version&#125;</span> on an <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-m</span><span class=\"token variable\">)</span></span>\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 交互输入</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span>  <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">hostname</span><span class=\"token variable\">)</span></span> login: \"</span> user</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Password: \"</span> pass</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 判断用户输入的用户名称 + 密码是否正确</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$user</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"root\"</span> <span class=\"token parameter variable\">-a</span> <span class=\"token variable\">$pass</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"123\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"欢迎 <span class=\"token variable\">$user</span> 用户登录节点..\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"用户密码错误....\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"242-场景2-系统备份脚本\"><a class=\"anchor\" href=\"#242-场景2-系统备份脚本\">#</a> 2.4.2 场景 2 - 系统备份脚本</h6>\n<p>使用 read 编写一个备份脚本，需要用户传递 2 个参数，源和目标。</p>\n<ul>\n<li>1. 提示用户，你需要备份的文件在哪个路径下；</li>\n<li>2. 提示用户，你要备份到哪个目录；</li>\n<li>3. 你确定要备份吗？[yes | no]</li>\n<li>4. 如果输入 yes 就进行备份的操作，如果输入 no，则取消备份；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>###################################################################################</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>############################Backup Scripts ########################################</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>###################################################################################</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>EOF</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"你要备份的源文件在哪里: \"</span>  src_file</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"你要备份到哪个目录下: \"</span> dest_dir</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\" 你要备份的源文件 <span class=\"token variable\">$src_file</span> 要备份到 <span class=\"token variable\">$dest_dir</span> 你确定吗? [ yes | no ]: \"</span> Action</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;Action<span class=\"token operator\">:=</span>yes&#125;</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">cp</span> <span class=\"token parameter variable\">-rpv</span> <span class=\"token variable\">$src_file</span> <span class=\"token variable\">$dest_dir</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"243-场景3-探测主机存活脚本\"><a class=\"anchor\" href=\"#243-场景3-探测主机存活脚本\">#</a> 2.4.3 场景 3 - 探测主机存活脚本</h6>\n<p>使用 read 编写一个探测主机存活脚本，需要用户传递测试的 IP 地址。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要探测的IP地址: \"</span> Ip</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ping</span> <span class=\"token parameter variable\">-W</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">-c</span> <span class=\"token number\">1</span> <span class=\"token variable\">$Ip</span> <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m <span class=\"token variable\">$Ip</span> 通... <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[31m <span class=\"token variable\">$Ip</span> 不通... <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"244-场景4-修改主机名称脚本\"><a class=\"anchor\" href=\"#244-场景4-修改主机名称脚本\">#</a> 2.4.4 场景 4 - 修改主机名称脚本</h6>\n<p>使用 read 编写一个修改系统主机名称脚本。</p>\n<ul>\n<li>1. 打印当前主机名称；</li>\n<li>2. 询问用户需要修改的新主机名称是什么；</li>\n<li>3. 你是否要将 旧的名称 --- 新的名称 是：</li>\n<li>4. 调用 shell 命令执行修改；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">old_host</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">hostname</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"当前主机名称是 <span class=\"token variable\">$&#123;old_host&#125;</span> \"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"你要修改的新主机名称是: \"</span> new_host</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"你要将 <span class=\"token variable\">$old_host</span> --> <span class=\"token variable\">$new_host</span>: [ yes | no ]\"</span> Action</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"yes\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    hostnamectl set-hostname <span class=\"token variable\">$new_host</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"25-shell变量删除\"><a class=\"anchor\" href=\"#25-shell变量删除\">#</a> 2.5 Shell 变量删除</h5>\n<h6 id=\"251-什么是变量删除\"><a class=\"anchor\" href=\"#251-什么是变量删除\">#</a> <strong>2.5.1</strong> <strong>什么是变量删除</strong></h6>\n<p>简单来说，就是在不改变原有变量的情况下，对变量值进行删除。</p>\n<h6 id=\"252-为什么要用变量删除\"><a class=\"anchor\" href=\"#252-为什么要用变量删除\">#</a> <strong>2.5.2</strong> <strong>为什么要用变量删除</strong></h6>\n<p>比如：我们需要对某个变量的值进行整数比对，但变量的值是一个小数。怎么办？</p>\n<p>我们可以使用变量删除的方式，将小数位进行删除，然后在进行整数比对。</p>\n<h6 id=\"253-变量删除的几种方式\"><a class=\"anchor\" href=\"#253-变量删除的几种方式\">#</a> <strong>2.5.3</strong> <strong>变量删除的几种方式</strong></h6>\n<table>\n<thead>\n<tr>\n<th><strong>变量</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td 变量#匹配规则=\"\">$</td>\n<td>从头开始匹配，最短删除</td>\n</tr>\n<tr>\n<td 变量##匹配规则=\"\">$</td>\n<td>从头开始匹配，最长删除</td>\n</tr>\n<tr>\n<td 变量%匹配规则=\"\">$</td>\n<td>从尾开始匹配，最短删除</td>\n</tr>\n<tr>\n<td 变量%%匹配规则=\"\">$</td>\n<td>从尾开始匹配，最长删除</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"254-变量删除语法示例\"><a class=\"anchor\" href=\"#254-变量删除语法示例\">#</a> <strong>2.5.4</strong> <strong>变量删除语法示例</strong></h6>\n<p>示例 1：从前往后删除变量内容</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#定义变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># url=www.sina.com.cn </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#输出变量的值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;url&#125; </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>www.sina.com.cn</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#从前往后，最短匹配</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;url#*.&#125; </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sina.com.cn</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#从前往后，最长匹配</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;url##*.&#125; </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cn</pre></td></tr></table></figure><p>示例 2：从后往前删除变量内容</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#定义变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># url=www.sina.com.cn </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#输出变量结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;url&#125; </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>www.sina.com.cn</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#从后往前，最短匹配</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;url%.*&#125; </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>www.sina.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#从后往前，最长匹配 贪婪匹配</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;url%%.*&#125; </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>www</pre></td></tr></table></figure><h6 id=\"255-场景1-提取内存百分比脚本\"><a class=\"anchor\" href=\"#255-场景1-提取内存百分比脚本\">#</a> <strong>2.5.5</strong> <strong>场景</strong> 1 - 提取内存百分比脚本</h6>\n<p>查看内存 / 当前使用状态，如果使用率超过 80% 则报警发邮件</p>\n<ul>\n<li>1. 如何获取内存指标； free -m</li>\n<li>2. 拿到使用率的百分比；free -m | awk '/^Mem/{print <img loading=\"lazy\" data-src=\"https://cdn.nlark.com/yuque/__latex/4492725109ab9345dc5198110c625caf.svg\" alt=\"image\" />2*100}'</li>\n<li>3. 与定义的阈值做比对 80%；</li>\n<li>4. 超过 80，则发送邮件，否则没有任何提示；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Free_use</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">free</span> <span class=\"token parameter variable\">-m</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/^Mem/ &#123;print $3/$2*100&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;Free_use<span class=\"token operator\">%</span>.*&#125;</span> <span class=\"token parameter variable\">-ge</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你的内存已经满了.，当前已经使用了多少 <span class=\"token variable\">$&#123;Free_use&#125;</span>%\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"当前内存足够应用使用,目前已使用 <span class=\"token variable\">$&#123;Free_use&#125;</span>%\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h6 id=\"256-场景2-为不同版本系统安装源\"><a class=\"anchor\" href=\"#256-场景2-为不同版本系统安装源\">#</a> 2.5.6 场景 2 - 为不同版本系统安装源</h6>\n<p>写一个脚本，在 CentOS6 上运行则安装 6 的 epel，在 CentOS7 系统运行则安装 7 系统的 epel；</p>\n<p>1. 判断系统的版本；cat /etc/redhat-release | awk '{print $(NF-1)}'</p>\n<p>2. 根据不同的版本安装不同的源；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">system_version</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/redhat-release  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $(NF-1)&#125;'</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># -ne 不等于 -eq 等于</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;system_version<span class=\"token operator\">%%</span>.*&#125;</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo <span class=\"token operator\">&amp;></span>/dev/null</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"CentOS <span class=\"token variable\">$&#123;system_version&#125;</span> Epel OK\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;system_version<span class=\"token operator\">%%</span>.*&#125;</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"CentOS <span class=\"token variable\">$&#123;system_version&#125;</span> Epel OK\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h5 id=\"26-shell变量替换\"><a class=\"anchor\" href=\"#26-shell变量替换\">#</a> <strong>2.6 Shell</strong> 变量替换</h5>\n<h6 id=\"261-什么是变量替换\"><a class=\"anchor\" href=\"#261-什么是变量替换\">#</a> <strong>2.6.1</strong> <strong>什么是变量替换</strong></h6>\n<p>简单来说，就是在不改变原有变量的情况下，对变量进行替换。</p>\n<p>比如：原本输出 linux 是小写，可以将其转为 LINUX 大写，或者直接删除；</p>\n<p><strong>2.6.2</strong> <strong>变量替换的方式</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>变量</strong></th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td 变量旧字符串新字符串=\"\">$</td>\n<td>替换变量内的旧字符串为新字符串，只替换第一个</td>\n</tr>\n<tr>\n<td 变量旧字符串新字符串=\"\">$</td>\n<td>替换变量内的旧字符串为新字符串，全部替换</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"263-场景1-替换path变量\"><a class=\"anchor\" href=\"#263-场景1-替换path变量\">#</a> <strong>2.6.3</strong> <strong>场景</strong> 1 - 替换 PATH 变量</h6>\n<p>如何替换 $PATH 中的 /bin/ 替换为 / BIN</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $PATH</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#替换操作</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $&#123;PATH//bin/BIN&#125;</span></pre></td></tr></table></figure><h6 id=\"264-场景2-字符串替换脚本\"><a class=\"anchor\" href=\"#264-场景2-字符串替换脚本\">#</a> <strong>2.6.4</strong> <strong>场景</strong> 2 - 字符串替换脚本</h6>\n<p>需求：变量 string=&quot;Bigdata process is Hadoop, Hadoop is open source project&quot; 执行脚本后，打印输出 string 变量，并给出用户以下选项：</p>\n<ul>\n<li>1)、打印 string 长度</li>\n<li>2)、删除字符串中所有的 Hadoop</li>\n<li>3)、替换第一个 Hadoop 为 Linux</li>\n<li>4)、替换全部 Hadoop 为 Linux</li>\n<li>5)、用户输入数字 1|2|3|4，可以执行对应项的功能，输入 q|Q 则退出交互模式</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">string</span><span class=\"token operator\">=</span><span class=\"token string\">\"Bigdata process is Hadoop, Hadoop is open source project\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;string&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>1)、打印 string 长度</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>2)、删除字符串中所有的 Hadoop</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>3)、替换第一个Hadoop为Linux</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>4)、替换全部Hadoop为Linux</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>EOF</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要操作的编号 [ 1 | 2 | 3 | 4 ]: \"</span> Action</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>string&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;string<span class=\"token operator\">/</span><span class=\"token operator\">/</span>Hadoop<span class=\"token operator\">/</span>&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;string<span class=\"token operator\">/</span>Hadoop<span class=\"token operator\">/</span>Linux&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Action</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;string<span class=\"token operator\">/</span><span class=\"token operator\">/</span>Hadoop<span class=\"token operator\">/</span>Linux&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"27-shell变量运算\"><a class=\"anchor\" href=\"#27-shell变量运算\">#</a> <strong>2.7 Shell</strong> 变量运算</h5>\n<h6 id=\"271-什么是变量运算\"><a class=\"anchor\" href=\"#271-什么是变量运算\">#</a> <strong>2.7.1</strong> <strong>什么是变量运算</strong></h6>\n<p>其实就是我们以前学习过的 加 减 乘 除。</p>\n<h6 id=\"272-为什么需要变量运算\"><a class=\"anchor\" href=\"#272-为什么需要变量运算\">#</a> <strong>2.7.2</strong> <strong>为什么需要变量运算</strong></h6>\n<p>当我们需要开发一个计算器程序时，是不是就需要运算了？</p>\n<p>当我们要对结果进行单位换算时，是不是就需要变量运算了？</p>\n<h6 id=\"273-变量运算实现的方式\"><a class=\"anchor\" href=\"#273-变量运算实现的方式\">#</a> <strong>2.7.3</strong> <strong>变量运算实现的方式</strong></h6>\n<p>通常整数运算有 expr、<img loading=\"lazy\" data-src=\"https://cdn.nlark.com/yuque/__latex/bde0406f36a6e98d607aee37208881c3.svg\" alt=\"image\" /> [] 等方式，小数运算有 bc、awk 方式。</p>\n<p>定义变量，使用 expr、<img loading=\"lazy\" data-src=\"https://cdn.nlark.com/yuque/__latex/bde0406f36a6e98d607aee37208881c3.svg\" alt=\"image\" /> []、进行加减乘除。expr 必须空格隔开。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># num1=10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># num2=20</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># expr $num1 + $num2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $(( $num1 + $num2 ))</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $[ $num1 + $num2 ]</span></pre></td></tr></table></figure><h6 id=\"274-场景1-根据当前时间计算明年时间\"><a class=\"anchor\" href=\"#274-场景1-根据当前时间计算明年时间\">#</a> <strong>2.7.4</strong> <strong>场景</strong> 1 - 根据当前时间计算明年时间</h6>\n<p>根据系统时间，打印今年和明年时间。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"This is $(date +%Y) year\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>This is <span class=\"token number\">2019</span> year</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"This is $(($(date +%Y)+1)) year\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>This is <span class=\"token number\">2020</span> year</pre></td></tr></table></figure><h6 id=\"275-场景2-计算今年还剩下多少周\"><a class=\"anchor\" href=\"#275-场景2-计算今年还剩下多少周\">#</a> <strong>2.7.5</strong> <strong>场景</strong> 2 - 计算今年还剩下多少周</h6>\n<p>需求 2：根据系统时间获取今年还剩下多少星期，已经过了多少星期。思路如下:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"今年已经过了 $(date +% j) days\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"今年已经过了 $(($(date +% j)/7 )) weeks\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"今年还剩下 $(((365 - $(date +% j) )/7 )) weeks\"</span></pre></td></tr></table></figure><h5 id=\"28-shell默认变量\"><a class=\"anchor\" href=\"#28-shell默认变量\">#</a> <strong>2.8 Shell 默认</strong>变量</h5>\n<ol>\n<li var:-string=\"\">场景一 $</li>\n</ol>\n<ul>\n<li>若变量 var 为空时，则用 string 作为变量 var 的值；</li>\n<li>若变量 var 不为空时，则直接使用变量 var 的值；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 脚本示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat var-default.sh </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要安装的路径 [default: /usr/local/teleport]:\"</span> var</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;var<span class=\"token operator\">:-</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>teleport&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;var&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#2. 变量 var 不为空示例</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh var-default.sh </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>请输入你要安装的路径 <span class=\"token punctuation\">[</span>default: /usr/local/teleport<span class=\"token punctuation\">]</span>:/test</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/test</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>/test</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#3. 变量 var 为空示例</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh var-default.sh </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>请输入你要安装的路径 <span class=\"token punctuation\">[</span>default: /usr/local/teleport<span class=\"token punctuation\">]</span>:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>/usr/local/teleport</pre></td></tr></table></figure><ol start=\"2\">\n<li var:=\"string\">场景二 $</li>\n</ol>\n<ul>\n<li>若变量 var 为空时，则用 string 作为变量 var 的值，同时将 string 赋值给变量 var；</li>\n<li>若变量 var 不为空时，则直接使用变量 var 的值；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 脚本示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat var-default.sh </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要安装的路径 [default: /usr/local/teleport]:\"</span> var</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;var<span class=\"token operator\">:=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>teleport&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;var&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#2. 变量 var 不为空示例</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh var-default.sh </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>请输入你要安装的路径 <span class=\"token punctuation\">[</span>default: /usr/local/teleport<span class=\"token punctuation\">]</span>:/test</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/test</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>/test</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#3. 变量 var 为空示例</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh var-default.sh </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>请输入你要安装的路径 <span class=\"token punctuation\">[</span>default: /usr/local/teleport<span class=\"token punctuation\">]</span>:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>/usr/local/teleport</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>/usr/local/teleport</pre></td></tr></table></figure><p><em>${var:=string} 很常用的一种用法是，判断某个变量是否赋值，没有的话则给它赋上一个默认值。</em></p>\n<ol start=\"3\">\n<li var:+string=\"\">场景三 $</li>\n</ol>\n<ul>\n<li>若变量 var 为空时，则 不替换或者说是替换成变量 var 的值，即空值（因为变量 var 此时为空，所以这两种说法是等价的）；</li>\n<li>若变量 var 不为空时，则将 string 作为 var 变量的值，同时将 string 复制给 var 变量；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 脚本示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat var-default.sh </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#!/usr/bin/bash</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"请输入你要安装的路径 [default: /usr/local/teleport]:\"</span> var</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;var<span class=\"token operator\">:+</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>teleport&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;var&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#2. 变量 var 不为空示例</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh var-default.sh </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>请输入你要安装的路径 <span class=\"token punctuation\">[</span>default: /usr/local/teleport<span class=\"token punctuation\">]</span>:/test</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/usr/local/teleport</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>/test</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#3. 变量 var 为空示例</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@client ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh var-default.sh </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>请输入你要安装的路径 <span class=\"token punctuation\">[</span>default: /usr/local/teleport<span class=\"token punctuation\">]</span>:</pre></td></tr></table></figure>",
            "tags": [
                "Shell"
            ]
        }
    ]
}