<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://ixuyong.cn</id>
    <title>LinuxSre云原生 • Posts by &#34;prometheus&#34; tag</title>
    <link href="http://ixuyong.cn" />
    <updated>2025-06-29T02:33:49.000Z</updated>
    <category term="Aliyun" />
    <category term="ELKStack" />
    <category term="DevOps" />
    <category term="Docker" />
    <category term="Harbor" />
    <category term="Kubernetes" />
    <category term="LVS" />
    <category term="Linux" />
    <category term="rsync" />
    <category term="Vsftp" />
    <category term="Samba" />
    <category term="MySQL" />
    <category term="Openvpn" />
    <category term="Prometheus" />
    <category term="Rabbitmq" />
    <category term="Redis" />
    <category term="Tomcat" />
    <category term="Windows" />
    <entry>
        <id>http://ixuyong.cn/posts/2041568856.html</id>
        <title>Prometheus监控Kubernetes</title>
        <link rel="alternate" href="http://ixuyong.cn/posts/2041568856.html"/>
        <content type="html">&lt;h3 id=&#34;prometheus监控kubernetes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#prometheus监控kubernetes&#34;&gt;#&lt;/a&gt; Prometheus 监控 Kubernetes&lt;/h3&gt;
</content>
        <category term="Prometheus" />
        <updated>2025-06-29T02:33:49.000Z</updated>
    </entry>
    <entry>
        <id>http://ixuyong.cn/posts/4081185381.html</id>
        <title>Prometheus监控实战（三）</title>
        <link rel="alternate" href="http://ixuyong.cn/posts/4081185381.html"/>
        <content type="html">&lt;h3 id=&#34;prometheus监控实战三&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#prometheus监控实战三&#34;&gt;#&lt;/a&gt; Prometheus 监控实战（三）&lt;/h3&gt;
&lt;h4 id=&#34;一-promtheus节点监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-promtheus节点监控&#34;&gt;#&lt;/a&gt; 一. Promtheus 节点监控&lt;/h4&gt;
&lt;h5 id=&#34;11-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-配置prometheus&#34;&gt;#&lt;/a&gt; 1.1  配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

# rules配置文件路径
rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;12-创建rules目录并重载prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-创建rules目录并重载prometheus&#34;&gt;#&lt;/a&gt; 1.2 创建 rules 目录并重载 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# mkdir /etc/prometheus/rules
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;13-promtheus配置告警规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-promtheus配置告警规则&#34;&gt;#&lt;/a&gt; 1.3 Promtheus 配置告警规则&lt;/h5&gt;
&lt;h6 id=&#34;131-cpu监控案例实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#131-cpu监控案例实践&#34;&gt;#&lt;/a&gt; 1.3.1 CPU 监控案例实践&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;#1.配置CPU告警规则
[root@prom-node01 ~]# cat /etc/prometheus/rules/node_rules.yml 
groups:
- name: CPU告警规则
  rules:
  - alert: 节点CPU使率超过80%
    expr: ( 1 - avg(irate(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;[1m])) by (instance,job) ) * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机CPU利率过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的CPU利用率低于20%，当前利用率：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。可能存在CPU资源浪费情况。&amp;quot;
      
  - alert: CPU饱和度过⾼
    expr: sum(node_load1) by (instance,job) / (count(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;) by (instance,job) * 2) * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;CPU饱和度过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。需要立即检查系统负载情况。&amp;quot;
      
#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;132-内存监控案例实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#132-内存监控案例实践&#34;&gt;#&lt;/a&gt; 1.3.2 内存监控案例实践&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;#1.配置内存告警规则
[root@prom-node01 ~]# cat /etc/prometheus/rules/node_rules.yml 
groups:
- name: CPU告警规则
  rules:
  - alert: 节点CPU使率超过80%
    expr: ( 1 - avg(irate(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;[1m])) by (instance,job) ) * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机CPU利率过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的CPU利用率低于20%，当前利用率：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。可能存在CPU资源浪费情况。&amp;quot;

  - alert: CPU饱和度过⾼
    expr: sum(node_load1) by (instance,job) / (count(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;) by (instance,job) * 2) * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;CPU饱和度过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。需要立即检查系统负载情况。&amp;quot;

- name: 内存告警规则
  rules:
  - alert: 主机内存不⾜
    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存使用率较高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的内存使用率持续2分钟高于80%，当前利用率：&amp;#123;&amp;#123; $value&amp;#125;&amp;#125;%&amp;quot;
  - alert: 内存饱和度⾼
    expr: ( 1 - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes) * 100 &amp;gt; 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存内存饱和度高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过⾼，当前SWAP使用率为：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
      
#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;133-磁盘监控案例实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#133-磁盘监控案例实践&#34;&gt;#&lt;/a&gt; 1.3.3 磁盘监控案例实践&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/rules/node_rules.yml 
groups:
- name: CPU告警规则
  rules:
  - alert: 节点CPU使率超过80%
    expr: ( 1 - avg(irate(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;[1m])) by (instance,job) ) * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机CPU利率过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的CPU利用率低于20%，当前利用率：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。可能存在CPU资源浪费情况。&amp;quot;

  - alert: CPU饱和度过⾼
    expr: sum(node_load1) by (instance,job) / (count(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;) by (instance,job) * 2) * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;CPU饱和度过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。需要立即检查系统负载情况。&amp;quot;

  - alert: 主机内存不⾜
    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存使用率较高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的内存使用率持续2分钟高于80%，当前利用率：&amp;#123;&amp;#123; $value&amp;#125;&amp;#125;%&amp;quot;

  - alert: 内存饱和度⾼
    expr: ( 1 - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes) * 100 &amp;gt; 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存内存饱和度高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过⾼，当前SWAP使用率为：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;

- name: 磁盘告警规则
  rules:
  - alert: 磁盘空间告急
    expr: ( node_filesystem_size_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; - node_filesystem_avail_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; ) / node_filesystem_size_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; * 100 &amp;gt; 70
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint &amp;#125;&amp;#125;分区空间不足&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint&amp;#125;&amp;#125; 分区空间使用率已超过 70%，当前使用率为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%，请及时处理。&amp;quot;
          
  - alert: 磁盘Inode空间告急
    expr: (node_filesystem_files&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; - node_filesystem_files_free&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; ) / node_filesystem_files&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; * 100 &amp;gt; 70
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint &amp;#125;&amp;#125;分区Inode空间不足&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint&amp;#125;&amp;#125; 分区的Inode空间使用率已超过 70%，，当前使用率为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%，请及时处理。&amp;quot;
          
  - alert: 磁盘IOPS写入较高
    #expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 &amp;gt;60
    #round函数可以对值进行四舍五入，磁盘最大IOPS为120次/s
    expr: round(max(irate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; IOPS每秒写入次数超过120次/s&amp;quot;
      description: 
        当前磁盘IOPS写入饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
        当前磁盘IOPS每秒写入最大 &amp;#123;&amp;#123; printf `max(rate(node_disk_writes_completed_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m]))` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125; 次/s
                
  - alert: 磁盘IOPS读取较高
    expr: round(max(irate(node_disk_reads_completed_total[1m])) by (instance,job) / 120 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; IOPS每秒读取次数超过120次/s&amp;quot;
      description:
        当前磁盘IOPS读取饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
        当前磁盘IOPS每秒读取最⼤ &amp;#123;&amp;#123; printf `max(rate(node_disk_reads_completed_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m]))` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125; 次/s
  
  - alert: 磁盘IO写入吞吐较高
    expr: round(max(rate(node_disk_written_bytes_total[1m])) by (instance,job) / 1024 /1024 / 30 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘IO写入每秒超过最高30MB/s&amp;quot;
      description:
        当前磁盘IO写入吞吐量的饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。
        当前磁盘IO写入吞吐量每秒最大是 &amp;#123;&amp;#123; printf `max(rate(node_disk_written_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125;MB/s

  - alert: 磁盘IO读取吞吐较高
    expr: round(max(rate(node_disk_read_bytes_total[1m])) by (instance,job) / 1024 /1024 /30 * 100 ) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘IO读取每秒超过最大30MB/s&amp;quot;
      description:
        当前磁盘IO读取吞吐量的饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。
        当前磁盘IO读取吞吐量每秒最大是 &amp;#123;&amp;#123; printf `max(rate(node_disk_read_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125;MB/s
[root@prom-node01 ~]# vim /etc/prometheus/rules/node_rules.yml 
[root@prom-node01 ~]# cat /etc/prometheus/rules/node_rules.yml 
groups:
- name: CPU告警规则
  rules:
  - alert: 节点CPU使率超过80%
    expr: ( 1 - avg(irate(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;[1m])) by (instance,job) ) * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机CPU利率过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的CPU利用率低于20%，当前利用率：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。可能存在CPU资源浪费情况。&amp;quot;

  - alert: CPU饱和度过高
    expr: sum(node_load1) by (instance,job) / (count(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;) by (instance,job) * 2) * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;CPU饱和度过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。需要立即检查系统负载情况。&amp;quot;

  - alert: 主机内存不足
    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存使用率较高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的内存使用率持续2分钟高于80%，当前利用率：&amp;#123;&amp;#123; $value&amp;#125;&amp;#125;%&amp;quot;

  - alert: 内存饱和度高
    expr: ( 1 - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes) * 100 &amp;gt; 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存内存饱和度高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过高，当前SWAP使用率为：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;

- name: 磁盘告警规则
  rules:
  - alert: 磁盘空间告急
    expr: ( node_filesystem_size_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; - node_filesystem_avail_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; ) / node_filesystem_size_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; * 100 &amp;gt; 70
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint &amp;#125;&amp;#125;分区空间不足&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint&amp;#125;&amp;#125; 分区空间使用率已超过 70%，当前使用率为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%，请及时处理。&amp;quot;
          
  - alert: 磁盘Inode空间告急
    expr: (node_filesystem_files&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; - node_filesystem_files_free&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; ) / node_filesystem_files&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; * 100 &amp;gt; 70
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint &amp;#125;&amp;#125;分区Inode空间不足&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint&amp;#125;&amp;#125; 分区的Inode空间使用率已超过 70%，，当前使用率为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%，请及时处理。&amp;quot;
          
  - alert: 磁盘IOPS写入较高
    #expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 &amp;gt;60
    #round函数可以对值进行四舍五入，磁盘最大IOPS为120次/s
    expr: round(max(irate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; IOPS每秒写入次数超过120次/s&amp;quot;
      description: 
        当前磁盘IOPS写入饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
        当前磁盘IOPS每秒写入最大 &amp;#123;&amp;#123; printf `max(rate(node_disk_writes_completed_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m]))` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125; 次/s
                
  - alert: 磁盘IOPS读取较高
    expr: round(max(irate(node_disk_reads_completed_total[1m])) by (instance,job) / 120 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; IOPS每秒读取次数超过120次/s&amp;quot;
      description:
        当前磁盘IOPS读取饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
        当前磁盘IOPS每秒读取最⼤ &amp;#123;&amp;#123; printf `max(rate(node_disk_reads_completed_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m]))` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125; 次/s
  
  - alert: 磁盘IO写入吞吐较高
    expr: round(max(rate(node_disk_written_bytes_total[1m])) by (instance,job) / 1024 /1024 / 30 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘IO写入每秒超过最高30MB/s&amp;quot;
      description:
        当前磁盘IO写入吞吐量的饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。
        当前磁盘IO写入吞吐量每秒最大是 &amp;#123;&amp;#123; printf `max(rate(node_disk_written_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125;MB/s

  - alert: 磁盘IO读取吞吐较高
    expr: round(max(rate(node_disk_read_bytes_total[1m])) by (instance,job) / 1024 /1024 /30 * 100 ) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘IO读取每秒超过最大30MB/s&amp;quot;
      description:
        当前磁盘IO读取吞吐量的饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。
        当前磁盘IO读取吞吐量每秒最大是 &amp;#123;&amp;#123; printf `max(rate(node_disk_read_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125;MB/s

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload

#根据过去24小时磁盘使用情况，计算未来30天磁盘使用空间
predict_linear(node_filesystem_avail_bytes&amp;#123;device!~&amp;quot;tmpfs|rootfs&amp;quot;&amp;#125;[24h],60*60*24*30) /1024/1024/1024
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;134-网络监控案例实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#134-网络监控案例实践&#34;&gt;#&lt;/a&gt; 1.3.4 ⽹络监控案例实践&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/rules/node_rules.yml 
groups:
- name: 节点告警规则
  rules:
  - alert: 节点CPU使率超过80%
    expr: ( 1 - avg(irate(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;[1m])) by (instance,job) ) * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机CPU利率过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的CPU利用率低于20%，当前利用率：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。可能存在CPU资源浪费情况。&amp;quot;

  - alert: CPU饱和度过高
    expr: sum(node_load1) by (instance,job) / (count(node_cpu_seconds_total&amp;#123;mode=&amp;quot;idle&amp;quot;&amp;#125;) by (instance,job) * 2) * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;CPU饱和度过高，实例：&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。需要立即检查系统负载情况。&amp;quot;

  - alert: 主机内存不足
    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 &amp;gt; 80
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存使用率较高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例的内存使用率持续2分钟高于80%，当前利用率：&amp;#123;&amp;#123; $value&amp;#125;&amp;#125;%&amp;quot;

  - alert: 内存饱和度高
    expr: ( 1 - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes) * 100 &amp;gt; 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;主机内存内存饱和度高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, 任务:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过高，当前SWAP使用率为：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;

  - alert: 磁盘空间告急
    expr: ( node_filesystem_size_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; - node_filesystem_avail_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; ) / node_filesystem_size_bytes&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; * 100 &amp;gt; 70
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint &amp;#125;&amp;#125;分区空间不足&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint&amp;#125;&amp;#125; 分区空间使用率已超过 70%，当前使用率为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%，请及时处理。&amp;quot;
          
  - alert: 磁盘Inode空间告急
    expr: (node_filesystem_files&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; - node_filesystem_files_free&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; ) / node_filesystem_files&amp;#123;device!=&amp;quot;tmpfs&amp;quot;&amp;#125; * 100 &amp;gt; 70
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint &amp;#125;&amp;#125;分区Inode空间不足&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘 &amp;#123;&amp;#123; $labels.mountpoint&amp;#125;&amp;#125; 分区的Inode空间使用率已超过 70%，，当前使用率为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%，请及时处理。&amp;quot;
          
  - alert: 磁盘IOPS写入较高
    #expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 &amp;gt;60
    #round函数可以对值进行四舍五入，磁盘最大IOPS为120次/s
    expr: round(max(irate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; IOPS每秒写入次数超过120次/s&amp;quot;
      description: 
        当前磁盘IOPS写入饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
        当前磁盘IOPS每秒写入最大 &amp;#123;&amp;#123; printf `max(rate(node_disk_writes_completed_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m]))` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125; 次/s
                
  - alert: 磁盘IOPS读取较高
    expr: round(max(irate(node_disk_reads_completed_total[1m])) by (instance,job) / 120 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; IOPS每秒读取次数超过120次/s&amp;quot;
      description:
        当前磁盘IOPS读取饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
        当前磁盘IOPS每秒读取最⼤ &amp;#123;&amp;#123; printf `max(rate(node_disk_reads_completed_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m]))` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125; 次/s
  
  - alert: 磁盘IO写入吞吐较高
    expr: round(max(rate(node_disk_written_bytes_total[1m])) by (instance,job) / 1024 /1024 / 30 * 100) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘IO写入每秒超过最高30MB/s&amp;quot;
      description:
        当前磁盘IO写入吞吐量的饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。
        当前磁盘IO写入吞吐量每秒最大是 &amp;#123;&amp;#123; printf `max(rate(node_disk_written_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125;MB/s

  - alert: 磁盘IO读取吞吐较高
    expr: round(max(rate(node_disk_read_bytes_total[1m])) by (instance,job) / 1024 /1024 /30 * 100 ) &amp;gt; 60
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 磁盘IO读取每秒超过最大30MB/s&amp;quot;
      description:
        当前磁盘IO读取吞吐量的饱和度是 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。
        当前磁盘IO读取吞吐量每秒最大是 &amp;#123;&amp;#123; printf `max(rate(node_disk_read_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;&amp;#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf &#34;%.2f&#34; &amp;#125;&amp;#125;MB/s

  - alert: 网络下载带宽异常
    expr: max(irate(node_network_receive_bytes_total[1m]) * 8 / 1024 / 1024) by (instance,job,device) / 50 * 100 &amp;gt;= 80
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的 &amp;#123;&amp;#123; $labels.device &amp;#125;&amp;#125; 接口下载流量已经超过公司实际50Mbps&amp;quot;
      description:
        当前下载带宽已经达到 &amp;#123;&amp;#123; printf `(irate(node_network_receive_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;,device=&#34;%s&#34;&amp;#125;[1m]) * 8 / 1024 / 1024)` $labels.instance $labels.job $labels.device | query | first | value | printf &#34;%.2f&#34;&amp;#125;&amp;#125; Mbps/s
        当前下载带宽使用率在 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
  
  - alert: 网络上传带宽异常
    expr: max(irate(node_network_transmit_bytes_total[1m]) * 8 / 1024 / 1024) by (instance,job,device) / 50 * 100 &amp;gt;= 80
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的 &amp;#123;&amp;#123; $labels.device &amp;#125;&amp;#125; 接口上传流量已经超过公司实际50Mbps&amp;quot;
      description:
        当前上传带宽已经达到 &amp;#123;&amp;#123; printf `(irate(node_network_transmit_bytes_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;,device=&#34;%s&#34;&amp;#125;[1m]) * 8 / 1024 / 1024)` $labels.instance $labels.job $labels.device | query | first | value | printf &#34;%.2f&#34;&amp;#125;&amp;#125; Mbps/s
        当前上传带宽使用率在 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;二-prometheus监控rabbitmq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-prometheus监控rabbitmq&#34;&gt;#&lt;/a&gt; 二. Prometheus 监控 RabbitmQ&lt;/h4&gt;
&lt;h5 id=&#34;21-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-配置prometheus&#34;&gt;#&lt;/a&gt; 2.1 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

#2.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;22-rabbitmq告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-rabbitmq告警规则文件&#34;&gt;#&lt;/a&gt; 2.2 RabbitMQ 告警规则文件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1.配置rabbitmq告警规则
[root@prom-node01 ~]# cat /etc/prometheus/rules/rabbitmq_rules.yml
groups:
- name: rabbitmq告警规则
  rules:
  - alert: RabbitMQDown
    expr: up&amp;#123;instance=&amp;quot;prom-node02.oldxu.net:15692&amp;quot;, job=&amp;quot;rabbitmq&amp;quot;&amp;#125; != 1
    labels:
      severity: High
    annotations:
      summary: &amp;quot;Rabbitmq Down,实例:&amp;#123;&amp;#123;$labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;Rabbitmq_exporter连不上RabbitMQ!&amp;quot;
  
  - alert: RabbitMQ队列已就绪的消息过多
    expr: avg_over_time(rabbitmq_queue_messages_ready[5m]) &amp;gt; 500
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RabbitMQ实例的队列消息准备过多&#39;
      description: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;实例中平均准备好待消费的消息数量超过500，当前平均值为&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&#39;
          
  - alert: RabbitMQ队列中已消费但未确认的消息过多
    expr: avg_over_time(rabbitmq_queue_messages_unacked[5m]) &amp;gt; 500
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RabbitMQ实例的队列消息确认存在延迟&#39;
      description: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 实例中平均已被消费但未被确认的消息数量超过500，当前平均值为&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&#39;
          
  - alert: RabbitMQ磁盘空间预测不足
    expr: predict_linear(rabbitmq_disk_space_available_bytes[24h], 60*60*24*10) &amp;lt; rabbitmq_disk_space_available_limit_bytes
    for: 1h
    labels:
      severity: critical
    annotations:
      summary: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RabbitMQ实例的磁盘空间预测不足。&#39;
      description: &#39;基于过去24小时磁盘可用空间数据预测，未来10天内磁盘的可用空间可能低于默认配置的50MB。&#39;
 
  - alert: RabbitMQ文件描述符使用率过高
    expr: max_over_time(rabbitmq_process_open_fds[5m]) / rabbitmq_process_max_fds * 100 &amp;gt; 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RabbitMQ实例的文件描述符使用率过高&#39;
      description: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 实例打开的文件描述符数量最大值，占文件描述限制的比率超过80%，当前比率为&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&#39;
          
  - alert: RabbitMQ TCP套接字使用率过高
    expr: max_over_time(rabbitmq_process_open_tcp_sockets[5m]) / rabbitmq_process_max_tcp_sockets * 100 &amp;gt; 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RabbitMQ实例的TCP套接字使用率过高&#39;
      description: &#39;&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 实例打开的TCP套接字数量最大值，占操作系统允许的TCP连接数限制的比率超过80%，当前比率为&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&#39;
      
#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/rabbitmq_rules.yml 

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;三-prometheus监控nginx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-prometheus监控nginx&#34;&gt;#&lt;/a&gt; 三. Prometheus 监控 Nginx&lt;/h4&gt;
&lt;h5 id=&#34;31-安装并配置nginx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-安装并配置nginx&#34;&gt;#&lt;/a&gt; 3.1 安装并配置 Nginx&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1.安装Nginx
[root@prom-node03 ~]# yum install nginx -y
[root@prom-node03 ~]# cat /etc/nginx/conf.d/mointor.oldxu.net.conf
server &amp;#123;
	 listen 8888;
	 server_name monitor.oldxu.net;
	 location /nginx_status &amp;#123;
		 stub_status on;
 	 &amp;#125;
&amp;#125;
[root@prom-node03 ~]# nginx -t
[root@prom-node03 ~]# systemctl enable nginx &amp;amp;&amp;amp; systemctl start nginx

#2.检查Nginx的状态⻚⾯
[root@prom-node03 ~]#  curl http://localhost:8888/nginx_status
Active connections: 1 
server accepts handled requests
 1 1 1 
Reading: 0 Writing: 1 Waiting: 0 
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;32-安装并配置nginx-exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-安装并配置nginx-exporter&#34;&gt;#&lt;/a&gt; 3.2 安装并配置 Nginx-exporter&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1.下载Nginx-exporter
[root@prom-node03 ~]# wget https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v1.1.0/nginx-prometheus-exporter_1.1.0_linux_amd64.tar.gz
#加速地址
[root@prom-node03 ~]# wget https://mirror.ghproxy.com/https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v1.1.0/nginx-prometheus-exporter_1.1.0_linux_amd64.tar.gz

#2.将Nginx_exporter安装到指定的路径
[root@prom-node03 ~]# mkdir /etc/nginx_exporter_1.1.0
[root@prom-node03 ~]# tar xf nginx-prometheus-exporter_1.1.0_linux_amd64.tar.gz -C /etc/nginx_exporter_1.1.0/
[root@prom-node03 ~]# ln -s /etc/nginx_exporter_1.1.0/ /etc/nginx_exporter
[root@prom-node03 nginx_exporter]# ./nginx-prometheus-exporter --web.listen-address=:9113 --nginx.scrape-uri=http://127.0.0.1:8888/nginx_status

#3.为nginx_exporter准备system启停⽂件
[root@prom-node03 ~]# cat /usr/lib/systemd/system/nginx_exporter.service
[Unit]
Description=nginx-exporter
Documentation=https://prometheus.io/
After=network.target

[Service]
ExecStart=/etc/nginx_exporter/nginx-prometheus-exporter \
  --web.listen-address=:9113 \
  --web.telemetry-path=&amp;quot;/metrics&amp;quot; \
  --nginx.scrape-uri=http://127.0.0.1:8888/nginx_status
Restart=on-failure
RestartSec=20
[Install]
WantedBy=multi-user.target

#4.启动nginx_exporter服务，它默认监听在 9113 端⼝上
[root@prom-node03 ~]#  systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable nginx_exporter &amp;amp;&amp;amp; systemctl start nginx_exporter
[root@prom-node03 ~]# netstat -lntp|grep 9113
tcp6       0      0 :::9113                 :::*                    LISTEN      1829/nginx-promethe 

#5.访问nginx_exporter暴露的metrics，检查是否能获取到对应的指标数据
[root@prom-node03 nginx_exporter]#  curl http://127.0.0.1:9113/metrics
# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0&amp;quot;&amp;#125; 0
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0.25&amp;quot;&amp;#125; 0
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0.5&amp;quot;&amp;#125; 0
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0.75&amp;quot;&amp;#125; 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;33-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-配置prometheus&#34;&gt;#&lt;/a&gt; 3.3 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

#2.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;34-nginx告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-nginx告警规则文件&#34;&gt;#&lt;/a&gt; 3.4 Nginx 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1.具体的告警规则示例⽂件（需要根据公司实际情况进⾏调整）
[root@prom-node01 ~]# cat /etc/prometheus/rules/nginx_rules.yml
groups:
- name: nginx告警规则
  rules:
  - alert: Nginx Server Down
    expr: nginx_up == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Nginx 服务不存活, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;nginx_exporter连不上Nginx了，当前状态为: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;&amp;quot;
          
  - alert: Nginx活跃连接数过高
    expr: avg_over_time(nginx_connections_active[5m]) &amp;gt; 500
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Nginx 活跃连接数过高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot; Nginx 的平均活跃连接数超过了设定的500阈值，当前值为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
          
  - alert: Nginx等待连接数高
    expr: max_over_time(nginx_connections_waiting[5m]) &amp;gt; 100
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Nginx 等待连接数过高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;Nginx 的等待连接数超过了设定的100阈值，当前最大值为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。可能后端服务存在瓶颈。&amp;quot;
          
  - alert: Nginx读写入率异常
    expr: (nginx_connections_reading - nginx_connections_writing) / nginx_connections_reading * 100 &amp;gt; 10
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Nginx 读写入率异常, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;Nginx 读取请求的数量高于写请求的数量，当前读请求高于写请求比率是: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;&amp;quot;
  - alert: Nginx⼤量TCP连接处理失败
    expr: nginx_connections_accepted - nginx_connections_handled &amp;gt; 50
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Nginx 大量TCP连接处理失败, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;Nginx 接受的连接数与处理成功的连接数之差超过了50，当前差值为&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;&amp;quot;
      
#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;四-prometheus监控tomcat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-prometheus监控tomcat&#34;&gt;#&lt;/a&gt; 四. Prometheus 监控 Tomcat&lt;/h4&gt;
&lt;h5 id=&#34;41-安装并配置tomcat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-安装并配置tomcat&#34;&gt;#&lt;/a&gt; 4.1 安装并配置 tomcat&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1.安装tomcat
[root@prom-node03 nginx_exporter]# yum install tomcat tomcat-webapps -y

#2.下载所依赖的 jar包
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient/0.12.0/simpleclient-0.12.0.jar
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_common/0.12.0/simpleclient_common-0.12.0.jar
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_hotspot/0.12.0/simpleclient_hotspot-0.12.0.jar
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_servlet/0.12.0/simpleclient_servlet-0.12.0.jar
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_servlet_common/0.12.0/simpleclient_servlet_common-0.12.0.jar
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=nl/nlighten/tomcat_exporter_client/0.0.15/tomcat_exporter_client-0.0.15.jar
[root@prom-node03 ~]# wget https://search.maven.org/remotecontent?filepath=nl/nlighten/tomcat_exporter_servlet/0.0.15/tomcat_exporter_servlet-0.0.15.war
# 整合包的下载地址
[root@prom-node03 ~]# wget https://mirror.ghproxy.com/https://github.com/Im-oldxu/tomcat-exporter/releases/download/tomcat_exporter-0.0.17/tomcat_exporter.tar.gz

#3.将jar包和war包分别拷⻉⾄对应的⽬录下
[root@prom-node03 ~]# cp tomcat_exporter/*.jar /usr/share/tomcat/lib/
[root@prom-node03 ~]# cp tomcat_exporter/*.war /usr/share/tomcat/webapps/

#4.启动Tomcat
[root@prom-node03 ~]# systemctl start tomcat &amp;amp;&amp;amp; systemctl enable tomcat

#5.访问tomcat的metrics
[root@prom-node03 ~]# curl http://localhost:8080/metrics/
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 7.37
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.70921425481E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 65.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;42-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-配置prometheus&#34;&gt;#&lt;/a&gt; 4.2 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

#.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;43-tomcat告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-tomcat告警规则文件&#34;&gt;#&lt;/a&gt; 4.3 Tomcat 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1.具体的告警规则示例⽂件
[root@prom-node01 ~]# cat /etc/prometheus/rules/tomcat_rules.yml
groups:
- name: tomcat告警规则
  rules:
  - alert: Tomcat活跃连接数过⾼
    expr: tomcat_connections_active_total / tomcat_connections_active_max* 100 &amp;gt;=80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Tomcat服务器活跃连接数过高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description:
        Tomcat最大连接数是 &amp;#123;&amp;#123; printf `tomcat_connections_active_max&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;,name=&#34;%s&#34;&amp;#125;` $labels.instance $labels.job $labels.name | query | first | value &amp;#125;&amp;#125;
        Tomcat目前连接数是 &amp;#123;&amp;#123; printf `tomcat_connections_active_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;,name=&#34;%s&#34;&amp;#125;` $labels.instance $labels.job $labels.name | query | first | value &amp;#125;&amp;#125;
        Tomcat活跃连接数已超过最大活跃连接数的80%, 当前值为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%
                
  - alert: Tomcat处理请求超过5秒
    expr: rate(tomcat_requestprocessor_time_seconds[5m]) &amp;gt; 5
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Tomcat处理请求时间过长, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;Tomcat在过去5分钟的平均处理请求时间超过5秒，当前值 &amp;#123;&amp;#123; $value&amp;#125;&amp;#125;。&amp;quot;
          
  - alert: &amp;quot;Tomcat会话拒绝率超过20%&amp;quot;
    expr: (tomcat_session_rejected_total / (tomcat_session_created_total +tomcat_session_rejected_total)) * 100 &amp;gt; 20
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Tomcat会话拒绝率过高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;Tomcat在Host:&amp;#123;&amp;#123; $labels.host &amp;#125;&amp;#125; 的 &amp;#123;&amp;#123; $labels.context&amp;#125;&amp;#125; 的上下文中的会话拒绝率超过20%，当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
          
  - alert: &amp;quot;Tomcat线程使用率过高&amp;quot;
    expr: (tomcat_threads_active_total / tomcat_threads_max) * 100 &amp;gt; 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Tomcat线程使⽤率过⾼, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description:
        Tmcat最大线程数是 &amp;#123;&amp;#123; printf `tomcat_threads_max&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;,name=&#34;%s&#34;&amp;#125;` $labels.instance $labels.job $labels.name | query | first| value &amp;#125;&amp;#125;
        Tomcat目前线程数是 &amp;#123;&amp;#123; printf `tomcat_threads_active_total&amp;#123;instance=&#34;%s&#34;,job=&#34;%s&#34;,name=&#34;%s&#34;&amp;#125;` $labels.instance $labels.job $labels.name | query | first | value &amp;#125;&amp;#125;
        Tomcat线程数已超过最大活跃连接数的80%, 当前值为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;五-prometheus监控springboot&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-prometheus监控springboot&#34;&gt;#&lt;/a&gt; 五. Prometheus 监控 SpringBoot&lt;/h4&gt;
&lt;h5 id=&#34;51-下载jmx-exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-下载jmx-exporter&#34;&gt;#&lt;/a&gt; 5.1 下载 jmx-exporter&lt;/h5&gt;
&lt;p&gt;1、访问 github， &lt;a href=&#34;https://github.com/prometheus/jmx_exporter/releases&#34;&gt;https://github.com/prometheus/jmx_exporter/releases&lt;/a&gt; ，下载 java-expoter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node03 ~]# mkdir /etc/jmx_exporter
[root@prom-node03 ~]# cd /etc/jmx_exporter
[root@prom-node03 springboot]# wget https://repo.maven.apache.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.20.0/jmx_prometheus_javaagent-0.20.0.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、准备 config.yml 配置⽂件（规则⽂件可以定义要暴露哪些指标给 Prometheus）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node03 ~]# cat /etc/jmx_exporter/config.yaml
rules:
- pattern: &amp;quot;.*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;52-运行springboot应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-运行springboot应用&#34;&gt;#&lt;/a&gt; 5.2 运⾏ SpringBoot 应⽤&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、安装java基础环境
[root@prom-node03 ~]#  yum install java-11-openjdk maven -y
[root@prom-node03 ~]# wget -O /etc/maven/settings.xml https://linux.oldxu.net/settings.xml

#2、下载java应⽤然后进⾏编译
[root@prom-node03 ~]# wget http://file.oldxu.net/jenkins/springboot-devops-myapp-java11-jar.tar.gz
[root@prom-node03 ~]# tar xf springboot-devops-myapp-java11-jar.tar.gz
[root@prom-node03 ~]# cd springboot-devops-myapp-jar/
[root@prom-node03 springboot-devops-myapp-jar]# mvn package

#3、运⾏java应⽤，并加载jmx监控，监听12345端⼝， &amp;lt;path_to_jmx_exporter.jar&amp;gt;=&amp;lt;exporter_port&amp;gt;:&amp;lt;path_to_config.yaml&amp;gt;
[root@prom-node03 springboot-devops-myapp-jar]# java \
 -javaagent:/etc/jmx_exporter/jmx_prometheus_javaagent-0.20.0.jar=12345:/etc/jmx_exporter/config.yaml \
 -jar -Xms50m -Xmx50m target/devops-myapp-1.0.jar \
 --server.port=8081 &amp;amp;&amp;gt;/var/log/springboot.log &amp;amp;
 
 #4、检查对应的端⼝是否正常
 [root@prom-node03 springboot-devops-myapp-jar]# curl http://localhost:12345/metrics
# HELP jmx_scrape_error Non-zero if this scrape failed.
# TYPE jmx_scrape_error gauge
jmx_scrape_error 0.0
# HELP jmx_scrape_cached_beans Number of beans with their matching rule cached
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;53-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-配置prometheus&#34;&gt;#&lt;/a&gt; 5.3  配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

#2.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;54-jmx告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#54-jmx告警规则文件&#34;&gt;#&lt;/a&gt; 5.4 JMX 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/rules/jvm_rules.yml
groups:
- name: &amp;quot;JVM告警规则&amp;quot;
  rules:
  - alert: JVM堆内存使用率过高
    expr: jvm_memory_bytes_used&amp;#123;area=&amp;quot;heap&amp;quot;,&amp;#125; / jvm_memory_bytes_max&amp;#123;area=&amp;quot;heap&amp;quot;,&amp;#125; * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;JVM 堆内存使用率过高, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, job:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125; &amp;quot;
      description: &amp;quot;JVM堆内存使用率超过80%, 当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%&amp;quot;
          
  - alert: JVMGC时间过长
    expr: sum (rate(jvm_gc_collection_seconds_sum[5m]) / rate(jvm_gc_collection_seconds_count[5m])) by (gc, instance, job) &amp;gt; 1
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;JVM GC时间过长, 实例:&amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;, job:&amp;#123;&amp;#123; $labels.job &amp;#125;&amp;#125; &amp;quot;
      description: &amp;quot;JVM &amp;#123;&amp;#123; $labels.gc &amp;#125;&amp;#125; 的回收时间超过1s，当前值 &amp;#123;&amp;#123; $value&amp;#125;&amp;#125;s&amp;quot;
          
  - alert: JVM死锁线程过多
    expr: min_over_time(jvm_threads_deadlocked[5m]) &amp;gt; 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;JVM检测到死锁线程&amp;quot;
      description: &amp;quot;在过去5分钟内JVM检测到存在死锁线程, 当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
      
#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/jvm_rules.yml 

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;六-安装并配置mysql_master&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-安装并配置mysql_master&#34;&gt;#&lt;/a&gt; 六。安装并配置 mysql_master&lt;/h4&gt;
&lt;h5 id=&#34;61-安装并配置mysql_master&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#61-安装并配置mysql_master&#34;&gt;#&lt;/a&gt; 6.1 安装并配置 mysql_master&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、安装Mysql5.7
[root@prom-node03 ~]# yum install -y mysql-community-server
[root@prom-node03 ~]# systemctl start mysqld &amp;amp;&amp;amp; systemctl enable mysqld
[root@prom-node03 ~]# mysql -uroot -p$(awk &#39;/temporary password/&amp;#123;print $NF&amp;#125;&#39; /var/log/mysqld.log)
mysql&amp;gt;  ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;Superman*2023&#39;;

#2、创建⼀个 mysql_exporter 专属的监控账户
mysql&amp;gt; create user &#39;exporter&#39;@&#39;localhost&#39; identified by &#39;Superman*2023&#39; WITH MAX_USER_CONNECTIONS 3;
mysql&amp;gt; grant process,replication client,select on *.* to &#39;exporter&#39;@&#39;localhost&#39;;

#3、创建MySQL从库复制的账户
mysql&amp;gt; grant replication slave on *.* to &#39;repl&#39;@&#39;%&#39; identified by &#39;Superman*2023&#39;;
mysql&amp;gt; flush privileges;

#4.配置主库
[root@prom-node03 ~]# vim /etc/my.cnf
server-id=1
log-bin=mysql-bin
read-only=0
[root@prom-node03 ~]# systemctl restart mysqld
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;62-安装并配置mysql_slave&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#62-安装并配置mysql_slave&#34;&gt;#&lt;/a&gt; 6.2 安装并配置 mysql_slave&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、从库配置
[root@prom-node04 ~]# yum install -y mysql-community-server
[root@db02 ~]# vim /etc/my.cnf
server-id=2
read-only=1

#2、创建⼀个 mysql_exporter 专属的监控账户
grant all on *.* to &#39;exporter&#39;@&#39;localhost&#39; identified by &#39;Superman*2023&#39;;

#3、获取主库的信息，⽽后配置从库的change master
mysql&amp;gt; show master status;
+------------------+----------+--------------+------------------+-------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------------+----------+--------------+------------------+-------------------+
| mysql-bin.000007 |      154 |              |                  |                   |
+------------------+----------+--------------+------------------+-------------------+
1 row in set (0.01 sec)

#4、配置从服务器，连接主服务器
mysql&amp;gt; change master to master_host=&#39;192.168.40.223&#39;,master_user=&#39;repl&#39;,master_password=&#39;Superman*2023&#39;,master_log_file=&#39;mysql-bin.000007&#39;,master_log_pos=154;

#5.开启从库
mysql&amp;gt; start slave;

#6.检查主从复制状态
mysql&amp;gt; show slave status\G
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;63-安装并配置mysqld_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#63-安装并配置mysqld_exporter&#34;&gt;#&lt;/a&gt; 6.3 安装并配置 mysqld_exporter&lt;/h5&gt;
&lt;p&gt;1、访问 mysqld_exporter 的 github 地址， &lt;a href=&#34;https://github.com/prometheus/mysqld_exporter/releases&#34;&gt;https://github.com/prometheus/mysqld_exporter/releases&lt;/a&gt; 下载 mysqld-exporter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1、下载mysqld_expor
[root@prom-node03 ~]# wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.15.0/mysqld_exporter-0.15.0.linux-amd64.tar.gz
# 加速地址
[root@prom-node03 ~]# wget https://mirror.ghproxy.com/https://github.com/prometheus/mysqld_exporter/releases/download/v0.15.0/mysqld_exporter-0.15.0.linux-amd64.tar.gz

#2、解压mysqld_expor
[root@prom-node03 ~]# tar xf mysqld_exporter-0.15.0.linux-amd64.tar.gz -C /etc/
[root@prom-node03 ~]# ln -s /etc/mysqld_exporter-0.15.0.linux-amd64/ /etc/mysqld_exporter

#3、启动mysqld_expor
[root@prom-node03 ~]# export MYSQLD_EXPORTER_PASSWORD=Superman*2023
[root@prom-node03 ~]# /etc/mysqld_exporter/mysqld_exporter --mysqld.address=localhost:3306 --mysqld.username=exporter

#4、编写mysqld_exporter启动⽂件
[root@prom-node03 ~]# cat /usr/lib/systemd/system/mysqld_exporter.service
[Unit]
Description=mysqld_exporter
Documentation=https://prometheus.io/
After=network.target

[Service]
Environment=&#39;MYSQLD_EXPORTER_PASSWORD=Superman*2023&#39;
ExecStart=/etc/mysqld_exporter/mysqld_exporter \
        --mysqld.address=localhost:3306 \
        --mysqld.username=exporter \
        --web.listen-address=:9104 \
        --web.telemetry-path=&amp;quot;/metrics&amp;quot; \
        --collect.info_schema.processlist \
        --collect.info_schema.innodb_tablespaces \
        --collect.info_schema.innodb_metrics \
        --collect.info_schema.query_response_time \
        --collect.info_schema.userstats \
        --collect.info_schema.tables \
        --collect.global_status \
        --collect.global_variables \
        --collect.slave_status \
        --collect.binlog_size \
        --collect.engine_innodb_status
ExecReload=/bin/kill -HUP $MAINPID
TimeoutStopSec=20s
Restart=always

[Install]
WantedBy=multi-user.target

#4、启动mysqld_exporter，并检查服务
[root@prom-node03 ~]# systemctl daemon-reload
[root@prom-node03 ~]# systemctl start mysqld_exporter

#5、测试mysqld_exporter能否获取到对应的指标
[root@prom-node03 ~]# netstat -lntp |grep 9104
tcp6       0      0 :::9104                 :::*                    LISTEN      2863/mysqld_exporte 
[root@prom-node03 ~]#  curl http://localhost:9104/metrics
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;64-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#64-配置prometheus&#34;&gt;#&lt;/a&gt; 6.4 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

  - job_name: &amp;quot;mysqld_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: master
    - targets: [&amp;quot;prom-node04.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: slave

#2.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;65-mysql告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#65-mysql告警规则文件&#34;&gt;#&lt;/a&gt; 6.5 MySQL 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、编写MySQL告警规则⽂件
[root@prom-node01 ~]# cat /etc/prometheus/rules/mysql_rules.yml
groups:
- name: mysql告警规则
  rules:
  - alert: MySQL主库实例宕机
    expr: mysql_up&amp;#123;role=&amp;quot;master&amp;quot;&amp;#125; == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;MySQL实例宕机, 实例: &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; ⻆⾊: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125; 已经宕机。&amp;quot;
          
  - alert: MySQL从库实例宕机
    expr: mysql_up&amp;#123;role=&amp;quot;slave&amp;quot;&amp;#125; == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;MySQL实例宕机, 实例: &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; ⻆⾊: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125; 已经宕机。&amp;quot;
          
  - alert: MySQL实例重启
    expr: sum(mysql_global_status_uptime) by (instance,job,service,role)&amp;lt; 60
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL实例重启, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; ⻆⾊: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125; 运行时间小于60s。当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;&amp;quot;

  - alert: MySQL连接数使用率超过80%
    expr: max_over_time(mysql_global_status_threads_connected[5m]) / mysql_global_variables_max_connections * 100 &amp;gt; 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL连接数过高, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;,服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; ⻆⾊: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例MySQL的连接数在过去5分钟内超过了最大连接数的80%, 当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: MySQL活跃线程数高
    expr: avg_over_time(mysql_global_status_threads_running[5m]) / mysql_global_variables_max_connections * 100 &amp;gt; 60
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL活跃线程数过高, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;,服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; 角色: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例MySQL的活跃线程数在过去5分钟内持续超过了最大连接数的60%, 当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: MySQL查询率(QPS)过高
    expr: irate(mysql_global_status_queries[5m]) &amp;gt; 1000
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL查询率(QPS)超标, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;,服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; 角色: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例MySQL的查询率(QPS)在过去5分钟内超过1000, 当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
          
  - alert: MySQL事务率(TPS)过高
    expr: sum(rate(mysql_global_status_commands_total&amp;#123;command=~&amp;quot;(commit|rollback)&amp;quot;&amp;#125;[5m])) without (command) &amp;gt; 100
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL事务率(TPS)超标, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;,服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; 角色: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例MySQL的事务率(TPS)在过去5分钟内超过100, 当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
          
  - alert: MySQL文件描述符使用率过高
    expr: mysql_global_status_open_files / mysql_global_variables_open_files_limit * 100 &amp;gt; 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL活跃线程数过高, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;,服务:&amp;#123;&amp;#123; $labels.service &amp;#125;&amp;#125; 角色: &amp;#123;&amp;#123; $labels.role &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例MySQL的文件描述符使用率超过80%，当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%可能需要增加文件描述符限制。&amp;quot;
          
  - alert: Mysql从库IO线程未运行
    expr: mysql_slave_status_slave_io_running == 0
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL从库IO线程已停止, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该MySQL实例IO线程已停止，当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;&amp;quot;
          
  - alert: Mysql从库SQL线程未运行
    expr: mysql_slave_status_slave_sql_running == 0
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL从库SQL线程已停止, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该MySQL实例SQL线程已停止，当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;&amp;quot;
          
  - alert: Mysql从库复制延迟过高
    expr: mysql_slave_status_seconds_behind_master - mysql_slave_status_sql_delay &amp;gt; 5
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;MySQL从库复制延迟过高, 实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;&amp;quot;
      description: &amp;quot;该实例MySQL的复制延迟超过5s，当前值 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;s&amp;quot;

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/mysql_rules.yml 
Checking /etc/prometheus/rules/mysql_rules.yml
  SUCCESS: 11 rules found

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;七-prometheus监控redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-prometheus监控redis&#34;&gt;#&lt;/a&gt; 七. Prometheus 监控 Redis&lt;/h4&gt;
&lt;h5 id=&#34;71-安装并配置redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#71-安装并配置redis&#34;&gt;#&lt;/a&gt; 7.1 安装并配置 Redis&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node03 ~]# yum install redis -y
[root@prom-node03 ~]# vim /etc/redis.conf 
maxmemory 200mb
[root@prom-node03 ~]# systemctl start redis &amp;amp;&amp;amp; systemctl enable redis
[root@prom-node03 ~]# netstat -lntp|grep redis
tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      2532/redis-server 1 
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;72-安装并配置redis_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#72-安装并配置redis_exporter&#34;&gt;#&lt;/a&gt; 7.2 安装并配置 redis_exporter&lt;/h5&gt;
&lt;p&gt;1、访问 redis_exporter 的 github 地址， &lt;a href=&#34;https://github.com/oliver006/redis_exporter/releases&#34;&gt;https://github.com/oliver006/redis_exporter/releases&lt;/a&gt; ，下载 redis_exporter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1、下载redis_exporter
[root@prom-node03 ~]# wget https://github.com/oliver006/redis_exporter/releases/download/v1.57.0/redis_exporter-v1.57.0.linux-amd64.tar.gz
#加速地址
[root@prom-node03 ~]# wget https://mirror.ghproxy.com/https://github.com/oliver006/redis_exporter/releases/download/v1.57.0/redis_exporter-v1.57.0.linux-amd64.tar.gz

#2、解压redis_exporter
[root@prom-node03 ~]# tar xf redis_exporter-v1.57.0.linux-amd64.tar.gz -C /etc
[root@prom-node03 ~]# ln -s /etc/redis_exporter-v1.57.0.linux-amd64/ /etc/redis_exporter

#3、配置redis_exporter启动⽂件
[root@prom-node03 ~]# cat /usr/lib/systemd/system/redis_exporter.service
[Unit]
Description=redis_exporter
Documentation=https://prometheus.io/
After=network.target

[Service]
ExecStart=/etc/redis_exporter/redis_exporter \
  -redis.addr=&amp;quot;redis://localhost:6379&amp;quot;
  -redis.password=&amp;quot;&amp;quot;
  -web.listen-address=&amp;quot;:9121&amp;quot; \
  -web.telemetry-path=&amp;quot;/metrics&amp;quot; \
ExecReload=/bin/kill -HUP $MAINPID
TimeoutStopSec=20s
Restart=always

[Install]
WantedBy=multi-user.target

#4、启动redis_exporter
[root@prom-node03 ~]# systemctl daemon-reload
[root@prom-node03 ~]# systemctl start redis_exporter
[root@prom-node03 ~]# systemctl enable redis_exporter
[root@prom-node03 ~]# netstat -lntp|grep 9121
tcp6       0      0 :::9121                 :::*                    LISTEN      2600/redis_exporter 

#5、访问redis的metrics
[root@prom-node03 ~]# curl http://localhost:9121/metrics
# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0&amp;quot;&amp;#125; 4.7772e-05
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0.25&amp;quot;&amp;#125; 4.7772e-05
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0.5&amp;quot;&amp;#125; 9.3206e-05
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;0.75&amp;quot;&amp;#125; 9.3206e-05
go_gc_duration_seconds&amp;#123;quantile=&amp;quot;1&amp;quot;&amp;#125; 9.3206e-05
go_gc_duration_seconds_sum 0.000140978
go_gc_duration_seconds_count 2
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 8
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;73-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#73-配置prometheus&#34;&gt;#&lt;/a&gt; 7.3 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、修改Prometheus配置
[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

  - job_name: &amp;quot;mysqld_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: master
    - targets: [&amp;quot;prom-node04.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: slave

  - job_name: &amp;quot;redis_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9121&amp;quot;]

#2.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;74-redis告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#74-redis告警规则文件&#34;&gt;#&lt;/a&gt; 7.4 Redis 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、编写Redis告警规则⽂件
[root@prom-node01 ~]# cat /etc/prometheus/rules/redis_rules.yml
groups:
- name: redis告警规则
  rules:
  - alert: Redis实例宕机
    expr: sum(redis_up) by (instance, job) == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Redis实例宕机, &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; &amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 在过去1分钟内无法连接。&amp;quot;
          
  - alert: Redis实例重启
    expr: sum(redis_uptime_in_seconds) by (instance, job) &amp;lt; 60
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 重启&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 出现重启。当前运行时间:&amp;#123;&amp;#123; $value &amp;#125;&amp;#125; 秒。&amp;quot;
          
  - alert: Redis连接数过高
    expr: redis_connected_clients / redis_config_maxclients * 100 &amp;gt; 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 连接数超过80%&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 当前连接数占最大连接数的比率超过80%。当前比率: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: Redis连接被拒绝
    expr: increase(redis_rejected_connections_total[1h]) &amp;gt; 0
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 有连接被拒绝&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 在过去1小时内有连接被拒绝。当前被拒绝的连接数: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
          
  - alert: Redis内存使用率过高
    expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 &amp;gt; 80 
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 内存使用率超过80%&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 当前内存使用率超过配置的最大内存值的80%。当前内存使用率: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: Redis缓存命中率低
    expr: |
      irate(redis_keyspace_hits_total[5m]) /
      (irate(redis_keyspace_hits_total[5m]) + irate(redis_keyspace_misses_total[5m])) * 100 &amp;lt; 90
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 缓存命中率低于90%&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 最近5分钟内的缓存命中率低于90%。当前命中率: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: Redis即将过期的Key数量过多
    expr: |
      sum(redis_db_keys_expiring) by (instance, job, db) /
      sum(redis_db_keys) by (instance, job, db) * 100 &amp;gt; 50
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 中的数据库 &amp;#123;&amp;#123; $labels.db&amp;#125;&amp;#125; 有过多即将过期的Key&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 中的数据库 &amp;#123;&amp;#123; $labels.db &amp;#125;&amp;#125; 有超过50%的Key即将过期。当前比率: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: RedisRDB备份失败
    expr: redis_rdb_last_bgsave_status == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RDB备份失败&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 最近的RDB备份尝试失败。&amp;quot;
          
  - alert: RedisRDB备份时间过长
    expr: redis_rdb_last_bgsave_duration_sec &amp;gt; 3 and redis_rdb_last_bgsave_status == 1
    for: 1m
    labels:
       severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RDB备份成功但耗时超过3秒&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; RDB备份成功，但备份耗时超过了3秒。持续时间: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;秒。&amp;quot;
   
  - alert: RedisRDB备份过期
    expr: (time() - redis_rdb_last_save_timestamp_seconds) &amp;gt; 36000
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 超过10小时未进行RDB备份&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 已超过10小时没有生成新的RDB备份文件。&amp;quot;
          
  - alert: Redis命令拒绝率过高
    expr: |
      sum(irate(redis_commands_rejected_calls_total[5m])) by (instance, job) /
      sum(irate(redis_commands_total[5m])) by (instance, job) * 100 &amp;gt; 25
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 命令拒绝率超过25%&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的命令拒绝率超过了25%。当前拒绝率: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;%。&amp;quot;
          
  - alert: Redis命令平均响应时间过长
    expr: |
      sum(rate(redis_commands_duration_seconds_total[5m])) by (instance,job) /
      sum(rate(redis_commands_processed_total[5m])) by (instance, job) &amp;gt;0.250
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 命令平均响应时间超过250ms&amp;quot;
      description: &amp;quot;Redis实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的执⾏命令平均响应时间超过了250毫秒。当前平均响应时间: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;秒。&amp;quot;

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/redis_rules.yml 
Checking /etc/prometheus/rules/redis_rules.yml
  SUCCESS: 12 rules found

#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;八-prometheus监控docker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#八-prometheus监控docker&#34;&gt;#&lt;/a&gt; 八. Prometheus 监控 Docker&lt;/h4&gt;
&lt;h4 id=&#34;九-blackbox_exporter黑盒监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#九-blackbox_exporter黑盒监控&#34;&gt;#&lt;/a&gt; 九. Blackbox_exporter ⿊盒监控&lt;/h4&gt;
&lt;h5 id=&#34;91-安装blackbox_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#91-安装blackbox_exporter&#34;&gt;#&lt;/a&gt; 9.1 安装 Blackbox_exporter&lt;/h5&gt;
&lt;p&gt;1、访问 blackbox_exporter 的 github 地址， &lt;a href=&#34;https://github.com/prometheus/blackbox_exporter/releases&#34;&gt;https://github.com/prometheus/blackbox_exporter/releases&lt;/a&gt; ，下载 blackbox_exporter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1.下载blackbox_exporter
[root@prom-node04 ~]# wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz
#加速地址
[root@prom-node04 ~]# wget https://mirror.ghproxy.com/https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz

#2、解压blackbox_exporter
[root@prom-node04 ~]# tar xf blackbox_exporter-0.24.0.linux-amd64.tar.gz -C /etc
[root@prom-node04 ~]# ln -s /etc/blackbox_exporter-0.24.0.linux-amd64/ /etc/blackbox_exporter
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、编辑 /etc/blackbox_exporter/blackbox.yml 默认配置⽂件，可以⾃⾏定义对应的模块，blackbox_exporter/example.yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]# cat /etc/blackbox_exporter/blackbox.yml
modules:
  # http检查模块
  http_2xx:
    prober: http
    http:
      preferred_ip_protocol: &amp;quot;ip4&amp;quot;
      valid_http_versions: [ &amp;quot;HTTP/1.1&amp;quot;, &amp;quot;HTTP/2.0&amp;quot; ]
          
  # Http Post检查模块
  http_post_2xx:
    prober: http
    http:
      method: POST
      preferred_ip_protocol: &amp;quot;ip4&amp;quot;
      valid_http_versions: [ &amp;quot;HTTP/1.1&amp;quot;, &amp;quot;HTTP/2.0&amp;quot; ]
          
  # TCP检查模块
  tcp_connect:
    prober: tcp
    timeout: 5s
        
  # ICMP检查模块
  icmp:
    prober: icmp
    timeout: 5s
    icmp:
      preferred_ip_protocol: &amp;quot;ip4&amp;quot;
          
  # DNS检查模块
  dns_tcp: 
    prober: dns
    dns:
      transport_protocol: &amp;quot;tcp&amp;quot;
      preferred_ip_protocol: &amp;quot;ip4&amp;quot;
      query_name: &amp;quot;www.oldxu.net&amp;quot;
          
  # SSH检查模块
  ssh_banner:
    prober: tcp
    tcp:
      query_response:
      - expect: &amp;quot;^SSH-2.0-&amp;quot;
      - send: &amp;quot;SSH-2.0-blackbox-ssh-check&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3、配置 blackbox_exporter 启动⽂件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]# cat /usr/lib/systemd/system/blackbox_exporter.service
[Unit]
Description=blackbox_exporter
Documentation=https://prometheus.io/
After=network.target

[Service]
ExecStart=/etc/blackbox_exporter/blackbox_exporter \
  --config.file=/etc/blackbox_exporter/blackbox.yml \
  --web.listen-address=:9115
ExecReload=/bin/kill -HUP $MAINPID
TimeoutStopSec=20s
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4、启动 blackbox_exporter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]# systemctl daemon-reload
[root@prom-node04 ~]# systemctl start blackbox_exporter
[root@prom-node04 ~]# systemctl enable blackbox_exporter
[root@prom-node04 ~]# netstat -lntp|grep 9115
tcp6       0      0 :::9115                 :::*                    LISTEN      1879/blackbox_expor
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;5、访问 Blackbox_exporter&lt;/p&gt;
&lt;p&gt;1、访问 Blackbox_exporter，通过 &lt;a href=&#34;http://IP:9115&#34;&gt;http://IP:9115&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、使⽤ blackbox_exporter 监控站点，需要传递⽬标 target ，以及检测⽅法 module&lt;/p&gt;
&lt;p&gt;具体的 Url 地址： &lt;a href=&#34;http://local-blackbox.oldxu.net:9115/probe?target=https://www.xuliangwei.com&amp;amp;module=http_2xx&amp;amp;debug=true&#34;&gt;http://local-blackbox.oldxu.net:9115/probe?target=https://www.xuliangwei.com&amp;amp;module=http_2xx&amp;amp;debug=true&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、针对 blackbox_exporter 的探测过程进⾏解读&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Logs for the probe:
ts=2024-03-03T13:42:59.577027389Z caller=main.go:181 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Beginning probe&amp;quot; probe=http timeout_seconds=119.5
ts=2024-03-03T13:42:59.577520722Z caller=http.go:328 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Resolving target address&amp;quot; target=www.xuliangwei.com ip_protocol=ip4
ts=2024-03-03T13:42:59.842714479Z caller=http.go:328 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Resolved target address&amp;quot; target=www.xuliangwei.com ip=27.152.185.120
ts=2024-03-03T13:42:59.842996999Z caller=client.go:252 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Making HTTP request&amp;quot; url=https://27.152.185.120 host=www.xuliangwei.com
ts=2024-03-03T13:43:00.382291128Z caller=handler.go:120 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Received HTTP response&amp;quot; status_code=200
ts=2024-03-03T13:43:00.612921591Z caller=handler.go:120 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Response timings for roundtrip&amp;quot; roundtrip=0 start=2024-03-03T21:42:59.843230972+08:00 dnsDone=2024-03-03T21:42:59.843230972+08:00 connectDone=2024-03-03T21:42:59.861071294+08:00 gotConn=2024-03-03T21:42:59.966743791+08:00 responseStart=2024-03-03T21:43:00.382134238+08:00 tlsStart=2024-03-03T21:42:59.861142714+08:00 tlsDone=2024-03-03T21:42:59.966579816+08:00 end=2024-03-03T21:43:00.612905768+08:00
ts=2024-03-03T13:43:00.613022806Z caller=main.go:181 module=http_2xx target=https://www.xuliangwei.com level=info msg=&amp;quot;Probe succeeded&amp;quot; duration_seconds=1.035611838

# 1、开始探测（msg=&amp;quot;Beginning probe&amp;quot;） 使⽤的是 http_2xx 模块，超时设置为119.5秒。
# 2、解析⽬标地址（msg=&amp;quot;Resolving target address&amp;quot;） 正在尝试解析⽬标 www.xuliangwei.com 的IP地址，使⽤的是IPv4协议。
# 3、已解析⽬标地址（msg=&amp;quot;Resolved target address&amp;quot;） 成功解析为61.241.151.57。
# 4、发出 HTTP 请求（msg=&amp;quot;Making HTTP request&amp;quot;） 向 http://61.241.151.57 发出HTTP请求，请求中的 host 头设置为 www.xuliangwei.com。
# 5、收到 HTTP 响应（msg=&amp;quot;Received HTTP response&amp;quot;） 已收到状态码为200的HTTP响应，这意味着⽹⻚正常，服务器成功处理了请求。
# 6、响应时间（msg=&amp;quot;Response timings for roundtrip&amp;quot;） 提供了对于整个请求-响应周期中每个步骤的具体时间点，包括DNS解析完成、TLS握⼿开始和完成、连接建⽴、获得连接、响应开始等时间点。
# 7、探测成功（msg=&amp;quot;Probe succeeded&amp;quot;） 探测操作成功完成，总耗时为0.355298304秒。
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;92-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#92-配置prometheus&#34;&gt;#&lt;/a&gt; 9.2 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

  - job_name: &amp;quot;mysqld_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: master
    - targets: [&amp;quot;prom-node04.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: slave

  - job_name: &amp;quot;redis_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9121&amp;quot;]

  - job_name: &#39;blackbox_http&#39;
    metrics_path: /probe # metrics的path这次不是/metrics，⽽是/probe
    params: # 传递参数
      module: [http_2xx] # 调⽤哪个模块进⾏探测
    static_configs:
    - targets: [&amp;quot;https://www.xuliangwei.com&amp;quot;,&amp;quot;http://www.oldxu.net&amp;quot;,&amp;quot;https://www.baidu.com&amp;quot;,&amp;quot;http://httpbin.org/status/400&amp;quot;,&amp;quot;https://httpstat.us/500&amp;quot;,&amp;quot;https://httpstat.us/502&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115
      
# relabel_configs是标签重写的配置，这⾥进⾏了三次操作：
# 1、将⽬标地址（__address__）赋予给__param_target，这是Blackbox Exporter需要的⽬标target参数。
# 2、将__param_target的内容复制到instance标签，这样Prometheus UI中显示的instance实例名称会是⽬标站点地址，⽽不是Blackbox的地址。
# 3、最后，将实际发送探测请求的地址（__address__）设置为运⾏Blackbox Exporter的节点地址和端⼝（prom-node04.oldxu.net:9115），这样Prometheus就会向这个地址发送探测请求。
      
#.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload 
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;93-配置tcp-ssh-icmp监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#93-配置tcp-ssh-icmp监控&#34;&gt;#&lt;/a&gt; 9.3 配置 tcp、ssh、icmp 监控&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#1、修改Prometheus配置
[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

  - job_name: &amp;quot;mysqld_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: master
    - targets: [&amp;quot;prom-node04.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: slave

  - job_name: &amp;quot;redis_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9121&amp;quot;]

  - job_name: &#39;blackbox_http&#39;
    metrics_path: /probe # metrics的path这次不是/metrics，是/probe
    params: # 传递参数
      module: [http_2xx] # 调哪个模块进探测
    static_configs:
    - targets: [&amp;quot;https://www.xuliangwei.com&amp;quot;,&amp;quot;http://www.oldxu.net&amp;quot;,&amp;quot;https://www.baidu.com&amp;quot;,&amp;quot;http://httpbin.org/status/400&amp;quot;,&amp;quot;https://httpstat.us/500&amp;quot;,&amp;quot;https://httpstat.us/502&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_tcp&#39;
    metrics_path: /probe
    params:
      module: [tcp_connect] # 使tcp_connect模块
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:3306&amp;quot;,&amp;quot;prom-node03.oldxu.net:6379&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_icmp&#39;
    metrics_path: /probe
    params:
      module: [icmp] # 使icmp模块
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net&amp;quot;,&amp;quot;prom-node02.oldxu.net&amp;quot;,&amp;quot;prom-node03.oldxu.net&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_ssh&#39;
    metrics_path: /probe
    params:
      module: [ssh_banner] # 使⽤ssh_banner模块
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:22&amp;quot;,&amp;quot;prom-node02.oldxu.net:22&amp;quot;,&amp;quot;prom-node03.oldxu.net:22&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

#2.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload 
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;94-blackbox告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#94-blackbox告警规则文件&#34;&gt;#&lt;/a&gt; 9.4 Blackbox 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/rules/blackbox_rules.yml
groups:
- name: Blackbox告警规则文件
  rules:
  - alert: 探测失败
    expr: sum(probe_success == 0) by (instance, job)
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 探测失败&amp;quot;
      description: &amp;quot;探测目标 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 在 job &amp;#123;&amp;#123; $labels.job&amp;#125;&amp;#125; 中失败。&amp;quot;
          
  - alert: 站点整体平均请求时间过长
    expr: sum(avg_over_time(probe_http_duration_seconds[1m])) by (instance,job) &amp;gt; 3
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 请求时间过长&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 最近1分钟的平均请求时间超过3秒。当前平均请求时间：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;秒。&amp;quot;
          
  - alert: 重定向次数过多
    expr: probe_http_redirects &amp;gt; 5
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 重定向次数过多&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 在最近的探测中重定向次数超过5次。当前次数：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;次。&amp;quot;
          
  - alert: 站点阶段耗时过⻓
    expr: |
      (
        probe_http_duration_seconds&amp;#123;phase=&amp;quot;connect&amp;quot;&amp;#125; &amp;gt; 0.5 or
        probe_http_duration_seconds&amp;#123;phase=&amp;quot;processing&amp;quot;&amp;#125; &amp;gt; 0.5 or
        probe_http_duration_seconds&amp;#123;phase=&amp;quot;resolve&amp;quot;&amp;#125; &amp;gt; 0.5 or
        probe_http_duration_seconds&amp;#123;phase=&amp;quot;tls&amp;quot;&amp;#125; &amp;gt; 0.5 or
        probe_http_duration_seconds&amp;#123;phase=&amp;quot;transfer&amp;quot;&amp;#125; &amp;gt; 0.5
          )
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 阶段 &#39;&amp;#123;&amp;#123; $labels.phase &amp;#125;&amp;#125;&#39; 耗时过长&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 在阶段 &#39;&amp;#123;&amp;#123; $labels.phase&amp;#125;&amp;#125;&#39; 的耗时超过0.5秒。当前耗时：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;秒。&amp;quot;
          
  - alert: 站点响应状态码异常
    expr: probe_http_status_code &amp;lt;= 199 or probe_http_status_code &amp;gt;= 400
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 返回异常状态码&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 返回的状态码为 &amp;#123;&amp;#123; $value &amp;#125;&amp;#125;，表明请求可能存在问题。&amp;quot;
          
  - alert: 证书即将过期&amp;lt;30
    expr: (probe_ssl_earliest_cert_expiry - time()) /86400 &amp;lt; 30
    for: 24h
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的 SSL 证书即将过期&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的 SSL 证书将在 &amp;#123;&amp;#123; $value&amp;#125;&amp;#125; 天内过期。&amp;quot;
          
  - alert: 证书即将过期&amp;lt;7
    expr: (probe_ssl_earliest_cert_expiry - time()) /86400 &amp;lt; 7
    for: 24h
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的 SSL 证书即将过期&amp;quot;
      description: &amp;quot;实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 的 SSL 证书将在 &amp;#123;&amp;#123; $value&amp;#125;&amp;#125; 天内过期.&amp;quot;

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/blackbox_rules.yml 
Checking /etc/prometheus/rules/blackbox_rules.yml
  SUCCESS: 7 rules found
  
#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;十-domain_exporter域名监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十-domain_exporter域名监控&#34;&gt;#&lt;/a&gt; 十. domain_exporter 域名监控&lt;/h4&gt;
&lt;p&gt;domain_exporter 主要⽤来监控⽹站域名的过期时间。这对于企业和个⼈都是⽐较重要的，因为域名过期可能会导致⽹站⽆法访问，进⽽影响业务的正常运⾏。因此监控 “域名的过期时间” 就显得⽐较重要了。&lt;/p&gt;
&lt;h5 id=&#34;101-安装domain_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#101-安装domain_exporter&#34;&gt;#&lt;/a&gt; 10.1 安装 domain_exporter&lt;/h5&gt;
&lt;p&gt;1、访问 domain_exporter 的 github 地址， &lt;a href=&#34;https://github.com/caarlos0/domain_exporter/releases&#34;&gt;https://github.com/caarlos0/domain_exporter/releases&lt;/a&gt; ，下载 domain_exporter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1.下载domain_exporte
[root@prom-node04 ~]# wget https://github.com/caarlos0/domain_exporter/releases/download/v1.23.0/domain_exporter_1.23.0_linux_amd64.tar.gz
#2.加速地址
[root@prom-node04 ~]# wget https://mirror.ghproxy.com/https://github.com/caarlos0/domain_exporter/releases/download/v1.23.0/domain_exporter_1.23.0_linux_amd64.tar.gz

#3.解压domain_exporter
[root@prom-node04 ~]# mkdir /etc/domain_exporter_1.23.0
[root@prom-node04 ~]# tar xf domain_exporter_1.23.0_linux_amd64.tar.gz -C /etc/domain_exporter_1.23.0
[root@prom-node04 ~]# ln -s /etc/domain_exporter_1.23.0/ /etc/domain_exporter

#4.配置domain_exporter启动⽂件
[root@prom-node04 ~]# cat /usr/lib/systemd/system/domain_exporter.service
[Unit]
Description=domain_exporter
Documentation=https://prometheus.io/
After=network.target

[Service]
ExecStart=/etc/domain_exporter/domain_exporter --bind=&amp;quot;:9222&amp;quot;
ExecReload=/bin/kill -HUP $MAINPID
TimeoutStopSec=20s
Restart=always

[Install]
WantedBy=multi-user.target

#5.动domain_exporter
[root@prom-node04 ~]#  systemctl daemon-reload
[root@prom-node04 ~]# systemctl start domain_exporter.service
[root@prom-node04 ~]# systemctl enable domain_exporter.service
Created symlink from /etc/systemd/system/multi-user.target.wants/domain_exporter.service to /usr/lib/systemd/system/domain_exporter.service.
[root@prom-node04 ~]# netstat -lntp|grep 9222
tcp6       0      0 :::9222                 :::*                    LISTEN      1880/domain_exporte 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、通过 domain_exporter 获取域名过期时间，访问 URL &lt;a href=&#34;http://localhost:9222/probe?target=oldxu.net&#34;&gt;http://localhost:9222/probe?target=oldxu.net&lt;/a&gt; 来获取特定域名（如 &lt;a href=&#34;http://oldxu.net&#34;&gt;oldxu.net&lt;/a&gt;）的过期时间。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]#  curl http://localhost:9222/probe?target=hmallleasing.com
# HELP domain_expiry_days time in days until the domain expires
# TYPE domain_expiry_days gauge
domain_expiry_days&amp;#123;domain=&amp;quot;hmallleasing.com&amp;quot;&amp;#125; 741
# HELP domain_probe_duration_seconds returns how long the probe took to complete in seconds
# TYPE domain_probe_duration_seconds gauge
domain_probe_duration_seconds&amp;#123;domain=&amp;quot;hmallleasing.com&amp;quot;&amp;#125; 1.036303946
# HELP domain_probe_success whether the probe was successful or not
# TYPE domain_probe_success gauge
domain_probe_success&amp;#123;domain=&amp;quot;hmallleasing.com&amp;quot;&amp;#125; 1
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;102-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#102-配置prometheus&#34;&gt;#&lt;/a&gt; 10.2 配置 Prometheus&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

  - job_name: &amp;quot;mysqld_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: master
    - targets: [&amp;quot;prom-node04.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: slave

  - job_name: &amp;quot;redis_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9121&amp;quot;]

  - job_name: &#39;blackbox_http&#39;
    metrics_path: /probe # metrics的path这次不是/metrics，是/probe
    params: # 传递参数
      module: [http_2xx] # 调哪个模块进探测
    static_configs:
    - targets: [&amp;quot;https://www.xuliangwei.com&amp;quot;,&amp;quot;http://www.oldxu.net&amp;quot;,&amp;quot;https://www.baidu.com&amp;quot;,&amp;quot;http://httpbin.org/status/400&amp;quot;,&amp;quot;https://httpstat.us/500&amp;quot;,&amp;quot;https://httpstat.us/502&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_tcp&#39;
    metrics_path: /probe
    params:
      module: [tcp_connect] # 使tcp_connect模块
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:3306&amp;quot;,&amp;quot;prom-node03.oldxu.net:6379&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_icmp&#39;
    metrics_path: /probe
    params:
      module: [icmp] # 使icmp模块
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net&amp;quot;,&amp;quot;prom-node02.oldxu.net&amp;quot;,&amp;quot;prom-node03.oldxu.net&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_ssh&#39;
    metrics_path: /probe
    params:
      module: [ssh_banner] # 使⽤ssh_banner模块
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:22&amp;quot;,&amp;quot;prom-node02.oldxu.net:22&amp;quot;,&amp;quot;prom-node03.oldxu.net:22&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;domain_exporter&#39;
    metrics_path: /probe # metrics的path不是/metrics，⽽是/probe
    static_configs:
    - targets: [&amp;quot;nf-leasing.com&amp;quot;,&amp;quot;hmallleasing.com&amp;quot;,&amp;quot;jd.com&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9222

#.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload 
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;103-domain告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#103-domain告警规则文件&#34;&gt;#&lt;/a&gt; 10.3 domain 告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/rules/domain_rules.yml
groups:
- name: domain告警规则文件
  rules:
  - alert: 域名即将过期 &amp;lt;100
    expr: domain_expiry_days &amp;lt; 100
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;域名即将过期 (实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;)&amp;quot;
      description: &amp;quot;域名 &amp;#123;&amp;#123; $labels.domain &amp;#125;&amp;#125; 还有少于100天即将过期。当前剩余天数：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
          
  - alert: 域名即将过期&amp;lt;30
    expr: domain_expiry_days &amp;lt; 30
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;域名即将过期 (实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;)&amp;quot;
      description: &amp;quot;域名 &amp;#123;&amp;#123; $labels.domain &amp;#125;&amp;#125; 还有少于30天即将过期。当前剩余天数：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
 
  - alert: 域名检测失败
    expr: sum(domain_probe_success) by (domain, instance, job) == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;域名检测失败 (实例 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125;)&amp;quot;
      description: &amp;quot;域名 &amp;#123;&amp;#123; $labels.domain &amp;#125;&amp;#125; 在 &amp;#123;&amp;#123; $labels.instance &amp;#125;&amp;#125; 上的检测失败。当前值：&amp;#123;&amp;#123; $value &amp;#125;&amp;#125;。&amp;quot;
      
#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/domain_rules.yml 
Checking /etc/prometheus/rules/domain_rules.yml
  SUCCESS: 3 rules found
  
#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;十一-pushgateway推送网关服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十一-pushgateway推送网关服务&#34;&gt;#&lt;/a&gt; 十一. PushGateway 推送⽹关服务&lt;/h4&gt;
&lt;p&gt;Pushgateway 允许脚本通过 Push 的⽅式来推送指标数据，但它不会像 Prometheus 那样主动去抓取指标数据。&lt;/p&gt;
&lt;p&gt;Pushgateway 作为中间存储，仅负责接收数据，等待 Prometheus Server 进⾏数据抓取，它⾃身并不具备抓取功能。默认情况下，数据保存在内存中，但可以通过 --persistence.file 参数持久化数据⾄⽂件中，同时通过 --persistence.interval=5m 设置数据持久化间隔。&lt;/p&gt;
&lt;h5 id=&#34;111-安装pushgateway&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#111-安装pushgateway&#34;&gt;#&lt;/a&gt; 11.1 安装 pushGateway&lt;/h5&gt;
&lt;p&gt;1、访问 PushGateway 官⽹ &lt;a href=&#34;https://github.com/prometheus/pushgateway&#34;&gt;https://github.com/prometheus/pushgateway&lt;/a&gt; ，下载 PushGateway&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1.下载Pushgateway 
[root@prom-node04 ~]# wget https://github.com/prometheus/pushgateway/releases/download/v1.7.0/pushgateway-1.7.0.linux-amd64.tar.gz
# 加速地址
[root@prom-node04 ~]# wget https://mirror.ghproxy.com/https://github.com/prometheus/pushgateway/releases/download/v1.7.0/pushgateway-1.7.0.linux-amd64.tar.gz

#2.解压PushGateway
[root@prom-node04 ~]# tar xf pushgateway-1.7.0.linux-amd64.tar.gz -C /etc/
[root@prom-node04 ~]# ln -s /etc/pushgateway-1.7.0.linux-amd64/ /etc/pushgateway

#3.编写pushgateway启动⽂件
[root@prom-node04 ~]# cat /usr/lib/systemd/system/pushgateway.service 
[Unit]
Description=pushgateway
Documentation=https://prometheus.io/
After=network.target

[Service]
ExecStart=/etc/pushgateway/pushgateway \
 --web.listen-address=:9091 \
 --web.telemetry-path=/metrics \
 --web.enable-lifecycle
ExecReload=/bin/kill -HUP
TimeoutStopSec=20s
Restart=always

[Install]
WantedBy=multi-user.target

#4.启动PushGateway
[root@prom-node04 ~]# systemctl daemon-reload
[root@prom-node04 ~]# systemctl start pushgateway
[root@prom-node04 ~]# systemctl enable pushgateway
[root@prom-node04 ~]# netstat -lntp|grep 9091
tcp6       0      0 :::9091                 :::*                    LISTEN      2421/pushgateway   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、是⽤ Curl 给 pushgateway 推送⼀个 some_metric 的指标，值为 3.14&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]# echo &amp;quot;some_metric 3.14&amp;quot; | curl --data-binary @- http://localhost:9091/metrics/job/some_job
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3、访问 pushgateway 的 web ⻚⾯，通过 &lt;a href=&#34;http://IP:9091&#34;&gt;http://IP:9091&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240304220806380.png&#34; alt=&#34;image-20240304220806380&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;112-配置promethues&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#112-配置promethues&#34;&gt;#&lt;/a&gt; 11.2 配置 Promethues&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/prometheus.yml
# 全局段定义
global:
  scrape_interval: 15s # 设置 Prometheus 抓取指标数据的间隔，默认为15秒。

rule_files:
  - &amp;quot;/etc/prometheus/rules/*.yml&amp;quot; 

# 抓取指定的目标
scrape_configs:
  - job_name: &amp;quot;prometheus&amp;quot; # 定义一个抓取任务，名为 &#39;prometheus&#39;。
    metrics_path: &amp;quot;/metrics&amp;quot; # 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。
    static_configs: # 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。
    - targets: [&amp;quot;prom-node01.oldxu.net:9090&amp;quot;]

  - job_name: &amp;quot;grafana&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:3000&amp;quot;]

  - job_name: &amp;quot;node_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:9100&amp;quot;,&amp;quot;prom-node02.oldxu.net:9100&amp;quot;,&amp;quot;prom-node03.oldxu.net:9100&amp;quot;]

  - job_name: &amp;quot;weather_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7001&amp;quot;]

  - job_name: &amp;quot;webserver&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:7002&amp;quot;]

  - job_name: &amp;quot;rabbitmq&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node02.oldxu.net:15692&amp;quot;]

  - job_name: &amp;quot;nginx&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9113&amp;quot;]

  - job_name: &amp;quot;tomcat&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:8080&amp;quot;]

  - job_name: &amp;quot;jmx_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:12345&amp;quot;]

  - job_name: &amp;quot;mysqld_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: master
    - targets: [&amp;quot;prom-node04.oldxu.net:9104&amp;quot;]
      labels:
        service: database
        role: slave

  - job_name: &amp;quot;redis_exporter&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:9121&amp;quot;]

  - job_name: &#39;blackbox_http&#39;
    metrics_path: /probe # metrics的path这次不是/metrics，是/probe
    params: # 传递参数
      module: [http_2xx] # 调哪个模块进探测
    static_configs:
    - targets: [&amp;quot;https://www.xuliangwei.com&amp;quot;,&amp;quot;http://www.oldxu.net&amp;quot;,&amp;quot;https://www.baidu.com&amp;quot;,&amp;quot;http://httpbin.org/status/400&amp;quot;,&amp;quot;https://httpstat.us/500&amp;quot;,&amp;quot;https://httpstat.us/502&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_tcp&#39;
    metrics_path: /probe
    params:
      module: [tcp_connect] # 使tcp_connect模块
    static_configs:
    - targets: [&amp;quot;prom-node03.oldxu.net:3306&amp;quot;,&amp;quot;prom-node03.oldxu.net:6379&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_icmp&#39;
    metrics_path: /probe
    params:
      module: [icmp] # 使icmp模块
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net&amp;quot;,&amp;quot;prom-node02.oldxu.net&amp;quot;,&amp;quot;prom-node03.oldxu.net&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;blackbox_ssh&#39;
    metrics_path: /probe
    params:
      module: [ssh_banner] # 使⽤ssh_banner模块
    static_configs:
    - targets: [&amp;quot;prom-node01.oldxu.net:22&amp;quot;,&amp;quot;prom-node02.oldxu.net:22&amp;quot;,&amp;quot;prom-node03.oldxu.net:22&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9115

  - job_name: &#39;domain_exporter&#39;
    metrics_path: /probe # metrics的path不是/metrics，⽽是/probe
    static_configs:
    - targets: [&amp;quot;nf-leasing.com&amp;quot;,&amp;quot;hmallleasing.com&amp;quot;,&amp;quot;jd.com&amp;quot;]
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: prom-node04.oldxu.net:9222

  - job_name: &amp;quot;pushgateway&amp;quot;
    metrics_path: &amp;quot;/metrics&amp;quot;
    static_configs:
    - targets: [&amp;quot;prom-node04.oldxu.net:9091&amp;quot;]

#.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;113-编写脚本并推送指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#113-编写脚本并推送指标&#34;&gt;#&lt;/a&gt; 11.3 编写脚本并推送指标&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]# cat pushgateway_backup.sh
#!/bin/bash
[[ $# -ne 1 ]] &amp;amp;&amp;amp; echo &amp;quot;给定一个备份的应用名称&amp;quot; &amp;amp;&amp;amp; exit

# PushGateway地址
PUSH_ADDR=&amp;quot;prom-node04.oldxu.net&amp;quot;

# 应用名称
APP_NAME=&amp;quot;$1&amp;quot;

# 备份脚本示例
START_TIME=$(date +%s)

# 模拟备份任务，随机睡眠时间1-10秒
SLEEP_TIME=$((1 + RANDOM % 10))
sleep $SLEEP_TIME

# 随机决定备份操作是否成功
if [ $((RANDOM % 10)) -lt 5 ]; then
    STATUS=1 # 成功
else
    STATUS=0 # 失败
fi

END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

# 推送指标⾄ PushGateway
cat &amp;lt;&amp;lt;EOF | curl --data-binary @- http://$PUSH_ADDR:9091/metrics/job/backup/instance/$APP_NAME
# HELP backup_duration_seconds The duration of the last backup in seconds.
# TYPE backup_duration_seconds gauge
backup_duration_seconds&amp;#123;application=&amp;quot;$APP_NAME&amp;quot;&amp;#125; $DURATION
# HELP backup_success Last backup was success(1) or ERROR(0).
# TYPE backup_success gauge
backup_success&amp;#123;application=&amp;quot;$APP_NAME&amp;quot;&amp;#125; $STATUS
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1、执⾏脚本，需要传递⼀个应⽤的名称&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node04 ~]# sh pushgateway_backup.sh shop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、在 Prometheus UI 中检查 backup_duration_seconds 和 backup_success 指标&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240304221939121.png&#34; alt=&#34;image-20240304221939121&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;114-配置告警规则文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#114-配置告警规则文件&#34;&gt;#&lt;/a&gt; 11.4 配置告警规则⽂件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;[root@prom-node01 ~]# cat /etc/prometheus/rules/backup_rules.yml
groups:
- name: backup_alerts
  rules:
  # 警告：在备份成功情况在，如果备份任务耗时超过了9秒则触发告警
  - alert: 备份告警超时
    expr: backup_duration_seconds &amp;gt; 6 and backup_success == 1
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: &amp;quot;备份任务耗时过长&amp;quot;
      description: &amp;quot;&amp;#123;&amp;#123; $labels.exported_instance &amp;#125;&amp;#125; 应⽤备份任务成功完成，但耗时超过了6秒。实际耗时: &amp;#123;&amp;#123; $value &amp;#125;&amp;#125; 秒。&amp;quot;
 
  # 严重警告：备份任务失败，并且不考虑耗时
  - alert: 备份任务失败
    expr: backup_success == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: &amp;quot;备份失败&amp;quot;
      description: &amp;quot;&amp;#123;&amp;#123; $labels.exported_job &amp;#125;&amp;#125; 任务中 &amp;#123;&amp;#123; $labels.exported_instance &amp;#125;&amp;#125; 应用备份失败。&amp;quot;

#2.检查告警规则语法
[root@prom-node01 ~]# /etc/prometheus/promtool check rules /etc/prometheus/rules/backup_rules.yml 
Checking /etc/prometheus/rules/backup_rules.yml
  SUCCESS: 2 rules found
  
#3.重载Prometheus
[root@prom-node01 ~]# curl -v -X POST http://localhost:9090/-/reload
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Prometheus" />
        <updated>2025-06-28T14:17:01.000Z</updated>
    </entry>
    <entry>
        <id>http://ixuyong.cn/posts/3386060324.html</id>
        <title>PromQL快速入门（二）</title>
        <link rel="alternate" href="http://ixuyong.cn/posts/3386060324.html"/>
        <content type="html">&lt;h3 id=&#34;promql快速入门二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#promql快速入门二&#34;&gt;#&lt;/a&gt; PromQL 快速入门（二）&lt;/h3&gt;
&lt;h4 id=&#34;一-promql基础概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-promql基础概念&#34;&gt;#&lt;/a&gt; 一. PromQL 基础概念&lt;/h4&gt;
&lt;h5 id=&#34;11-什么是promeql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-什么是promeql&#34;&gt;#&lt;/a&gt; 1.1 什么是 PromeQL&lt;/h5&gt;
&lt;p&gt;Prometheus 内置了⼀种强⼤的查询语⾔：PromQL，即 PrometheusQuery Language。PromQL 允许⽤户实时查询监控数据，并对这些数据执⾏复杂的聚合和计算操作。&lt;/p&gt;
&lt;p&gt;在 PromQL 中，查询的结果被称为 “向量（vector）”，分为两种类型：&lt;/p&gt;
&lt;p&gt;1、即时向量（Instant vector）：即时向量查询返回的是⼀组时间序列数据，但每个时间序列中只包含单个的最新数据点。例如：查询当前时刻服务器 1 分钟的负载，所得到的结果就是⼀个即时向量。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/M18NeIk.jpeg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、范围向量（Range vector）：范围向量查询的结果包含了⼀个时间范围内的所有数据点。例如：查询过去 1 分钟内服务器负载的变化情况，返回的数据集就是⼀个范围向量。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/VlsLPMD.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 PromQL 中，除了有向量类型的数据，还有其他的数据类型，具体有：&lt;/p&gt;
&lt;p&gt;标量（Scalar）：标量仅代表⼀个单⼀的浮点数值。可以将向量的某⼀个值通过 scalar () 函数转为标量，然后进⾏数值运算，但使⽤较少。&lt;/p&gt;
&lt;p&gt;字符串（String）：在 PromQL 查询结果中，每个时间序列都伴随着⼀组标签，这些标签和标签值，就是使⽤字符串类型来定义。这些标签为时间序列提供了元数据信息，例如 {job=&amp;quot;nginx&amp;quot;,instance=&amp;quot;&lt;a href=&#34;http://prom-node01.oldxu.net&#34;&gt;prom-node01.oldxu.net&lt;/a&gt;&amp;quot;, method=&amp;quot;get&amp;quot;, url=&amp;quot;/api&amp;quot;} ，通过标签能很好的对数据进⾏分类和识别。&lt;/p&gt;
&lt;h5 id=&#34;12-promql应用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-promql应用场景&#34;&gt;#&lt;/a&gt; 1.2 PromQL 应⽤场景&lt;/h5&gt;
&lt;p&gt;Prometheus 的核⼼就是 PromQL，PromQL 在⽇常的数据可视化，查询、定义告警规则都会是⽤到，因此掌握 PromQL 基本上就掌握了 Prometheus；&lt;/p&gt;
&lt;p&gt;1、临时查询：使⽤ PromQL，你可以实时地查询监控数据，这对于调试和诊断问题⾮常有帮助。通常，我们通过 Prometheus ⾃带的表达式浏览器来执⾏这些查询。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/AJVZFdO.jpeg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、数据可视化，PromQL 可以帮助我们创建数据的可视化展示，这些可视化通常是通过集成⼯具如 Grafana 来实现的，可以将我们 PromQL 查询的结果展示得更直观。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/oqN9oVU.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、监控告警：Prometheus 可以直接使⽤ PromQL 对指标的查询结果来设置告警。⼀旦查询结果满⾜指定的条件，就会触发告警，⼀个完整的报警规则如下所示：&lt;/p&gt;
&lt;p&gt;⼀个告警规则包括了告警的名称、条件、持续时间等信息。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;groups:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;- name: 告警组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  rules:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - alert: 节点宕机   &lt;span class=&#34;token comment&#34;&gt;# 告警名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    expr: up &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 告警条件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    for: 1m         &lt;span class=&#34;token comment&#34;&gt;# 持续时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    labels:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      severity: critical&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    annotations: &lt;span class=&#34;token comment&#34;&gt;# 定义邮件中收到的告警详细内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      summary: &lt;span class=&#34;token string&#34;&gt;&#34;节点宕机警告 - 实例：&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      description: &lt;span class=&#34;token string&#34;&gt;&#34;作业  的节点⽆法访问，已经持续超过1分钟。&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;二-promql基础使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-promql基础使用&#34;&gt;#&lt;/a&gt; 二. PromQL 基础使⽤&lt;/h4&gt;
&lt;h5 id=&#34;21-指标查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-指标查询&#34;&gt;#&lt;/a&gt; 2.1 指标查询&lt;/h5&gt;
&lt;p&gt;1、查询指标的最直接⽅式是输⼊ “指标的名称”。⽐如，你想知道系统的⼀分钟负载（node_load1）情况：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询结果（结果展示了所有被监控节点的⼀分钟负载。）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.13&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、但是，在实际监控时，我们通常只需要关注 “特定节点” 的指标数据。例如，如果我只想查看 &lt;a href=&#34;http://prom-node01.oldxu.net&#34;&gt;prom-node01.oldxu.net&lt;/a&gt; 这个节点的⼀分钟负载情况，那么就可需要是⽤ “标签匹配器” 来筛选出所需的指标。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询结果（由于指定了过滤条件，因此只会展示 node01 节点的 1 分钟负载）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.35&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、因此，标签匹配器就是通过标签和标签值，来筛选出我们所需要的指标数据。使⽤标签匹配器时，可以按照以下语法构造查询表达式：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;metric_name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;label_name&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;label_value&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;, &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;label_name&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;regex&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;, &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;其中各个部分的含义如下：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# = 表示⼀个标签必须严格等于⼀个给定的值。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# != 表示排除等于特定值的标签。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# =~ 表示标签的值必须匹配⼀个正则表达式。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# !~ 表示标签的值不应匹配⼀个正则表达式。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 1：查询所有实例，CPU 的第 0 个核⼼，中的 user ⽤户空间所占⽤ CPU 的时间，指标名称：node_cpu_seconds_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;,mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 2：查询所有实例，eth0 ⽹卡发送总⼤⼩，指标名称：node_network_transmit_bytes_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_network_transmit_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 转为 GB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_network_transmit_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; / &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 3：查询所有实例的⽹卡接收字节数，排除 lo 接⼝，指标名称：node_network_receive_bytes_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lo&#34;&lt;/span&gt;,device&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;docker0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;~&lt;span class=&#34;token string&#34;&gt;&#34;lo|docker0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 转为 GB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lo&#34;&lt;/span&gt;,device&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;docker0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; /1024 /102&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 4：查询：挂载点以 /run 开头的⽂件系统可⽤字节数，指标名称 node_filesystem_avail_bytes&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_filesystem_avail_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;^/run.*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 字节转 MB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_filesystem_avail_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;^/run.*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; /1024/1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 5：块设备名字不包含 vda 和 sr0 的读字节数，指标名称 node_disk_read_bytes_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_disk_read_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;~&lt;span class=&#34;token string&#34;&gt;&#34;.*sr0.*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;22-时间范围查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-时间范围查询&#34;&gt;#&lt;/a&gt; 2.2 时间范围查询&lt;/h5&gt;
&lt;p&gt;在 Prometheus 中，范围向量选择器使我们能够提取时间序列中⼀段时间范围内的数据点。要定义⼀个范围向量选择器，你只需要在指标名称后⾯加上⽅括号 []，并在其中指定⼀个时间⻓度。时间⻓度有：s 秒，m 分钟，h ⼩时，d 天，w 周，y 年。使⽤范围向量选择器，你可以灵活查询从最近⼏分钟到⼏年的数据，便于分析和监控指标随时间的变化。&lt;/p&gt;
&lt;p&gt;1、例如，我们想查询 prom-node01.oldxu.net 这个实例，在过去 2 分钟，负载所有数据点。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;2m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165619.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165634.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165649.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165664.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165679.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165694.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165709.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; @1751165724.66&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、在 Prometheus 中，通常使⽤相对时间（如过去⼏分钟、⼩时或天）来查询数据。但是，如果你需要查询⼀个绝对时间点的数据，您可以直接使⽤ UNIX 时间戳来指定查询的具体时间。（在 Prometheus 中通常是以毫秒为单位的）&lt;/p&gt;
&lt;p&gt;例如，查询 2025 年 6 ⽉ 29 ⽇上午 10:58:10 的 &lt;a href=&#34;http://prom-node01.oldxu.net&#34;&gt;prom-node01.oldxu.net&lt;/a&gt; 实例的负载状态。需要先将时间转为 UNIX 时间戳，然后执⾏如下查询语句。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#指定时间查询表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; @ &lt;span class=&#34;token number&#34;&gt;1751165890&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0.27&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;23-时间偏移查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-时间偏移查询&#34;&gt;#&lt;/a&gt; 2.3 时间偏移查询&lt;/h5&gt;
&lt;p&gt;除了能够查询过去⼏分钟或⼏⼩时的数据，以及查询指定时间点的数据，同时 Prometheus 也允许您通过 offset 修饰符来指定查询从当前时间往回推某个具体的时间段。这种⽅式常⽤于⽐较，例如：今天 QPS 是 10000，昨天这个时间是 5000，我们就可以计算它们的增⻓率之类的。&lt;/p&gt;
&lt;p&gt;1、如果您想要查看昨天整天的数据，可以使⽤以下查询表达式：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 假设是⽤如下表达式查询的结果是 2023-12-26 17:20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 那么如下表达式查询的数据将返回：(2023-12-24 17:20 - 2023-12-25 17:20)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1d&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; offset 1d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、如果想要查看⼀周前的 “时间范围内” 的数据，可以使⽤如下查询：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;5m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; offset 1w&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个查询会返回当前时间往回推⼀周，并从那个时间点开始，持续 5 分钟的数据范围内的 node_load1 指标。例如，如果现在是 12 ⽉ 26 ⽇星期⼀下午 17:30，那么该查询将返回 12 ⽉ 19 ⽇星期⼀下午 17:25 到 17:30 这 5 分钟范围内的所有数据点。&lt;/p&gt;
&lt;p&gt;3、对⽐分析实战：对⽐ “当前时间点接收的⽹络流量” 与 “1 ⼩时前的流量” 进⾏⽐对分析，以判断流量是增⻓还是减少。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算同环⽐的增⻓率或减少率的公式：同环⽐率 =(当前流量−过去 1 ⼩时的流量) / 过去 1 ⼩时的流量 ×100&lt;/li&gt;
&lt;li&gt;例如，如果当前总接收流量是 6000MB，⽽ 1 ⼩时前接收的总流量是 5000MB，&lt;/li&gt;
&lt;li&gt;那么计算公式为： （6000 - 5000） / 5000 * 100 = 20% （意味着相⽐ 1 ⼩时前，当前流量增⻓了 20%）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; - node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; offset 1h&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; offset 1h * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-87.68874820331817&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 负增⻓ 80%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4231.893284128109&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 增⻓ 4231%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24.658781604740295&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 增⻓ 24%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;三-promql常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-promql常用函数&#34;&gt;#&lt;/a&gt; 三. PromQL 常⽤函数&lt;/h4&gt;
&lt;h5 id=&#34;31-count类型常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-count类型常用函数&#34;&gt;#&lt;/a&gt; 3.1 Count 类型常⽤函数&lt;/h5&gt;
&lt;p&gt;前⾯我们讲过，Counter 类型的监控指标只增不减，因此其样本值应该是不断增⼤的。因此单纯的 Counter 总数并没有直接作⽤，⽽是需要借助于 rate、irate、increase 和等函数来计算样本数据的变化状况（增⻓率）；&lt;/p&gt;
&lt;p&gt;1、rate ⽤于计算平均增⻓速率：计算公式：通过指定时间范围内的样本，使⽤最后⼀个样本的值减去第⼀个样本的值，⽽后除以这两个样本之间的间隔时⻓。&lt;/p&gt;
&lt;p&gt;例如： rate (nginx_http_requests_total [1m]) ，表示要获取 1 分钟内，该指标上的 http 总请求数的平均增⻓速率；&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/luPGWpV.jpeg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、irate ⽤于计算瞬时的增⻓速率（灵敏度较⾼）：计算公式：通过指定时间范围内的样本最后⼀个样本的值减去前⼀个样本的值，⽽后除以这两个样本之间的间隔时⻓。&lt;/p&gt;
&lt;p&gt;例如： irate (nginx_http_requests_total [1m]) ，表示要获取 1 分钟内，该指标上的 http 总请求数的瞬时增⻓速率；&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/yCfZc4S.jpeg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、increase ⽤于计算指定时间范围内样本值的增加量：计算公式：通过指定时间范围内的样本最后⼀个样本的值减去第⼀个样本的值。注意：increase 可能会引⽤时间范围边界之前的样本值，以便于计算能覆盖到指定的整个时间范围。&lt;/p&gt;
&lt;p&gt;例如： increase (nginx_http_requests_total [1m]) ，表示要获取 1 分钟内，http 请求的增量；&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/lwmN3vP.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;32-gauge类型常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-gauge类型常用函数&#34;&gt;#&lt;/a&gt; 3.2 Gauge 类型常⽤函数&lt;/h5&gt;
&lt;p&gt;Gauge 类型的指标，存储的值是随着时间会变发⽣变化的，它常⽤求和、取平均值、最⼩值、最⼤值等；也会结合 PromQL 的 predict_linear 和 delta 函数使⽤；&lt;/p&gt;
&lt;p&gt;1、predict_linear (v range-vector, t, scalar)：预测时间序列 v 在 t 秒后的值，它通过线性回归的⽅式来预测样本数据的变化趋势；&lt;/p&gt;
&lt;p&gt;例如： predict_linear (node_filesystem_avail_bytes [4h], 60*60*24*30) ，使⽤过去 4 ⼩时的数据来预测接下来 30 天（60*60*24*30）&lt;/p&gt;
&lt;p&gt;的磁盘空间趋势。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;predict_linear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_filesystem_avail_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;4h&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;*60*24*30&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /1024 /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、delta (v range-vector)：计算范围向量中每个时间序列上的第⼀个样本值与最后⼀个样本值之差；其计算结果与 increase 函数相同；但 delta 更适⽤于没有重置的场景，或者⽤来监控那些可能上升或下降的指标，例如温度、磁盘空间等。&lt;/p&gt;
&lt;p&gt;例如： delta (cpu_temp_celsius {host=&amp;quot;&lt;a href=&#34;http://prom01.oldxu.net&#34;&gt;prom01.oldxu.net&lt;/a&gt;&amp;quot;}[2h]) ，返回该服务器上的 CPU 温度与 2 ⼩时之前的差异；&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;delta&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cpu_temp_celsius&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;host&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom01.oldxu.net&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;2h&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;例如： delta (node_filesystem_avail_bytes [10m]) /1024 /1024 ，返回服务器上磁盘可⽤空间与 10 分钟之前的差异；&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;delta&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_filesystem_avail_bytes&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;10m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#创建大文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# dd if=/dev/zero of=/bigdata count=1 bs=200M&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、changes () ：计算监控时间范围内某个时间序列的数据变化的次数。它只关⼼变化的次数，⽽不关⼼具体变化的值是什么。&lt;/p&gt;
&lt;p&gt;例如： changes (nginx_up [10m]) 监控 Nginx 服务在给定时间内变化的次数，如果停⽌了变化次数 + 1，启动了变化次数 + 1。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;changes&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;up&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;10m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#模式测试&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node02 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl stop node_exporter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node02 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl start node_exporter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:3000&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;grafana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;         &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prometheus&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;四-promql二元运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-promql二元运算符&#34;&gt;#&lt;/a&gt; 四. PromQL ⼆元运算符&lt;/h4&gt;
&lt;p&gt;PromQL 提供了⼀系列⼆元运算符，包括算术运算 (+ - * /)、⽐较运算 ( == &amp;lt;= &amp;gt;=)、以及集合运算 ( and or unless)。在 PromQL 中，⽤户可以执⾏以下类型的运算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1、标量与标量之间的运算&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2、即时向量与标量之间的运算&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3、两个即时向量之间的运算。（当涉及到两个即时向量的运算时标签必须一致，PromQL 遵循向量匹配机制（Vector Matching），定义其运算逻辑）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;41-算术运算符介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-算术运算符介绍&#34;&gt;#&lt;/a&gt; 4.1 算术运算符介绍&lt;/h5&gt;
&lt;p&gt;在 PromQL 中算术运算符，是⽤来对指标数据执⾏基本的数学运算。⽀持的运算符有：+（加）、-（减）、*（乘）、/（除）、%（取模）和 ^（幂运算）&lt;/p&gt;
&lt;p&gt;1、标量与标量之间进⾏数学运算，其最终得到的也是标量（使⽤较少）&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 标量与标量算数运算表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; + &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;scalar &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、即时向量与标量进⾏运算，例如将 node_memory_MemTotal_bytes （节点内存总⼤⼩）的默认 bytes 单位转为 MB&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 即时向量与标量算数运算表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_memory_MemTotal_bytes / &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1970.05859375&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1970.05859375&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1970.05859375&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、即时向量与即时向量进⾏运算，它们需要遵循向量的匹配逻辑，也就是向量与向量的标签必须完全匹配⼀致才可以进⾏运算，如果它们的标签不⼀致，则不会执⾏这个运算。例如：我们想计算内存的可⽤百分⽐，计算公式为 “（内存可⽤空间 / 内存总空间 * 100）= 内存可⽤百分⽐” 这两个向量的标签是完全⼀致的，因此可以直接进⾏运算，否则⽆法正常进⾏运算，除⾮进⾏向量匹配特殊的处理。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 即时向量与即时向量算数运算表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;52.0608325815&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;18234&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 可⽤内存还有 52%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70.7339367682&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1954&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 可⽤内存还有 70%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;41.0098446469&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1128&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 可⽤内存还有 41%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;42-算术运算符实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-算术运算符实践&#34;&gt;#&lt;/a&gt; 4.2 算术运算符实践&lt;/h5&gt;
&lt;p&gt;实例 1：计算所有实例节点的 eth0 ⽹卡，接收的总流量和发送的总流量之和（以 GB 显示）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node_network_receive_bytes_total ：节点⽹络接收的总⼤⼩（以字节为单位）&lt;/li&gt;
&lt;li&gt;node_network_transmit_bytes_total ：节点⽹络发送的总⼤⼩（以字节为单位）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式（ 计算公式：(eth0 接收的总流量 + eth0 发送的总流量) /1024 / 1024 /1024 ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; + node_network_transmit_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /1024 /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;65.10437232814729&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 65GB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19.22064190544188&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;35.516745982691646&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 2：计算所有实例节点的 / 分区 已经使⽤了，多少空间（以 GB 显示）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node_filesystem_size_bytes ：⽂件系统总⼤⼩（以字节为单位）&lt;/li&gt;
&lt;li&gt;node_filesystem_avail_bytes ：⽂件系统可⽤空间（以字节为单位）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式（ 计算公式：(总空间 - 剩余空间) /1024 / 1024 /1024 ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_filesystem_size_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; - node_filesystem_avail_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /1024 /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7.806545257568359&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 已使⽤ 7.8G&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3.9103240966796875&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 已使⽤ 3.9G&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5.496803283691406&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 已使⽤ 5.4G&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 3：计算所有实例节点的 / 分区 &amp;quot;已⽤空间百分⽐&amp;quot;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式（ 计算公式：(总空间 - 可⽤的空间) / 总空间 * 100 ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_filesystem_size_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; - node_filesystem_avail_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / node_filesystem_size_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mountpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3.965885742336228&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 已⽤空间占⽐百分之 3.96G&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.9864746546908878&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 已⽤空间占⽐百分之 1.98G&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.792465443218097&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 已⽤空间占⽐百分之 2.79G&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 4：计算所有节点内存的 “已⽤百分⽐”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node_memory_MemTotal_bytes ：总内存⼤⼩（单位字节）&lt;/li&gt;
&lt;li&gt;node_memory_MemAvailable_bytes ：内存可⽤⼤⼩（单位字节）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式（ 计算公式：(总内存 - 可⽤内存) / 总内存 * 100 ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / node_memory_MemTotal_bytes * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;48.12356865972023&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 已⽤ 48% 内存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;29.767713920310907&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 已⽤ 29% 内存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;58.8624624505537&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 已⽤ 58% 内存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;43-比较运算符介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-比较运算符介绍&#34;&gt;#&lt;/a&gt; 4.3 ⽐较运算符介绍&lt;/h5&gt;
&lt;p&gt;在 PromQL 中⽐较运算符，是⽤来对指标的数据进⾏条件判断，⼀般在告警规则中定义何时应该触发告警。PromQL ⽀持的⽐较运算符有如下⼏个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;== ：等于，当两边的数值相等时为真。&lt;/li&gt;
&lt;li&gt;!= ：不等于，当两边的数值不相等时为真。&lt;/li&gt;
&lt;li&gt;&amp;gt; ：⼤于，当左边的数值⼤于右边时为真。&lt;/li&gt;
&lt;li&gt;&amp;lt; ：⼩于，当左边的数值⼩于右边时为真。&lt;/li&gt;
&lt;li&gt;&amp;gt;= ：⼤于等于，当左边的数值⼤于或等于右边时为真。&lt;/li&gt;
&lt;li&gt;&amp;lt;= ：⼩于等于，当左边的数值⼩于或等于右边时为真。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;在 PromQL 中，使⽤⽐较运算符时，默认情况下，如果⽐较结果为假（即条件不满⾜），则相关的时间序列不会出现在结果中。但是，如果在测试时，想要明确地看到哪些时间序列满⾜条件（为真）和哪些不满⾜（为假），可以使⽤ bool 修饰符，这个修饰符会将所有的时间序列都显示在结果中，满⾜条件的序列会有⼀个值为 1（true），不满⾜的序列会有⼀个值为 0（false）。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1、标量与标量之间进⾏⽐较运算&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 标量与标量⽐较表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; bool &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;scalar &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 说明条件成⽴&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、即时向量与标量进⾏⽐较运算，例如判断服务器 1 分钟的负载，是否有⼤于 0 以上的节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 即时向量与标量进⾏⽐较表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1 &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.01&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.01&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、即时向量与即时向量进⾏⽐较运算，它们需要遵循向量的匹配逻辑，也就是向量与向量的标签必须完全匹配⼀致才可以进⾏运算，如果它们的标签不⼀致，则不会执⾏这个运算。例如：我们可以⽐较 “可⽤内存” 是否⼤于 “空闲内存”，如果满⾜该条件，那么会显示左侧的指标名称和指标当前的值。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 即时向量与即时向量⽐较表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_memory_MemAvailable_bytes &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; node_memory_MemFree_bytes&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_memory_MemAvailable_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1092820992&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_memory_MemAvailable_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1456451584&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_memory_MemAvailable_bytes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;867491840&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;44-比较运算符实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#44-比较运算符实践&#34;&gt;#&lt;/a&gt; 4.4 ⽐较运算符实践&lt;/h5&gt;
&lt;p&gt;实例 1：查询 node_exporter 这个 job 中，⽬前不存活实例有哪些（1 为存活、0 为不存活）。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;up&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;up&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 0 表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;示该节点⽬前不存活&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 2：查询所有实例 “已使⽤内存” 超过 30%&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式：（计算公式：（总内存 - 可⽤内存）/ 总内存 * 100 ⼤于 30 ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / node_memory_MemTotal_bytes * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;48.04405801699267&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 该节点已使⽤内存达到 48%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;58.090753170015965&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 该节点已使⽤内存达到 58%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 3：查询所有的实例 “磁盘可⽤空间” 不⾜ 30% 的实例&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式：（计算公式：（可⽤空间 / 总磁盘空间） * 100 ⼩于 30 ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_filesystem_avail_bytes / node_filesystem_size_bytes * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/dev/mapper/rl-root&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;fstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xfs&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;26.02939746145283&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 剩余空间仅剩 26%，意味着磁盘空间快⽤完了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 4：查询所有实例中 eth0 设备的⽹络带宽，每秒发送速率超过 200Mb/s 兆 的实例&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1、在两个测试的节点上安装：yum install iperf -y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2、服务端运⾏并指定端⼝：iperf -s -p 9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3、客户端模拟带宽发送命令，-b 指定发送⼤⼩，-t 指定发送持续时⻓：iperf -c &amp;lt;ip&gt; -p 9999 -b 300M -t 60&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式（计算公式：rate (总的传输 [1m]) * 8 /1024/1024) &gt; 200） ⽹络速度或带宽通常以位每秒（如 Mbps, Gbps）为单位。因此需要将字节乘以 8，能够将字节转换为位，这样可以更准确地描述传输速率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_network_transmit_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; /1024 /1024 &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;eth0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;286.0319371541341&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 该节点每秒达到了 286Mb/s 的带宽（如果不乘以 8 则单位是 MB/s）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 5：查询所有 https 的域名，检查域名证书的过期时间，将还剩不到 90 天的域名列出来（需要借助后⾯的 blackbox ⿊盒监控，才能获取到对应的指标）&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式，计算公式（ (过期时间 - 当前时间) / 天 (24*60*60) ）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;probe_ssl_earliest_cert_expiry - time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / &lt;span class=&#34;token number&#34;&gt;86400&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;90&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://hmallleasing.com&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;43.74673421296256&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;# 还剩 43 天过期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://ixuyong.cn&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;87.74673421296256&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;# 还剩 87 天过期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;45-集合运算符介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#45-集合运算符介绍&#34;&gt;#&lt;/a&gt; 4.5 集合运算符介绍&lt;/h5&gt;
&lt;p&gt;在 Prometheus 的查询语⾔中，集合运算符主要⽤到的运算符包括 and（并且）、or（或者）和 unless（排除）&lt;/p&gt;
&lt;p&gt;例如：我们有两个关键指标：backup_duration_seconds ⽤于记录每次备份操作的持续时间，⽽ backup_success 则指示备份操作是否成功（1 表示成功，0 表示失败）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景 1：备份成功但时间超过 9s&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当备份操作成功完成（backup_success == 1），并且执⾏时间超过 9 秒（backup_duration_seconds &amp;gt; 9）时，我们需要发出告警通知 “备份成功但备份时间过⻓”。这就需要使⽤ and 运算符来确保只有当这两个条件都满⾜时，才触发告警。对应的表达式为：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;backup_duration_seconds &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; and backup_success &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;场景 2：备份失败或时间超过 9s&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果备份时⻓超过了 9 秒（backup_duration_seconds &amp;gt; 9），或者备份操作失败（backup_success == 0），则同样需要发出告警通知 “备份失败或时间过⻓”。在这种情况下，是⽤ or 运算符可以帮助我们在任⼀条件满⾜时触发告警。对应的表达式为：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;backup_duration_seconds &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; or backup_success &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;场景 3：查询成功的备份，但排除耗时超过 9s&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查询所有成功的备份任务，同时排除那些执⾏时间超过 9 秒的任务，这样我们就可以只关注于那些成功备份的任务，并且备份效率较⾼的。我们可以利⽤ unless 运算符来实现，对应的表达式为：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;backup_success &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; unless backup_duration_seconds &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;1、and 运算符示例，查询当前实例 “1 分钟负载⼤于 2，并且 5 分钟负载⼩于&lt;/p&gt;
&lt;p&gt;2、如果满⾜条件说明当前发了了突增的负载压⼒。注意：and 运算需要遵循向量的匹配逻辑，也就是向量与向量的标签必须完全匹配⼀致才可以进⾏匹配，如果它们的标签不⼀致，则不会执⾏匹配逻辑，除⾮使⽤ ignore 忽略不⼀致的标签来进⾏匹配。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟负载⾼命令 stress --cpu 8 --timeout 60&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1 &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; and&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load5 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.19&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 说明当前 node03 节点 1 分钟负载⽐较⾼，⽽ 5 分钟负载并不⾼&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、or 示例，查询 &lt;a href=&#34;http://prom-node01.oldxu.net:9100&#34;&gt;prom-node01.oldxu.net:9100&lt;/a&gt; 上 CPU 编号为 0 的 idle 时间或 user 时间&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;,mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;idle&#34;&lt;/span&gt;,cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; or&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;,mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;,cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;idle&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6429449.35&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;26207.44&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、unless 示例，查询 node_cpu_seconds_total 指标上 CPU 编号为 0 的，但要排除 node02 和 node03 节点，同时还要排除模式为 idle|user|system|steal|nice&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; unless&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; unless&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; unless&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mode&lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;idle|user|system|steal|nice&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;iowait&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3243.97&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;irq&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7236.66&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;cpu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;softirq&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4117.61&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;46-集合运算符实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#46-集合运算符实践&#34;&gt;#&lt;/a&gt; 4.6 集合运算符实践&lt;/h5&gt;
&lt;p&gt;实例 1：查询实例的⽹络接收流量 “并且” ⽹络发送流量，每秒传输超过 200Mb/s&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#模拟接收和发送流量⽐较⾼：&#34;需要在同⼀节点&#34; 模拟服务端和客户端，执⾏如下命令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1、模拟服务端：iperf -s -p 9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2、模拟客户端：iperf -c prom-node01.oldxu.net -p 9999 -b 300M -t 60&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_network_receive_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; *8 /1024 /1024 &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt; and&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_network_transmit_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; *8 /1024 /1024 &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;device&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lo&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;300.4421537611219&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 这个实例发送和接收同时达到了 300Mb/s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 2：查询当前磁盘，可⽤空间不⾜ 20GB “或者” 当前磁盘可⽤空间不⾜ 30%&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式，计算公式： 可⽤空间 / 1024/1024/1024 &amp;lt;= 20 OR （可⽤空间 / 总磁盘空间） *100 &amp;lt; 30 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_filesystem_avail_bytes /1024 /1024 /1024 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; or &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; node_filesystem_avail_bytes / node_filesystem_size_bytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 3：通过 probe_http_status_code 指标获取当前监控的⽹站返回的状态码，并从中筛选出⼩于 200 的状态码 “或者” ⼤于 400 的状态码&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;199&lt;/span&gt; or&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://httpstat.us/102&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://httpbin.org/status/400&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://httpstat.us/421&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;421&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://httpstat.us/500&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;probe_http_status_code&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://httpstat.us/502&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;五-promql聚合操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-promql聚合操作&#34;&gt;#&lt;/a&gt; 五. PromQL 聚合操作&lt;/h4&gt;
&lt;h5 id=&#34;51-promql聚合介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-promql聚合介绍&#34;&gt;#&lt;/a&gt; 5.1 PromQL 聚合介绍&lt;/h5&gt;
&lt;p&gt;聚合运算，是数据处理中的⽐较常⻅操作，例如统计公司所有⼈员的年龄，求公司整体的平均年龄，最⼤年龄，或最⼩年龄等。因此聚合操作它是从⼀组数据值中，计算出⼀个单⼀的值。&lt;/p&gt;
&lt;p&gt;Prometheus 的聚合操作与此前刚才所描述的常规聚合在本质上是相似的，只不过它⽀持多种聚合运算函数，包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;max ：计算⼀组时间序列中的最⼤值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;min ：计算⼀组时间序列中的最⼩值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;avg ：计算时间序列的平均值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sum ：计算时间序列值的总和。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;count ：它不考虑时间序列的具体值，仅⽤来统计时间序列的数量。例如统计不同 OS 的数量，或者统计有多少个正在运⾏的 Pod 等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;count_vaules ：对每个样本的值进⾏数量统计，例如：http 请求的状&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;态码，200 出现了多少次，404 出现了多少次，500 出现了多少次；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;topk ：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bottomk ：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了这些基本聚合功能外，Prometheus 也提供了分组聚合的功能，它是基于时间序列的标签进⾏分组聚合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;by ：通过 by 关键字，明确指定保留哪些标签进⾏聚合，其他的标签将被忽略。&lt;/li&gt;
&lt;li&gt;without ：与 by 相反， without 关键字⽤于指定要排除的标签，⽽剩下的标签则⽤于聚合和分组。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;52-promql聚合示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-promql聚合示例&#34;&gt;#&lt;/a&gt; 5.2 PromQL 聚合示例&lt;/h5&gt;
&lt;p&gt;为了加深 PromQL 聚合操作的理解，我们使⽤前⾯提到的城市天⽓温度数据，并通过聚合操作来展示如何获取整体的最⾼温度、最低温度以及按城市维度进⾏分组求取平均温度等。&lt;/p&gt;
&lt;p&gt;1、下载并运⾏程序，提供天⽓温度相关的指标数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget http://file.oldxu.net/prometheus/exporter/weather_exporter_oldxu&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# mv weather_exporter_oldxu /usr/local/bin/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# chmod +x /usr/local/bin/weather_exporter_oldxu&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 启动脚本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# vim /usr/lib/systemd/system/weather_exporter.service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Unit&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;weather_exporter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Documentation&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;https://prometheus.io/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;After&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;network.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Service&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/local/bin/weather_exporter_oldxu &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7001&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecReload&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/bin/kill &lt;span class=&#34;token parameter variable&#34;&gt;-HUP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;TimeoutStopSec&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;20s&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Install&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;multi-user.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl daemon-reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl start weather_exporter.service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、编辑 Prometheus 配置⽂件，抓取对应的指标数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# vim /etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    scrape_interval: 1m &lt;span class=&#34;token comment&#34;&gt;# 抓取指标频率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 重新加载 prometheus&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -X POST http://localhost:9090/-/reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 1：获取所有城市的整体温度总和&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;210&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 2：分别展示不同城市的最⼤温度&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;city&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 3：分别展示不同城市的最⼩温度&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;min&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;city&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 4：仅展示 “武汉” 城市的平均温度&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22.666666666666664&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 5：是⽤ topk 获取前三个的⾼温城市。topk 的结果按温度值从⾼到低排序&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;topk&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;,weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;浦东新区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;越秀区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;天河区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 6：使⽤ bottomk 获取排名靠前三的低温城市。bottomk 的结果按温度值从低到⾼排列&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bottomk&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;,weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-6&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;汉⼝区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;海淀区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7001&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 7：统计天⽓温度的数量，按城市进⾏区分&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;city&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 8：统计各温度值出现的频次，按城市进⾏区分&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式 count_values (&#34;value_count&#34;, &amp;lt;metrics_name&gt;) by (&amp;lt;label&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count_values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;status&#34;&lt;/span&gt;,weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;city&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;12&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;13&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;上海&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;14&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;6&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;北京&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-10&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;20&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;24&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;⼴州&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;17&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;15&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;17&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 17 度出现了 2 次，这意味着武汉城市有 2 个不同地域报告了 17 度的温度。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;53-promql聚合实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-promql聚合实践&#34;&gt;#&lt;/a&gt; 5.3 PromQL 聚合实践&lt;/h5&gt;
&lt;p&gt;实例 1：查询所有节点，最近 1 分钟的负载，是否⾼于 cpu 核⼼的 2 倍&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟 cpu 使⽤率⾼于核⼼数：stress --cpu 6&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 获取每个节点的负载表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# CPU 核⼼的 2 倍表达式 [核⼼数 * 2]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;idle&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 整体表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_load1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;idle&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.06&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 该节点的使⽤率超过核⼼数的 2 倍了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 2：查询每个节点的 CPU 的使⽤率，指标名称： node_cpu_seconds_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟 cpu 使⽤率达到 50%：stress --cpu 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式: (1 - CPU 整体空闲使⽤率) * 100 = CPU 使⽤率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; - avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;idle&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; *100&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.1555555555484487&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;51.144444444459324&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 使⽤率在 50% 左右&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.3333333333236395&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 3：查询所有节点，最近 1 分钟磁盘的最⼤写⼊速率，以 MB/s 为单位，指标名称： node_disk_written_bytes_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟数据写⼊，复制 2G 的数据，控制每秒 20M 左右的速度写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# yum install pv -y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# dd if=/dev/zero bs=1M count=2000 | pv -L 20M &gt; /tmp/bigdata&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式： 获取每分钟的磁盘速率，然后提取最⼤的值，最后 / 1024/1024 得到 MB/s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_disk_written_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.007052951388888888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19.724283854166664&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#每秒写⼊速度在 19MB/s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.011946614583333333&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 4：查询所有节点，最近 1 分钟磁盘的读取写⼊速率，以 MB/s 为单位，指标名称： node_disk_read_bytes_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟数据读取，读取 /tmp/bigdata ⽂件，然后以每秒 15MB 的速度读取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# yum install pv -y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# pv -L 15M /tmp/bigdata &gt; /dev/null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_disk_read_bytes_total&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /1024 /1024&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15.006076388888888&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#每秒读取速度在 15MB/s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 5：计算 Prometheus 服务器的 HTTP 请求成功率，指标名称： prometheus_http_requests_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算公式： 请求成功的 (2xx|3xx) / 总的请求 * 100 = 请求成功率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;prometheus_http_requests_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2.*|3.*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / sum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;prometheus_http_requests_total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;99.59027974003956&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# ⽹站整体请求成功率在 99.5%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 6：查询请求排名前三的 URL，指标名称： prometheus_http_requests_total&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;topk&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;,prometheus_http_requests_total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance,handler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;handler&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5483&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;handler&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/api/v1/query&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1576&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;handler&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/api/v1/metadata&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;113&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;六-promql时间聚合操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-promql时间聚合操作&#34;&gt;#&lt;/a&gt; 六. PromQL 时间聚合操作&lt;/h4&gt;
&lt;h5 id=&#34;61-promql时间聚合介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#61-promql时间聚合介绍&#34;&gt;#&lt;/a&gt; 6.1 PromQL 时间聚合介绍&lt;/h5&gt;
&lt;p&gt;在 Prometheus 中，除了可以 “纵向的聚合” 以外，还可以基于时间聚合也就是 “横向聚合”。&lt;/p&gt;
&lt;p&gt;时间聚合不是在不同的序列上进⾏聚合操作，⽽是在 “单个序列” 的不同时间点之间进⾏聚合，这意味着，对于单个序列，我们可以计算过去⼀段时间内的最⼤值，最⼩值，以及平均值等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;avg_over_time (range-vector) ：区间向量内每个指标的平均值。&lt;/li&gt;
&lt;li&gt;min_over_time (range-vector) ：区间向量内每个指标的最⼩值。&lt;/li&gt;
&lt;li&gt;max_over_time (range-vector) ：区间向量内每个指标的最⼤值。&lt;/li&gt;
&lt;li&gt;sum_over_time (range-vector) ：区间向量内每个指标的求和。&lt;/li&gt;
&lt;li&gt;count_over_time (range-vector) ：区间向量内指标样本的总个数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/qAuRqKU.jpeg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;62-promql时间聚合示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#62-promql时间聚合示例&#34;&gt;#&lt;/a&gt; 6.2 PromQL 时间聚合示例&lt;/h5&gt;
&lt;p&gt;1、获取武汉城市中武昌区，最近 5 分钟的温度数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;,dist&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;5m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:5000&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; @1704269783.3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt; @1704269843.3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt; @1704269903.3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt; @1704269963.3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;  @1704270023.3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、获取武汉城市中武昌区，最近 5 分钟温度的最⼤值&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;,dist&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;5m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:5000&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、获取武汉城市中武昌区，最近 5 分钟温度的最⼩值&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;min_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;,dist&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;5m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:5000&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;4、获取武汉城市中武昌区，最近 5 分钟温度的平均值&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;min_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;,dist&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;5m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:5000&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14.6&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;5、获取武汉城市中武昌区，当前数据总共来⾃多少个样本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;weather_oldxu&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;,dist&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;5m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;city&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武汉&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;武昌区&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:5000&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;weather-exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 说明 5 分钟的样本数有 5 个&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;63-promql时间聚合实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#63-promql时间聚合实践&#34;&gt;#&lt;/a&gt; 6.3 PromQL 时间聚合实践&lt;/h5&gt;
&lt;p state=&#34;time_wait&#34;&gt;实例 1：查询最近 1 分钟内 tcp_timewait 连接数的最⼤值，并检查是否超过 1000 个，指标名称： node_tcp_connection_states&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟⼤量 tcp_timewait：ab -n 1000 -c 2 http://localhost:9090/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_tcp_connection_states&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;state&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;time_wait&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;time_wait&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1769&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 最近 1 分钟最⼤的值是 1769&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p state=&#34;established&#34;&gt;实例 2：查询最近 1 分钟内 tcp_established 连接数的最⼤值，并检查是否超过 100 个，指标名称： node_tcp_connection_states&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟 established：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 服务端（node01）：nc -lk 2345&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 客户端（node02）：for i in &amp;#123;1..1000&amp;#125;; do nc prom-node01.oldxu.net 2345 &gt;/dev/null 2&gt;&amp;amp;1 &amp;amp; done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_tcp_connection_states&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;state&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;established&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;established&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;133&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;established&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;106&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 3：查询⽹站平均请求延迟 1 分钟⼤于 3s 的站点，指标名称： probe_duration_seconds（需要 blackbox)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;avg_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;probe_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://httpstat.us/102&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blackbox_http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14.501046884666668&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 4：查询 MySQL 服务器在最近 1 分钟内平均运⾏线程数超过 50 的。指标名称： mysql_global_status_threads_running&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟 MySQL 线程数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   mysql &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT SLEEP(60);&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;avg_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mysql_global_status_threads_running&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9104&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysqld_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;62&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 平均线程数在 62，超过阈值定义的 50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 5：查询以监控 MySQL 服务器过去 1 分钟内的线程当前打开的最⼤连接数。如果这个数值超过了服务器配置的最⼤连接数的 80% 则触发告警。指标名称&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql_global_status_threads_connected （表示当前打开的连接数）&lt;/li&gt;
&lt;li&gt;mysql_global_variables_max_connections （表示配置允许的最⼤连接数）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 模拟 MySQL 连接数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    mysql &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT SLEEP(60);&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max_over_time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mysql_global_status_threads_connected&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1m&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; / mysql_global_variables_max_connections * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9104&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysqld_exporter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80.79470198675497&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 当前最⼤连接数已经超过了 80%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;七-promql向量匹配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-promql向量匹配&#34;&gt;#&lt;/a&gt; 七. PromQL 向量匹配&lt;/h4&gt;
&lt;h5 id=&#34;71-promql向量匹配介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#71-promql向量匹配介绍&#34;&gt;#&lt;/a&gt; 7.1 PromQL 向量匹配介绍&lt;/h5&gt;
&lt;p&gt;在 Prometheus 中，执⾏ “向量与向量之间的运算” 时，需要遵循向量匹配的规则。这意味着两个向量必须具有 “相同的标签”，且对应的 “标签值也必须完全相同”，这才能进⾏运算。如果有任何⼀个标签或标签值不匹配，那么此次的运算将不会执⾏。这种匹配规则也被称为 “向量的⼀对⼀匹配”。例如，下⾯两个时间序列可以成功进⾏⼀对⼀匹配，⽽后可以正常执⾏各种运算：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;http_requests_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;promnode01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;http_requests_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;,instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;因为它们的标签以及标签值完全⼀致，所以它们可以直接进⾏运算操作。&lt;/p&gt;
&lt;h5 id=&#34;72-promql一对一向量匹配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#72-promql一对一向量匹配&#34;&gt;#&lt;/a&gt; 7.2 PromQL ⼀对⼀向量匹配&lt;/h5&gt;
&lt;p&gt;但是在实际监控场景中，我们会经常遇到 “标签不完全相同” 的两个向量，但它们任然需要进⾏运算。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#表示该实例的 HTTP 请求总数。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_status_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#表示该实例中使⽤ GET ⽅法的 HTTP 请求总数。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;假设我们想要计算使⽤ GET ⽅法的请求总数，占总请求数的⽐例是多少。理想的计算公式是： GET ⽅法的请求总数 / 总的请求数 * 100 = GET 请求所占的⽐例。 但由于两个向量的标签不完全相同（⼀个有 method 标签，⼀个没有），因此⽆法进⾏直接进⾏计算。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，我们可以借助 PromQL 的向量匹配选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于标签的匹配（on）：指定基于哪些标签进⾏匹配。只有当指定的 ” 标签及其值 “ 在两个向量中都相同，向量之间才能进⾏运算。&lt;/li&gt;
&lt;li&gt;忽略标签的匹配（ignoring）：指定忽略某些标签，也就是在运算时不考虑这些标签，只要其他标签以及标签的值相同，向量之间就可以进⾏运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;⽅式 1：使⽤ on 关键字匹配特定标签，明明确指定仅基于 job 和 instance 标签进⾏匹配&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_status_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; / on &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;job, instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_total * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15.625&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# GET ⽅法占⽐总请求 15%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;⽅式 2：使⽤ ignoring 关键字忽略特定标签，忽略不希望参与匹配的 method 标签&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_status_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; / ignoring &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_total * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15.625&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# GET ⽅法占⽐总请求 15%&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;73-promql一对多向量匹配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#73-promql一对多向量匹配&#34;&gt;#&lt;/a&gt; 7.3 PromQL ⼀对多向量匹配&lt;/h5&gt;
&lt;p&gt;在实际监控中，我们还会遇到需要进⾏ “⼀对多向量匹配” 的情况，即 “⼀个时间序列中的数据点” 需要与 “另⼀个时间序列中的多个数据点” 进⾏匹配运算。&lt;/p&gt;
&lt;p&gt;举个例⼦：假设我们有如下两个指标：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 第⼀个时间序列：记录了不同 HTTP ⽅法和状态码的错误请求总数。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_error_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;,code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;500&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;220&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_error_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;,code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;404&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;130&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_error_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;PUT&#34;&lt;/span&gt;,code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;501&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_error_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;POST&#34;&lt;/span&gt;,code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;500&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;34&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_error_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;POST&#34;&lt;/span&gt;,code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;502&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;48&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 第⼆个时间序列：记录了每种 HTTP ⽅法的请求总数。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_instance_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;,method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_instance_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#34;method&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;POST&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;120&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;我们的⽬标是计算每种 HTTP ⽅法（GET 和 POST）对应不同状态码（404 和 500）的请求占该⽅法总请求的⽐例。⼤体计算公式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1、GET ⽅法为 500 的请求总数 / GET 的总请求数 * 100 = GET 500 错误⽐例。 (220 /600 * 100 = 21.666666666666668)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2、GET ⽅法为 404 的请求总数 / GET 的总请求数 * 100 = GET 404 错误⽐例。 (130 /600 * 100 = 36.666666666666664)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3、POST ⽅法为 500 的请求总数 / POST 的总请求数 * 100 = POST 500 错误⽐例。 (34 / 120 * 100 = 28.333333333333332)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 4、POST ⽅法为 502 的请求总数 / POST 的总请求数 * 100 = POST 502 错误⽐例。 (48 / 120 * 100 = 40)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为了实现这⼀⽬标，我们有两个问题需要解决：&lt;/p&gt;
&lt;p&gt;1、标签不⼀致：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具体问题：两个时间序列的标签集合不完全⼀致， oldxu_requests_error_total 包含 code 标签，⽽ oldxu_requests_instance_total 不包含。&lt;/li&gt;
&lt;li&gt;解决⽅法：使⽤ ignoring (code) 来忽略 code 标签，从⽽使得两个时间序列在没有 code 标签的情况下可以匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、⼀对多匹配：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具体问题： oldxu_requests_error_total 中的每个数据点，都需要与 oldxu_requests_instance_total 中的总请求数相除。&lt;/li&gt;
&lt;li&gt;解决办法：必须明确左侧还是右侧为多的⼀边，因此我们可以使⽤ group_left 或 group_right 来指明哪个是 “多”，然后进⾏匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此完整的 PromQL 查询如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、使⽤ ignoring (code) 忽略左侧查询（ oldxu_requests_error_total ）中的 code 标签。&lt;/li&gt;
&lt;li&gt;2、使⽤ group_left 修饰符来确保它能够与标签较少的右侧进⾏匹配。&lt;/li&gt;
&lt;li&gt;3、将匹配后的结果相除，并乘以 100 得到百分⽐。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_error_total&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; / ignoring &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   group_left&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;oldxu_requests_instance_total * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;404&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7002&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21.666666666666668&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;500&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7002&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;36.666666666666664&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;500&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7002&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;POST&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28.333333333333332&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;502&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7002&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;POST&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;74-promql向量匹配示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#74-promql向量匹配示例&#34;&gt;#&lt;/a&gt; 7.4 PromQL 向量匹配示例&lt;/h5&gt;
&lt;p&gt;1、下载并运⾏程序，该程序⽤于模拟 “向量匹配相关的” 指标数据；&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget http://file.oldxu.net/prometheus/exporter/vectormatch_exporter_oldxu&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# mv vectormatch_exporter_oldxu /usr/local/bin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# chmod +x /usr/local/bin/vectormatch_exporter_oldxu&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 启动脚本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# vim /usr/lib/systemd/system/vectormatch_exporter.service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Unit&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;vectormatch_exporter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Documentation&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;https://prometheus.io/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;After&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;network.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Service&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/local/bin/vectormatch_exporter_oldxu &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7002&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecReload&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/bin/kill &lt;span class=&#34;token parameter variable&#34;&gt;-HUP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;TimeoutStopSec&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;20s&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Install&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;multi-user.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl daemon-reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl start vectormatch_exporter.service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、编辑 Prometheus 配置⽂件，抓取对应的指标数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# vim /etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;webserver&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:7002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 重新加载 prometheus&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -X POST http://localhost:9090/-/reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例 1：⼀对⼀向量匹配&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/kxSPXou.jpeg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;示例 2：⼀对多向量匹配&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/sEj96xP.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;75-promql向量匹配实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#75-promql向量匹配实践&#34;&gt;#&lt;/a&gt; 7.5 PromQL 向量匹配实践&lt;/h5&gt;
&lt;p&gt;实例 1：查询每个实例 CPU 的各个模式使⽤的时间占 “总 CPU 的时间” ⽐例是多少，也是就占多少百分⽐。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、获取每个实例各个模式占⽤ CPU 的时间，按照（instance、mode）进⾏分组并求和；&lt;/li&gt;
&lt;li&gt;2、获取每个实例总占⽤ CPU 时间，按照（instance）进⾏分组求和；&lt;/li&gt;
&lt;li&gt;3、将每种模式所使⽤的 CPU 时间 / CPU 总的时间 * 100 = 每种模式占总 CPU 时间的百分⽐；&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance,job,mode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/ ignoring &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  group_left&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance,job&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; * &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实例 2：查询 “每个 CPU 核⼼” 上不同模式的时间，占总 CPU 时间的⽐率是多少，也就是占多少百分⽐。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、计算 “每个 CPU 核⼼” 在 “各个模式下” 的累计 CPU 使⽤时间，按照（instance、cpu、mode）进⾏分组并求和；&lt;/li&gt;
&lt;li&gt;2、计算 “每个 CPU 核⼼的总 CPU 时间” 不区分模式。按照（instance、cpu）进⾏分组并求和；&lt;/li&gt;
&lt;li&gt;3、每个 CPU 核⼼的各个模式 / CPU 核⼼的总时间 * 100 = 每个 CPU 核⼼的各个模式时间占⽤百分⽐&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance,cpu,mode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; / on &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance,cpu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   group_left&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node_cpu_seconds_total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance,cpu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Prometheus" />
        <updated>2025-06-28T14:16:53.000Z</updated>
    </entry>
    <entry>
        <id>http://ixuyong.cn/posts/1595025559.html</id>
        <title>Prometheus监控实战（一）</title>
        <link rel="alternate" href="http://ixuyong.cn/posts/1595025559.html"/>
        <content type="html">&lt;h3 id=&#34;prometheus监控实战一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#prometheus监控实战一&#34;&gt;#&lt;/a&gt; Prometheus 监控实战（一）&lt;/h3&gt;
&lt;h4 id=&#34;一-prometheus介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-prometheus介绍&#34;&gt;#&lt;/a&gt; 一、Prometheus 介绍&lt;/h4&gt;
&lt;h5 id=&#34;11-prometheus是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-prometheus是什么&#34;&gt;#&lt;/a&gt; 1.1 Prometheus 是什么&lt;/h5&gt;
&lt;p&gt;Prometheus 是由 SoundCloud 使⽤ Go 语⾔开发的时序数据库（简称 TSDB）但它的功能并⾮局限于 TSDB，因为它还⽀持对⽬标（如服务器、应⽤程序等）进⾏监控；&lt;/p&gt;
&lt;p&gt;因此，我们也可以理解 Prometheus 是⼀款开源的 “监控系统”，但仅仅依托 Prometheus 不⾜以⽀撑整个监控系统，它需要结合⽣态内其他的组件来构建⼀个完整的 IT 监控系统。例如： AleartManager、Grafana、PushGateway 等等。&lt;/p&gt;
&lt;h5 id=&#34;12-什么是时序数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-什么是时序数据&#34;&gt;#&lt;/a&gt; 1.2 什么是时序数据&lt;/h5&gt;
&lt;p&gt;所谓时序数据，指的是，按照固定时间周期对 “某个或某些指标” 进⾏ “反复测量” 从⽽得到测量的 “数据集合”。这些数据随着时间的推移，会形成⼀个连续的序列，因此被称为时序数据。如果我们将这些数据绘制在图形上，通常会有⼀个 数据轴（Y 轴） 表示数据值，⼀个 时间轴（X 轴） 表示测量的时间点。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/ciCCOaR.jpeg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;13-prometheus时序数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-prometheus时序数据&#34;&gt;#&lt;/a&gt; 1.3 Prometheus 时序数据&lt;/h5&gt;
&lt;p&gt;在 Prometheus 中，时序数据主要包括三个部分：指标名称、标签集、时序数据（时间戳、数据）。&lt;/p&gt;
&lt;p&gt;1、指标名称&lt;/p&gt;
&lt;p&gt;例如，监控服务器的 CPU 使⽤率，对应的指标名称可以是 cpu_usage、memory_MemTotal 等指标名称是被监控端提供的。&lt;/p&gt;
&lt;p&gt;2、标签集&lt;/p&gt;
&lt;p&gt;标签集⽤于区分不同的数据源或实例。&lt;/p&gt;
&lt;p&gt;假设我们有两台服务器，⼀台是 Web 服务器，另⼀台是 db 数据库服务器。为了区分这两台服务器的 CPU 使⽤率数据，我们可以为它们添加不同的标签，例如： cpu_usage {type=&amp;quot;web&amp;quot;} 和 cpu_usage {type=&amp;quot;db&amp;quot;} 。&lt;/p&gt;
&lt;p&gt;3、时序数据&lt;/p&gt;
&lt;p&gt;指按照按固定时间间隔，采集对应指标名称，从⽽获取到对应指标的数据。例如，每分钟采集⼀次 CPU 使⽤率（ cpu_usage ）。每个数据点包括采集 CPU 使⽤率的时间戳（ 2023.03.30 10:00:01 ），以及该时间点采集到的样本值（ 50% ）。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/SRYErXu.jpeg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;PS：每⼀个 “指标名称和标签组合” 都会形成⼀条独⽴的时间序列。这就表示，即使我们只探测了⼀个指标 cpu_usage ，但是它具有不同的标签值，就会产⽣两条分别代表不同实例的时间序列。在这些时间序列中，每⼀个特定的数据点被称为⼀个 &#39; 样本 &#39;。每个样本都包含指标名称、标签、时间戳以及对应的指标值。&lt;/p&gt;
&lt;h5 id=&#34;14-prometheus数据采集三种方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-prometheus数据采集三种方式&#34;&gt;#&lt;/a&gt; 1.4 Prometheus 数据采集三种方式&lt;/h5&gt;
&lt;p&gt;在传统的 Zabbix 监控系统中，通常是需要在被监控的节点上安装 Agent 代理程序。由 Agent 代理程序定期收集指标数据，并将其发送到监控服务器，完成数据采集。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/GrKq3KY.jpeg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 Prometheus 中，被监控端⽆需安装专⻔的 Agent。它只需要 “被监控端通过 HTTP 协议开放出符合 Prometheus 规范的指标数据”，Prometheus 就能够顺利完成数据抓取。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/8qTrLX7.jpeg&#34; alt=&#34;5.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但，并不是所有的应⽤或服务都能直接⽀持 HTTP 协议并提供符合 Prometheus 所兼容的指标格式。因此，Prometheus 设计了三种主要的数据抓取机制，即 Instrumentation、Exporter 和 PushGateway。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instrumentation ：被监控端通过 HTTP 暴露出 Prometheus 格式的数据，Prometheus 就可以直接采集，这就是所谓的 Instrumentation。像 Kubernetes、Haproxy、Zookeeper、RabbitMQ、Etcd 等应⽤程序原⽣就⽀持暴露指标，可以直接被 Prometheus 所监控。对于 Python、Java、Go 这些开发语⾔编写的业务应⽤，开发⼈员可以直接引⽤ Prometheus 客户端库来编写代码，让应⽤程序原⽣就能⽀持暴露需要监控的指标数据，这些指标数据可以直接被 Prometheus 采集。这就相当于应⽤程序本身具备了与 Prometheus 通信的能⼒，⽆需额外的中间件来转换数据。&lt;/li&gt;
&lt;li&gt;Exporter（导出器） ：有些应⽤程序并不原⽣⽀持通过 HTTP 协议暴露指标数据。对于这类应⽤，我们可以使⽤ Exporter 来代为采集指标。Exporter 是⼀个独⽴的运⾏程序，负责从⽬标应⽤中采集原始格式的数据，并将其转换为 Prometheus 可以理解的格式，然后通过 HTTP 协议暴露出来，供 Prometheus 抓取指标。简单来说，Exporter 就像⼀个翻译官，将⽬标应⽤程序的数据翻译成 Prometheus 可以读懂的语⾔。&lt;/li&gt;
&lt;li&gt;PushGateway（推送⽹关） ：对于那些⽣命周期较短或者不⽅便被 Prometheus 主动拉取数据的应⽤程序（如短暂运⾏的脚本任务）可以使⽤ PushGateway。让这些短暂运⾏的脚本程序，将对应的指标数据主动推送到 PushGateway，然后 Prometheus 从 PushGateway 中抓取这些数据。PushGateway 就像⼀个中间站，存储这些短暂任务产⽣的指标数据，等待 Prometheus 来抓取。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/vCHt9SX.jpeg&#34; alt=&#34;6.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;15-prometheus作业与实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-prometheus作业与实例&#34;&gt;#&lt;/a&gt; 1.5 Prometheus 作业与实例&lt;/h5&gt;
&lt;p&gt;在 Prometheus 中，被监控的每⼀个对象都称为实例（Instance） 实例代表着⼀个独⽴的监控⽬标，它由 IP 地址加端⼝号组合⽽成，&lt;/p&gt;
&lt;p&gt;如 localhost:9090 。在 Prometheus 的配置中，这些实例也可以被称为” ⽬标（Target）“或者 “端点（Endpoint）”。&lt;/p&gt;
&lt;p&gt;为了⽅便管理这些⽬标实例，我们通常会将功能相似或者类型相同的（实例 Instance）归纳到⼀个 “作业（Job）” 中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实例（Instances）：实例指的是⼀个被监控的端点。它通常是指向⼀个运⾏的服务或应⽤程序的进程，每个实例都以 host:port 进⾏标识。例如，⼀个 MySQL 数据库服务运⾏在 10.0.0.51:3306 上，那么它就是⼀个实例。&lt;/li&gt;
&lt;li&gt;作业（Jobs）：作业是⼀组具有相同类型的实例集合。例如，多个分布在不同服务器上 MySQL 应⽤，你可以将这些实例归类为同⼀个 mysql 的 Job 作业，⽽后按照 Job 分组后的维度进⾏分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/cFCOs3e.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 Prometheus 的数据模型中，job 和 instance 是两个核⼼的标签，它们会⾃动附加到所有收集的时间序列数据上。如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node-exporter&#34;&lt;/span&gt;,instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;10.0.0.7&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14.04&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node-exporter&#34;&lt;/span&gt;,instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;10.0.0.8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12.04&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;job&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node-exporter&#34;&lt;/span&gt;,instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;10.0.0.9&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16.04&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;16-prometheus架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16-prometheus架构&#34;&gt;#&lt;/a&gt; 1.6 Prometheus 架构&lt;/h5&gt;
&lt;p&gt;Prometheus 最为核⼼的功能就是 “数据采集” 和 “数据存储”。但是，仅有这两项功能并不能构成⼀个完整的监控系统。因此，Prometheus 需要与其他的组件进⾏结合，从⽽实现数据的分析、展示和告警，因此⼀个完整意义上的监控系统⼤体需要如下 5 个组成部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、数据采集：Prometheus 采⽤ Pull 模式主动向被监控端抓取指标数据。被监控端可以是直接暴露出的应⽤程序指标数据，也可以是通过安装 Exporter 来抓取和暴露应⽤程序的数据。只要是以 Prometheus 格式提供的指标数据，都可以被 Prometheus 抓取。&lt;/li&gt;
&lt;li&gt;2、数据存储：Prometheus 会将抓取到的数据，存储在本地的时间序列数据库中，以防⽌数据丢失。&lt;/li&gt;
&lt;li&gt;3、数据查询和分析：Prometheus 内置了强⼤的查询语⾔ PromQL，⽤户可以通过 PromQL 查询存储在 Prometheus 上的时序数据，进⾏实时查询和分析。同时 PromQL ⽀持多种聚合操作和数学运算，可以对数据进⾏深⼊分析。&lt;/li&gt;
&lt;li&gt;4、告警系统：Prometheus 的告警分为了两个部分组成，告警规则和 Alertmanager。告警规则定义在 Prometheus 服务器中，根据⽤户指定的条件触发告警。当告警触发时，Prometheus 服务器会将告警信息发送给 Alertmanager。Alertmanager 会对告警信息进⾏去重、分组，然后将告警消息通过媒介发送给接收者（如邮件、钉钉等）。&lt;/li&gt;
&lt;li&gt;5、数据可视化：Prometheus 内置了⼀个简单的图形界⾯，⽤户可以在 Web 浏览器中使⽤ PromQL 查询时序数据，并将查询结果以图形的形式展示出来。此外，Prometheus 还可以与第三⽅可视化⼯具（如 Grafana）集成，提供更丰富的可视化功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解 Prometheus ⽣态中的各个组件后，我们可以概括其⼯作流程：⽬标发现、数据抓取、存储、分析、告警和展示。这些步骤共同构成了 Prometheus 强⼤的监控和告警系统。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/cZ48728.jpeg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、⽬标发现：在开始监控之前，Prometheus 需要确定监控⽬标。它可以通过静态的配置⽂件指定，或者利⽤服务发现机制动态地发现需要监控的服务。例如，在 Kubernetes 环境中，Prometheus 能够⾃动识别并监控集群中的服务，确保随着集群的变化，监控⽬标始终是最新的。&lt;/li&gt;
&lt;li&gt;2、数据抓取：有了明确的监控⽬标后，Prometheus 通过 HTTP 协议定期从这些⽬标的 /metrics 端点抓取指标数据。这些端点暴露了各种监控指标。&lt;/li&gt;
&lt;li&gt;3、数据存储：数据抓取后会存储在本地的时间序列数据库中。&lt;/li&gt;
&lt;li&gt;4、数据分析：数据⼀旦被存储，就可以⽤ PromQL 查询语⾔，对其进⾏分析。⽆论是实时监控还是历史数据分析，PromQL 都能提供丰富的数据聚合功能，以洞察系统的状况。&lt;/li&gt;
&lt;li&gt;5、告警：Prometheus 根据预定义的规则进⾏评估。当监控的指标达到告警阈值时，Prometheus 会将告警信息发送给 Alertmanager，由 Alertmanager 进⾏告警处理并通知。&lt;/li&gt;
&lt;li&gt;6、数据可视化：Prometheus ⾃带了简单的 UI。但对于更⾼级的数据可视化需求，通常会整合 Grafana 这样的⼯具来为⽤户提供直观的数据展现⽅式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;17-prometheus数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#17-prometheus数据模型&#34;&gt;#&lt;/a&gt; 1.7 Prometheus 数据模型&lt;/h5&gt;
&lt;p&gt;Prometheus 中最为重要的是，对指标进⾏抓取和存储，这些存储下来的数据可以帮助我们分析趋势，或预测未来。为了更有⾼效的存储和查询这些数据，Prometheus 使⽤了⼀种叫 &amp;quot;时间序列&amp;quot; 的数据格式进⾏存储，所谓时间序列就是按照时间顺序记录所采集到的指标以及指标数据。⽽每个时间序列都是由 “⼀个指标名称加⼀堆标签” 所组成的⼀条唯⼀序列标识，其格式 &amp;quot;&amp;lt;metric_name&amp;gt;{&amp;lt;label_name&amp;gt;=&amp;lt;label_value&amp;gt;, &amp;lt;label_name&amp;gt;=&amp;lt;label_value&amp;gt;, ...} @&lt;timestamp&gt; &lt;value&gt;&amp;quot;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询 node01 节点的各 CPU 核⼼使⽤率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node01.oldxu.net&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node01.oldxu.net&#34;&lt;/span&gt;,core&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7.535&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node01.oldxu.net&#34;&lt;/span&gt;,core&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7.535&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查询 node02 节点，核⼼为 0 的 CPU 使⽤率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node02.oldxu.net&#34;&lt;/span&gt;,core&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cpu_usage&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;instance&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;node01.oldxu.net&#34;&lt;/span&gt;,core&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8.025&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;二-prometheus安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-prometheus安装&#34;&gt;#&lt;/a&gt; 二、Prometheus 安装&lt;/h4&gt;
&lt;p&gt;Prometheus 支持多种安装方式，为了便于理解，我们先使用二进制方式进行部署，后期在使用 Kubernetes 方式进行部署。&lt;/p&gt;
&lt;h5 id=&#34;21-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-环境准备&#34;&gt;#&lt;/a&gt; 2.1 环境准备&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;IP 地址&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;主机名名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;系统版本&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;内核版本&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CPU&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;内存&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.221&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node01.oldxu.net&#34;&gt;prom-node01.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.222&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node02.oldxu.net&#34;&gt;prom-node02.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.223&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node03.oldxu.net&#34;&gt;prom-node03.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.224&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node04.oldxu.net&#34;&gt;prom-node04.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.225&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node05.oldxu.net&#34;&gt;prom-node05.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;22-配置host解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-配置host解析&#34;&gt;#&lt;/a&gt; 2.2 配置 Host 解析&lt;/h5&gt;
&lt;p&gt;1、配置 hosts 解析&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;192.168.40.221 prom-node01.oldxu.net&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /etc/hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;192.168.40.222 prom-node02.oldxu.net&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /etc/hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;192.168.40.223 prom-node03.oldxu.net&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /etc/hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;192.168.40.224 prom-node04.oldxu.net&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /etc/hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;192.168.40.225 prom-node05.oldxu.net&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /etc/hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、推送 hosts 解析文件，确保每个节点都能正常通过主机名进行访问&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;222&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;225&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;scp&lt;/span&gt; /etc/hosts root@192.168.40.&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;:/etc/hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;23-下载prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-下载prometheus&#34;&gt;#&lt;/a&gt; 2.3 下载 Prometheus&lt;/h5&gt;
&lt;p&gt;1、访问 Prometheus 官网 ﻿https://prometheus.io/download/﻿下载 Prometheus&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget https://github.com/prometheus/prometheus/releases/download/v2.49.1/prometheus-2.49.1.linux-amd64.tar.gz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 加速地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget https://mirror.ghproxy.com/https://github.com/prometheus/prometheus/releases/download/v2.49.1/prometheus-2.49.1.linux-amd64.tar.gz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、解压 Prometheus 至指定目录&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# tar xf prometheus-2.49.1.linux-amd64.tar.gz -C /etc&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ln -s /etc/prometheus-2.49.1.linux-amd64/ /etc/prometheus&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、执行 ﻿prometheus --version﻿ 查看命令是否正常&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/prometheus/prometheus --version&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;prometheus, version &lt;span class=&#34;token number&#34;&gt;2.49&lt;/span&gt;.1 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;branch: HEAD, revision: 43e14844a33b65e2a396e3944272af8b3a494071&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  build user:       root@6d5f4c649d25&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  build date:       &lt;span class=&#34;token number&#34;&gt;20240115&lt;/span&gt;-16:58:43&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  go version:       go1.21.6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  platform:         linux/amd64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  tags:             netgo,builtinassets,stringlabels&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;24-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-配置prometheus&#34;&gt;#&lt;/a&gt; 2.4 配置 Prometheus&lt;/h5&gt;
&lt;p&gt;1、在启动 Prometheus 之前，我们需要准备一个 Prometheus 的配置文件，监控目标服务。由于 Prometheus 服务本身对外暴露了 Metrics 指标接口，所以我们可以配置 Prometheus 监控自身，保存一个名为 prometheus.yml 的文件，替换掉默认的配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cp /etc/prometheus/prometheus.yml /etc/prometheus/prometheus.yml_bak&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 全局段定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;global:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  scrape_interval: 15s &lt;span class=&#34;token comment&#34;&gt;# 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 抓取指定的目标&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;scrape_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;prometheus&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 定义一个抓取任务，名为 &#39;prometheus&#39;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    metrics_path: &lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs: &lt;span class=&#34;token comment&#34;&gt;# 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、启动可以直接通过命令启动，但直接这么启动不是很方便，因此我们可以准备一个专属的启动文件&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/prometheus/prometheus --config.file=/etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;25-启动prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-启动prometheus&#34;&gt;#&lt;/a&gt; 2.5 启动 Prometheus&lt;/h5&gt;
&lt;p&gt;1、配置 system 管理 Prometheus 启动和停止&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /usr/lib/systemd/system/prometheus.service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Unit&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Prometheus server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Documentation&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;https://prometheus.io/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Service&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/prometheus/prometheus &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--config.file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/prometheus/prometheus.yml &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--storage.tsdb.path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/prometheus/data &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--storage.tsdb.retention.time&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;60d &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--web.enable-lifecycle&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecReload&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/bin/kill &lt;span class=&#34;token parameter variable&#34;&gt;-HUP&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$MAINPID&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;on-failure&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;RestartSec&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;TimeoutStopSec&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;SendSIGKILL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;no&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;LimitNOFILE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8192&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Install&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;multi-user.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、在启动 Prometheus 服务时通过参数传递了一些配置选项，它们定义了 Prometheus 服务的一些关键行为。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;--config.file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/prometheus/prometheus.yml &lt;span class=&#34;token comment&#34;&gt;# 指定 Prometheus 的配置文件路径。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;--storage.tsdb.path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/prometheus/data &lt;span class=&#34;token comment&#34;&gt;# 设置 Prometheus 存储时间序列数据库（TSDB）的路径。用于存放 Prometheus 抓取到的指标数据。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;--storage.tsdb.retention.time&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;60d &lt;span class=&#34;token comment&#34;&gt;# 配置 Prometheus 的数据保留期限。超过这个时间范围的旧数据将被删除。这个可以根据存储资源和监控需求进行调整。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--web.enable-lifecycle &lt;span class=&#34;token comment&#34;&gt;# 允许通过 HTTP 请求的方式来更新 Prometheus 的配置。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、启动 Prometheus 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl daemon-reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl start prometheus&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# netstat -lntp |grep 9090&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tcp6       &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; :::9090                 :::*                    LISTEN      &lt;span class=&#34;token number&#34;&gt;2057&lt;/span&gt;/prometheus&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#通过 HTTP 请求的方式来热更新 Prometheus 的配置文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -X POST http://localhost:9090/-/reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;26-访问prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#26-访问prometheus&#34;&gt;#&lt;/a&gt; 2.6 访问 Prometheus&lt;/h5&gt;
&lt;p&gt;1、通过访问对应服务的 IP:9090 端口，访问 Prometheus 的 UI 界面&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/V68yeDl.jpeg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;27-prometheus的webui&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#27-prometheus的webui&#34;&gt;#&lt;/a&gt; 2.7 Prometheus 的 WebUI&lt;/h5&gt;
&lt;p&gt;Prometheus 的 Web UI 提供了多个页面，以便用户可以查询指标、查看配置和状态，以及管理告警等。以下是 Prometheus Web UI 中常见的几个页面及其描述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Graph: 允许用户通过 Prometheus 的查询语言 PromQL 来查询数据，并将结果以图形的形式展示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alerts：允许用户查看当前配置的告警规则以及每个告警的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Status：页面包含了几个子页面，它们提供了关于 Prometheus 服务器本身的各种信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Command-Line Flags: 显示了 Prometheus 启动时使用的命令行参数。这有助于了解 Prometheus 的配置和运行状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration: 展示了 Prometheus 当前加载的配置文件内容，可以用来确认 Prometheus 正在使用的配置，有助于调试问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Targets: 显示了 Prometheus 监控的采集目标列表，包括每个目标的健康状态。如果某个目标无法抓取，这里也会显示相关的错误信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rules: 显示所有配置的告警和记录规则。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Service Discovery: 展示了 Prometheus 的服务发现状态，这包括了 Prometheus 如何发现抓取目标，以及它们的当前状态和元数据信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;三-安装grafana图形展示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-安装grafana图形展示&#34;&gt;#&lt;/a&gt; 三、安装 Grafana 图形展示&lt;/h4&gt;
&lt;h5 id=&#34;31-grafana介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-grafana介绍&#34;&gt;#&lt;/a&gt; 3.1 Grafana 介绍&lt;/h5&gt;
&lt;p&gt;Grafana 是一款开源的数据分析和可视化工具，从 2.5.0 版本开始，Grafana 已经内置了对 Prometheus 的支持，可以直接将 Prometheus 作为数据源进行查询和展示。&lt;/p&gt;
&lt;h5 id=&#34;32-grafana安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-grafana安装&#34;&gt;#&lt;/a&gt; 3.2 Grafana 安装&lt;/h5&gt;
&lt;p&gt;1、访问 Grafana 官网 ﻿https://grafana.com/grafana/download﻿，下载 Grafana&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget https://dl.grafana.com/enterprise/release/grafana-enterprise-10.3.1-1.x86_64.rpm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、安装并启动 Grafana&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# yum localinstall grafana-enterprise-10.3.1-1.x86_64.rpm -y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl start grafana-server &amp;amp;&amp;amp; systemctl enable grafana-server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# netstat -lntp |grep 3000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tcp6       &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; :::3000                 :::*                    LISTEN      &lt;span class=&#34;token number&#34;&gt;1787&lt;/span&gt;/grafana&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、访问 Grafana，通过﻿http://IP:3000﻿，默认 Grafana 用户名为﻿admin﻿，密码为﻿admin&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/kBj2SIo.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;4、点击左边菜单选择﻿Administration--&amp;gt;Default Preferences﻿（偏好设置）在﻿Language﻿选项中选择﻿简体中文﻿然后﻿Save﻿.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/Xccw96a.png&#34; alt=&#34;1.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;33-配置grafana数据源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-配置grafana数据源&#34;&gt;#&lt;/a&gt; 3.3 配置 Grafana 数据源&lt;/h5&gt;
&lt;p&gt;1、配置 Grafana 数据源为 Prometheus，点击菜单，选择﻿Connections--&amp;gt;Data sources--&amp;gt; 选择 Prometheus&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/0CLhNrE.jpeg&#34; alt=&#34;5.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、导入 Grafana 默认监控 Prometheus 的 Dashboards，该 Dashboard 主要用于监控 Prometheus 服务器本身的性能和状态指标。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/ZsFdwXb.jpeg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、通过图形界面展示 Prometheus 的数据指标；&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/ZsFdwXb.jpeg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;34-配置prometheus监控grafana&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-配置prometheus监控grafana&#34;&gt;#&lt;/a&gt; 3.4 配置 Prometheus 监控 Grafana&lt;/h5&gt;
&lt;p&gt;Grafana 作为一个广泛使用的可视化工具，其实也需要被监控。幸运的是 Grafana 本身提供了一个内置的指标端点。通过访问 ﻿http://&amp;lt;grafana-ip:3000/metrics﻿，你可以获取到 Grafana 的性能指标。这些指标包括了 HTTP 请求统计、内存使用情况、图形的数量，活跃用户数等指标，它们对于监控 Grafana 的健康状况非常有帮助。&lt;/p&gt;
&lt;p&gt;1、访问 Grafana 对外暴露指标的 Metrics 接口，如果没有问题，会看到一系列的指标数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -s http://prom-node01.oldxu.net:3000/metrics| tail -10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# TYPE prometheus_template_text_expansions_total counter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;prometheus_template_text_expansions_total &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# TYPE promhttp_metric_handler_requests_in_flight gauge&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;promhttp_metric_handler_requests_in_flight &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# TYPE promhttp_metric_handler_requests_total counter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;promhttp_metric_handler_requests_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;200&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;promhttp_metric_handler_requests_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;500&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;promhttp_metric_handler_requests_total&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;503&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、配置 Prometheus，将 Grafana 作为一个监控目标（target）添加到配置中。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 全局段定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;global:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  scrape_interval: 15s &lt;span class=&#34;token comment&#34;&gt;# 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 抓取指定的目标&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;scrape_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;prometheus&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 定义一个抓取任务，名为 &#39;prometheus&#39;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    metrics_path: &lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs: &lt;span class=&#34;token comment&#34;&gt;# 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;grafana&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    metrics_path: &lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:3000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/prometheus/promtool check config /etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Checking /etc/prometheus/prometheus.yml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; SUCCESS: /etc/prometheus/prometheus.yml is valid prometheus config &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; syntax&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -X POST http://localhost:9090/-/reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、访问 Prometheus，在 Status 中的 Targets 页面，能看到新添加的 grafana 目标；如果 State 显示 UP，说明 Prometheus 正在从 Grafana 抓取指标。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/Wh5m6k9.jpeg&#34; alt=&#34;8.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;4、接下来可以在 Grafana 中创建一个（Dashboard），也可以使用之前配置 Prometheus 导入的 Grafana 模板，这样就可以直观地展示被监控的 Grafana 服务状态；&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/9IFFRtb.jpeg&#34; alt=&#34;7.jpg&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;四-配置prometheus监控node节点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-配置prometheus监控node节点&#34;&gt;#&lt;/a&gt; 四、配置 Prometheus 监控 Node 节点&lt;/h4&gt;
&lt;h5 id=&#34;41-如何监控node节点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-如何监控node节点&#34;&gt;#&lt;/a&gt; 4.1 如何监控 Node 节点&lt;/h5&gt;
&lt;p&gt;监控节点（如服务器或者虚拟机）通常涉及收集硬件和操作系统层面的指标，比如 CPU 使用率、内存占用、磁盘 I/O、网络流量等。但是这些指标并不能直接被 Prometheus 抓取，因此我们需要借助 Node exporter 将对应的指标转为 Prometheus 能够兼容的指标格式，并对外提供 HTTP 接口暴露给 Prometheus 进行指标抓取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;监控地址规划：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;IP 地址&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;主机名名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;系统版本&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;内核版本&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CPU&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;内存&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.221&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node01.oldxu.net&#34;&gt;prom-node01.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.222&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node02.oldxu.net&#34;&gt;prom-node02.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;192.168.40.223&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;http://prom-node03.oldxu.net&#34;&gt;prom-node03.oldxu.net&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Centos7.9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.10.0-957.el7.x86_64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2Core&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;42-安装node_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-安装node_exporter&#34;&gt;#&lt;/a&gt; 4.2 安装 node_exporter&lt;/h5&gt;
&lt;p&gt;1、访问 Node-exporter 的 github，获取 Node-exporter 的下载地址， ﻿https://github.com/prometheus/node_exporter/releases/&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 加速地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# wget https://mirror.ghproxy.com/https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 推送给其他节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;222&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;225&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;scp&lt;/span&gt; node_exporter-1.7.0.linux-amd64.tar.gz root@192.168.40.&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;:~&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、解压 node-exporter&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# tar xf node_exporter-1.7.0.linux-amd64.tar.gz -C /etc&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ln -s /etc/node_exporter-1.7.0.linux-amd64/ /etc/node_exporter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ll /etc/node_exporter/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;total &lt;span class=&#34;token number&#34;&gt;19476&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-rw-r--r-- &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1001&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1002&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;11357&lt;/span&gt; Nov &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt; 08:02 LICENSE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-rwxr-xr-x &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1001&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1002&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19925095&lt;/span&gt; Nov &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt; 07:54 node_exporter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-rw-r--r-- &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1001&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1002&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;463&lt;/span&gt; Nov &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt; 08:02 NOTICE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;43-配置node_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-配置node_exporter&#34;&gt;#&lt;/a&gt; 4.3 配置 node_exporter&lt;/h5&gt;
&lt;p&gt;启动 Node Exporter 即可开始进行指标采集，它默认启用了一些常见的收集器以监控 CPU、内存、网络等关键指标。然而，由于每个操作系统对收集器的支持程度不同，Node Exporter 也提供了一些 &amp;quot;默认未启用的收集器&amp;quot;。我们可以根据监控需求，通过特定的参数来启用这些收集器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要禁用默认激活的收集器，可以使用参数 ﻿--no-collector.&lt;name&gt;&lt;/li&gt;
&lt;li&gt;要启用默认未激活的收集器，可以使用参数﻿--collector.&lt;name&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果只想启动某些特定的收集器，可以使用 ﻿--collector.disable-defaults﻿标志禁用所有默认的，然后在指定具体要启用收集器 ﻿--collector.&amp;lt;name﻿ 来进行收集。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;默认关闭一些收集器的原因在于，有些指标采集需要占用过多资源开销、太重、太慢；所以谨慎开启；&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1、例如，禁止默认启动的 arp 的采集&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 直接启动会发现有 arp 采集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/node_exporter/node_exporter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:21:35.150Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:117 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;arp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 禁用 arp 收集器，就看不到了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/node_exporter/node_exporter --no-collector.arp&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、启用默认未激活的﻿tcpstat﻿收集器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/node_exporter/node_exporter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/node_exporter/node_exporter --collector.tcpstat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:23:34.296Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:117 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;tcpstat&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、也可以禁用所有收集器，仅启用那些只想启用的收集器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# /etc/node_exporter/node_exporter --collector.disable-defaults --collector.cpu --collector.meminfo --collector.diskstats --collector.netstat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.969Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:192 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Starting node_exporter&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;(version=1.7.0, branch=HEAD, revision=7333465abf9efba81876303bb57e6fadb946041b)&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.969Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:193 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Build context&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;build_context&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;(go=go1.21.4, platform=linux/amd64, user=root@35918982f6d8, date=20231112-23:53:35, tags=netgo osusergo static_build)&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.969Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:195 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;warn &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Node Exporter is running as root user. This exporter is designed to run as unprivileged user, root is not required.&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;diskstats_common.go:111 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;diskstats &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Parsed flag --collector.diskstats.device-exclude&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;^&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ram&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;loop&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;fd&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;xv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;a-z&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;nvme&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;d+n&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;d+p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;d+$&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:110 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Enabled collectors&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:117 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;cpu&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:117 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;diskstats&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:117 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;meminfo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter.go:117 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;collector&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;netstat&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;tls_config.go:274 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Listening on&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;::&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;:9100&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt;-02-22T13:25:37.970Z &lt;span class=&#34;token assign-left variable&#34;&gt;caller&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;tls_config.go:277 &lt;span class=&#34;token assign-left variable&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info &lt;span class=&#34;token assign-left variable&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;TLS is disabled.&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;http2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false &lt;span class=&#34;token assign-left variable&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;::&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;:9100&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;44-启动node_exporter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#44-启动node_exporter&#34;&gt;#&lt;/a&gt; 4.4 启动 node_exporter&lt;/h5&gt;
&lt;p&gt;1、配置 system 管理 Prometheus 启动和停止&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /usr/lib/systemd/system/node_exporter.service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Unit&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;node_exporter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Documentation&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;https://prometheus.io/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;After&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;network.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Service&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/node_exporter/node_exporter &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  --web.listen-address&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;:9100 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  --web.max-requests&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--collector.mountstats&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--collector.systemd&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--collector.ethtool&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token parameter variable&#34;&gt;--collector.tcpstat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ExecReload&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/bin/kill &lt;span class=&#34;token parameter variable&#34;&gt;-HUP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;TimeoutStopSec&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;20s&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Install&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;multi-user.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、启动 node-exporter&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl daemon-reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# systemctl start node_exporter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# netstat -lntp|grep 9100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tcp6       &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; :::9100                 :::*                    LISTEN      &lt;span class=&#34;token number&#34;&gt;6340&lt;/span&gt;/node_exporter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、访问对应的 metrics，验证是否能采集到数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -s http://localhost:9100/metrics |head -10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# TYPE go_gc_duration_seconds summary&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;quantile&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.066e-05&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;quantile&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0.25&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.523e-05&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;quantile&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0.5&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.7351e-05&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;quantile&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0.75&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.9952e-05&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;quantile&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.000122787&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds_sum &lt;span class=&#34;token number&#34;&gt;0.000496506&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;go_gc_duration_seconds_count &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# HELP go_goroutines Number of goroutines that currently exist.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;45-配置prometheus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#45-配置prometheus&#34;&gt;#&lt;/a&gt; 4.5 配置 Prometheus&lt;/h5&gt;
&lt;p&gt;1、修改 Prometheus 配置，添加新的 Job 分组，然后将对应的节点纳入监控中；&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /etc/prometheus/prometheus.yml&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 全局段定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;global:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  scrape_interval: 15s &lt;span class=&#34;token comment&#34;&gt;# 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 抓取指定的目标&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;scrape_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;prometheus&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 定义一个抓取任务，名为 &#39;prometheus&#39;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    metrics_path: &lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 &#39;/metrics&#39;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs: &lt;span class=&#34;token comment&#34;&gt;# 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9090&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;grafana&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    metrics_path: &lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:3000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  - job_name: &lt;span class=&#34;token string&#34;&gt;&#34;node_exporter&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    metrics_path: &lt;span class=&#34;token string&#34;&gt;&#34;/metrics&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    static_configs:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - targets: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;prom-node01.oldxu.net:9100&#34;&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#34;prom-node02.oldxu.net:9100&#34;&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#34;prom-node03.oldxu.net:9100&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、重新加载 Prometheus&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@prom-node01 ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# curl -v -X POST http://localhost:9090/-/reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* About to connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; to localhost port &lt;span class=&#34;token number&#34;&gt;9090&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#0)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   Trying ::1&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* Connected to localhost &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;::1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; port &lt;span class=&#34;token number&#34;&gt;9090&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#0)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; POST /-/reload HTTP/1.1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; User-Agent: curl/7.29.0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; Host: localhost:9090&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; Accept: */*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; HTTP/1.1 &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt; OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; Date: Thu, &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt; Feb &lt;span class=&#34;token number&#34;&gt;2024&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;:35:56 GMT&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; Content-Length: &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* Connection &lt;span class=&#34;token comment&#34;&gt;#0 to host localhost left intact&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3、检查 Prometheus 是否已将对应节点纳入监控（点击 Status--&amp;gt;Targets）&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/ClR3Pyh.jpeg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;46-导入grafana模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#46-导入grafana模板&#34;&gt;#&lt;/a&gt; 4.6 导入 Grafana 模板&lt;/h5&gt;
&lt;p&gt;在 Grafana 的官方插件库中，有很多 Node-exporter 模板。其中相对受欢的模板的 ID 是： ﻿11074、1860﻿。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;11074﻿：模板包括了 CPU、内存、磁盘、网络、温度传感器等指标（常用）。&lt;/li&gt;
&lt;li&gt;1860﻿：模板包括 CPU、内存、磁盘、网络等。这运行状况，及时发现潜在问题并进行调优。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/oqN9oVU.jpeg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;五-node_exporter常用指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-node_exporter常用指标&#34;&gt;#&lt;/a&gt; 五、node_exporter 常用指标&lt;/h4&gt;
&lt;h5 id=&#34;51-cpu与内存相关指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-cpu与内存相关指标&#34;&gt;#&lt;/a&gt; 5.1 CPU 与内存相关指标&lt;/h5&gt;
&lt;p&gt;1、CPU 负载相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_load1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;过去 1 分钟的系统平均负载。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_load5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;过去 5 分钟的系统平均负载。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_load15&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;过去 1 5 分钟的系统平均负载。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2、CPU 使用相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_cpu_seconds_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;CPU 在不同模式下使用的时间（以秒为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;3、内存相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_memory_MemTotal_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;系统总内存量（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_memory_MemAvailable_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;系统当前可用的内存量（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_memory_Cached_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;系统缓存使用的内存（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_memory_Buffers_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用于缓冲使用的内存（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;计算可用内存百分比： node_memory_MemAvailable_bytes /node_memory_MemTotal_bytes * 100&lt;/p&gt;
&lt;p&gt;计算已用内存百分比：(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) /node_memory_MemTotal_bytes *&lt;br /&gt;
100&lt;/p&gt;
&lt;p&gt;4、SWAP 相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_memory_SwapTotal_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;系统交换空间总量（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_memory_SwapFree_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;系统未被使用的交换空间（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;52-磁盘与网络相关指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-磁盘与网络相关指标&#34;&gt;#&lt;/a&gt; 5.2 磁盘与网络相关指标&lt;/h5&gt;
&lt;p&gt;1、磁盘空间相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_filesystem_size_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文件系统大小（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_filesystem_avail_bytes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文件系统可用空间（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;计算可用空间百分比： node_filesystem_avail_bytes /node_filesystem_size_bytes * 100&lt;/p&gt;
&lt;p&gt;计算已用空间百分比：(node_filesystem_size_bytes - node_filesystem_avail_bytes) /node_filesystem_size_bytes * 100&lt;/p&gt;
&lt;p&gt;2、磁盘 Inode 相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_filesystem_files&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文件系统中 inode 能使用的总数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_filesystem_files_free&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文件系统中空闲 inode 的数量。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;计算已用的 Inode 百分比： (node_filesystem_files - node_filesystem_files_free) /node_filesystem_files * 100&lt;/p&gt;
&lt;p&gt;3、磁盘 IO 吞吐量相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_disk_read_bytes_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;从给定设备读取的总字节数。（以字节为单位）。（使用 irate 可以得到每秒写入大小）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_disk_written_bytes_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向给定设备写入的总字节数。（以字节为单位）。（使用 irate 可以得到每秒写入大小）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;4、磁盘 IOPS 相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_disk_reads_completed_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;磁盘设备完成的读操作总数。（使用 irate 可以得到每秒读操作的平均数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_disk_writes_completed_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;磁盘设备完成的写操作总数。（使用 irate 可以得到每秒读操作的平均数）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5、网络核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_network_receive_bytes_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;网络接口接收到的总字节数。（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_network_transmit_bytes_total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Counter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;网络接口发送出去的总字节数。（以字节为单位）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;6、连接追踪核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_nf_conntrack_entries&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;系统正在跟踪的网络连接的数量。这包括所有类型的连接 TCP， UDP、ICMP 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_nf_conntrack_entries_limit&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;系统 conntrack 能够跟踪的网络连接的最大数量。读取的是 /proc/sys/net/netfilter/nf_conntrack_max，内核参数为：net.netfilter.nf_conntrack_max）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;计算连接追踪使用百分比： node_nf_conntrack_entries /node_nf_conntrack_entries_limit * 100&lt;/p&gt;
&lt;h5 id=&#34;53-tcp与其他相关指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-tcp与其他相关指标&#34;&gt;#&lt;/a&gt; 5.3 TCP 与其他相关指标&lt;/h5&gt;
&lt;p&gt;1、TCP 相关核心指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34; state=&#34;time_wait&#34;&gt;node_tcp_connection_states&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前已断开的 TCP 连接数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34; state=&#34;established&#34;&gt;node_tcp_connection_states&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前建立的 TCP 连接数。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2、文件描述符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_filefd_maximum&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前系统最大可用的文件描述符数量（由 fs.file-max 内核参数设定，具体读取的文件 /proc/sys/fs/file-max）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_filefd_allocated&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前系统已经分配的文件描述符的数量。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;当前文件描述符已使用百分比 ：(node_filefd_allocated /node_filefd_maximum) * 100&lt;/p&gt;
&lt;p&gt;3、系统其他指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;指标类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指标含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_time_seconds&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前系统的时间戳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;node_boot_time_seconds&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gauge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;系统最后一次启动的时间戳。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;系统自启动以来，总共运行了多少天 = (node_time_seconds - node_boot_time_seconds)/ 86400&lt;/p&gt;
</content>
        <category term="Prometheus" />
        <updated>2025-06-26T02:33:41.000Z</updated>
    </entry>
</feed>
