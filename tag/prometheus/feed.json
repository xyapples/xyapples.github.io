{
    "version": "https://jsonfeed.org/version/1",
    "title": "LinuxSre云原生 • All posts by \"prometheus\" tag",
    "description": "专注于 Linux 运维、云计算、云原⽣等技术",
    "home_page_url": "http://ixuyong.cn",
    "items": [
        {
            "id": "http://ixuyong.cn/posts/2041568856.html",
            "url": "http://ixuyong.cn/posts/2041568856.html",
            "title": "Prometheus监控Kubernetes",
            "date_published": "2025-06-30T02:33:49.000Z",
            "content_html": "<h3 id=\"prometheus监控kubernetes\"><a class=\"anchor\" href=\"#prometheus监控kubernetes\">#</a> Prometheus 监控 Kubernetes</h3>\n<h4 id=\"1-监控kubernetes环境准备\"><a class=\"anchor\" href=\"#1-监控kubernetes环境准备\">#</a> 1、监控 Kubernetes 环境准备</h4>\n<pre><code>[root@k8s-master01 ~]# kubectl get nodes\nNAME           STATUS   ROLES    AGE   VERSION\nk8s-master01   Ready    &lt;none&gt;   46d   v1.27.10\nk8s-master02   Ready    &lt;none&gt;   46d   v1.27.10\nk8s-master03   Ready    &lt;none&gt;   46d   v1.27.10\nk8s-node01     Ready    &lt;none&gt;   46d   v1.27.10\nk8s-node02     Ready    &lt;none&gt;   46d   v1.27.10\n</code></pre>\n<h4 id=\"2-部署alertmanager至kubernetes\"><a class=\"anchor\" href=\"#2-部署alertmanager至kubernetes\">#</a> 2、部署 AlertManager ⾄ Kubernetes</h4>\n<ul>\n<li>①先交付 webhook_wechat、webhook_dingding；</li>\n<li>②创建 ConfigMap，准备邮件的告警 template 模板；</li>\n<li>③创建 ConfigMap，准备告警路由相关的配置；</li>\n<li>④创建 HeadlessService；</li>\n<li>⑤创建 statefulSet，运⾏ 3 个节点 AlertManager；</li>\n<li>⑥创建 Ingress 对外提供；</li>\n</ul>\n<pre><code>#创建namespace\n[root@k8s-master01 ~]# kubectl create ns monitoring\n[root@k8s-master01 01-alert-webhook-wechat]# sed -i &quot;s#kube-prom#monitoring#g&quot; *.yaml\n</code></pre>\n<h5 id=\"21-部署webhook_wechat\"><a class=\"anchor\" href=\"#21-部署webhook_wechat\">#</a> 2.1 部署 webhook_wechat</h5>\n<p>1、编写 deployment，运⾏ webhook-wechat</p>\n<pre><code>[root@k8s-master01 01-alert-webhook-wechat]# cat 01-webhook-wechat-deploy.yaml \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webhook-wechat\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: wechat\n  template:\n    metadata:\n      labels:\n        app: wechat\n    spec:\n      containers:\n      - name: webchat\n        image: oldxu3957/webhook_wechat_oldxu:v1.0\n        args: [&quot;--port&quot;,&quot;5001&quot;]\t\t# 默认就是5001端口\n        ports:\n        - containerPort: 5001\n\n[root@k8s-master01 01-alert-webhook-wechat]# kubectl apply -f 01-webhook-wechat-deploy.yaml\n[root@k8s-master01 01-alert-webhook-wechat]# kubectl get pods -n monitoring\nNAME                              READY   STATUS    RESTARTS   AGE\nwebhook-wechat-54b5bbf677-rmr26   1/1     Running   0          16s\n</code></pre>\n<p>2、编写 Service</p>\n<pre><code>[root@k8s-master01 01-alert-webhook-wechat]# cat 02-webhook-wechat-service.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: webhook-wechat-svc\n  namespace: monitoring\nspec:\n  selector:\n    app: wechat\n  ports:\n   - port: 5001\n     targetPort: 5001\n     \n[root@k8s-master01 01-alert-webhook-wechat]# kubectl apply -f 02-webhook-wechat-service.yaml \n[root@k8s-master01 01-alert-webhook-wechat]# kubectl get svc -n monitoring\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\nwebhook-wechat-svc   ClusterIP   10.96.82.7   &lt;none&gt;        5001/TCP   13s\n</code></pre>\n<p>3、测试 webhook-wechat 是否能正常发送消息 (8e24a24d-3f48-4ea8-bbde-36ca84d857e4)</p>\n<pre><code>[root@prom-node01 ~]# curl -X POST http://10.96.82.7:5001/alert?token=8e24a24d-3f48-4ea8-bbde-36ca84d857e4 \\\n-H &quot;Content-Type: application/json&quot; \\\n-d '&#123;\n  &quot;alerts&quot;: [\n    &#123;\n      &quot;status&quot;: &quot;firing&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 down&quot;,\n        &quot;description&quot;: &quot;The instance example1 is down.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;0001-01-01T00:00:00Z&quot;\n    &#125;,\n   &#123;\n      &quot;status&quot;: &quot;resolved&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 is back up&quot;,\n        &quot;description&quot;: &quot;The instance example1 has recovered.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;2024-12-20T16:04:05Z&quot;\n    &#125;\n  ]\n&#125;'\n</code></pre>\n<h5 id=\"22-部署webhook_dingding\"><a class=\"anchor\" href=\"#22-部署webhook_dingding\">#</a> 2.2 部署 webhook_dingding</h5>\n<p>1、编写 deployment，运⾏ webhook-dingding</p>\n<pre><code>[root@k8s-master01 02-alert-webhook-dingding]# cat 01-webhook-dingding-deploy.yaml \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webhook-dingding\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: dingding\n  template:\n    metadata:\n      labels:\n        app: dingding\n    spec:\n      containers:\n      - name: dingding\n        image: oldxu3957/webhook_dingding_oldxu:v1.0\n        args: [&quot;--port&quot;,&quot;5002&quot;]\n        ports:\n        - containerPort: 5002\n\n[root@k8s-master01 02-alert-webhook-dingding]# kubectl apply -f 01-webhook-dingding-deploy.yaml\n[root@k8s-master01 02-alert-webhook-dingding]# kubectl get pods -n monitoring\nNAME                                READY   STATUS    RESTARTS   AGE\nwebhook-dingding-6d68854649-r6smd   1/1     Running   0          14s\nwebhook-wechat-54b5bbf677-rmr26     1/1     Running   0          13m\n</code></pre>\n<p>2、编写 Service</p>\n<pre><code>[root@k8s-master01 02-alert-webhook-dingding]# cat 02-webhook-dingding-service.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: webhook-dingding-svc\n  namespace: monitoring\nspec:\n  selector:\n    app: dingding\n  ports:\n  - port: 5002\n    targetPort: 5002\n\n[root@k8s-master01 02-alert-webhook-dingding]# kubectl apply -f 02-webhook-dingding-service.yaml \n[root@k8s-master01 02-alert-webhook-dingding]# kubectl get svc -n monitoring\nNAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE\nwebhook-dingding-svc   ClusterIP   10.96.241.84   &lt;none&gt;        5002/TCP   0s\nwebhook-wechat-svc     ClusterIP   10.96.82.7     &lt;none&gt;        5001/TCP   12m\n</code></pre>\n<p>3、测试 webhook-wechat 是否能正常发送消息，49989606592d7ff06ee4b83120bf5a81ed1e4c3860696dcd7e663be1c66ef43f</p>\n<pre><code>[root@k8s-master01 ~]# curl -X POST http://10.96.241.84:5002/alert?token=49989606592d7ff06ee4b83120bf5a81ed1e4c3860696dcd7e663be1c66ef43f \\\n-H &quot;Content-Type: application/json&quot; \\\n-d '&#123;\n  &quot;alerts&quot;: [\n    &#123;\n      &quot;status&quot;: &quot;firing&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 down&quot;,\n        &quot;description&quot;: &quot;The instance example1 is down.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;0001-01-01T00:00:00Z&quot;\n    &#125;,\n   &#123;\n      &quot;status&quot;: &quot;resolved&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 is back up&quot;,\n        &quot;description&quot;: &quot;The instance example1 has recovered.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;2024-12-20T16:04:05Z&quot;\n    &#125;\n  ]\n&#125;'\n</code></pre>\n<h5 id=\"23-创建alertmanager配置\"><a class=\"anchor\" href=\"#23-创建alertmanager配置\">#</a> 2.3 创建 AlertManager 配置</h5>\n<p>1、使⽤ ConfigMap 创建 AlertManager 所需的配置⽂件，名称为： alert-configs</p>\n<pre><code>[root@k8s-master01 03-alertmanager]# cat 01-alert-configs-configmap.yaml \napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: alert-configs\n  namespace: monitoring\ndata:\n  alertmanager.yml: |-\n    # 全局配置\n    global:\n      smtp_smarthost: 'smtp.qq.com:25'\n      smtp_from: '373370405@qq.com'  \t\n      smtp_auth_username: '373370405@qq.com'\n      smtp_auth_password: 'jmtpwlkuijaybhic'\n      smtp_hello: 'qq.com'\n      smtp_require_tls: false\n    \n    # 加载模板的路径\n    templates:\n      - '/etc/alertmanager/template/*.tmpl'\n    \n    # 路由规则\n    route:\n      group_by: ['alertname']\n      group_wait: 30s\n      group_interval: 30s\n      repeat_interval: 5m\n      receiver: webhook-dingding-ops\t\t# 默认发送给钉钉\n    \n      # 子路由\n      routes:\n      - match_re:\n          job: 'kube.*'\n        receiver: 'webhook-wechat'\t\t\t# 如果匹配到job=kube.*的都发送给微信\n        continue: true\n    \n      - match_re:\n          job: 'redis_exporter'\n        receiver: 'email'\t\t        \t# 如果job=domain_exporter则都发送给email\n        continue: true\n    \n    receivers:\n    - name: 'email'\n      email_configs:\n      - to: '373370405@qq.com'\n        send_resolved: true\n        html: '&#123;&#123; template \"email.html\" . &#125;&#125;'   # 发送邮件内容，调用该模板进行渲染\n\n    - name: 'webhook-wechat'\n      webhook_configs:\n      - url: 'http://webhook-wechat-svc:5001/alert?token=8e24a24d-3f48-4ea8-bbde-36ca84d857e4'\n      \n    - name: 'webhook-dingding-ops'\n      webhook_configs:\n      - url: 'http://webhook-dingding-svc:5002/alert?token=49989606592d7ff06ee4b83120bf5a81ed1e4c3860696dcd7e663be1c66ef43f'\n      \n[root@k8s-master01 03-alertmanager]# kubectl apply -f 01-alert-configs-configmap.yaml\n[root@k8s-master01 03-alertmanager]# kubectl get cm -n monitoring\nNAME               DATA   AGE\nalert-configs      1      25s\nalert-template     1      19s\nkube-root-ca.crt   1      27m\n</code></pre>\n<p>2、使⽤ configmap 创建 AlertManager 邮件所依赖的模板⽂件，名称为： alert-template</p>\n<pre><code>[root@k8s-master01 03-alertmanager]# cat 02-alert-template-configmap.yaml \napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: alert-template\n  namespace: monitoring\ndata:\n  email.tmpl: |-\n    &#123;&#123; define \"email.html\" &#125;&#125;\n    &#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;\n    &#123;&#123; range .Alerts &#125;&#125;\n    &lt;h2 style=&quot;color: red;&quot;&gt;@告警通知&lt;/h2&gt;\n    告警程序: AlertManager &lt;br&gt;\n    告警级别: &#123;&#123; .Labels.severity &#125;&#125; &lt;br&gt;\n    告警类型: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;\n    故障主机: &#123;&#123; .Labels.instance &#125;&#125; &lt;br&gt;\n    告警主题: &#123;&#123; .Annotations.summary &#125;&#125; &lt;br&gt;\n    告警详情: &#123;&#123; .Annotations.description &#125;&#125; &lt;br&gt;\n    触发时间: &#123;&#123; (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" &#125;&#125; &lt;br&gt;\n    &#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;\n    \n    &#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;\n    &#123;&#123; range .Alerts &#125;&#125;\n    &lt;h2 style=&quot;color: green;&quot;&gt;@告警恢复&lt;/h2&gt;\n    告警程序: AlertManager &lt;br&gt;\n    告警级别: &#123;&#123; .Labels.severity &#125;&#125; &lt;br&gt;\n    告警类型: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;\n    告警主机: &#123;&#123; .Labels.instance &#125;&#125; &lt;br&gt;\n    告警主题: &#123;&#123; .Annotations.summary &#125;&#125; &lt;br&gt;\n    告警详情: &#123;&#123; .Annotations.description &#125;&#125; &lt;br&gt;\n    触发时间: &#123;&#123; (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" &#125;&#125; &lt;br&gt;\n    恢复时间: &#123;&#123; (.EndsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" &#125;&#125; &lt;br&gt;\n    &#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;\n    &#123;&#123; end &#125;&#125;\n    \n[root@k8s-master01 03-alertmanager]# kubectl apply -f 02-alert-template-configmap.yaml \n[root@k8s-master01 03-alertmanager]# kubectl get cm -n monitoring\nNAME               DATA   AGE\nalert-configs      1      25s\nalert-template     1      19s\nkube-root-ca.crt   1      27m\n</code></pre>\n<h5 id=\"24-创建headlessservice\"><a class=\"anchor\" href=\"#24-创建headlessservice\">#</a> 2.4 创建 HeadLessService</h5>\n<pre><code>[root@k8s-master01 03-alertmanager]# cat 03-alertmanager-headlessService.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: alertmanager-svc\n  namespace: monitoring\nspec:\n  clusterIP: &quot;None&quot;\n  selector:\n    app: alert\n  ports:\n  - name: web\n    port: 9093\n    targetPort: 9093\n  - name: cluster\n    port: 9094\n    targetPort: 9094\n[root@k8s-master01 03-alertmanager]# kubectl apply -f 03-alertmanager-headlessService.yaml \n[root@k8s-master01 03-alertmanager]# kubectl get svc -n monitoring\nNAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)             AGE\nalertmanager-svc       ClusterIP   None           &lt;none&gt;        9093/TCP,9094/TCP   6s\nwebhook-dingding-svc   ClusterIP   10.96.241.84   &lt;none&gt;        5002/TCP            12m\nwebhook-wechat-svc     ClusterIP   10.96.82.7     &lt;none&gt;        5001/TCP            24m\n</code></pre>\n<h5 id=\"25-部署alertmanager服务\"><a class=\"anchor\" href=\"#25-部署alertmanager服务\">#</a> 2.5 部署 AlertManager 服务</h5>\n<p>使⽤ statefulSet 编写 AlertManager 的⾼可⽤清单⽂件</p>\n<ul>\n<li>1、定义 Alertmanager 实例的启动命令，包含了对应的 “配置⽂件路径 “、“数据存储路径” 以及 “Gossip 集群通信” 相关的参数。</li>\n<li>2、定义 AlertManager 实例挂载 “邮件模板” 的 ConfigMap 资源，以及 AlertManager 主配置⽂件的 ConfigMap 资源。</li>\n<li>3、Alertmanager 的每个实例，都需要使⽤ PVC 模板来提供数据持久化；</li>\n<li>4、AlertManager 在启动时可以采⽤并⾏的⽅式，因为集群之间没有先后依赖关系；</li>\n</ul>\n<pre><code>[root@k8s-master01 03-alertmanager]# cat 04-alertmanager-statefulset.yaml \napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: alertmanager\n  namespace: monitoring\nspec:\n  serviceName: &quot;alertmanager-svc&quot;\n  podManagementPolicy: &quot;Parallel&quot;  #采用并行方式\n  replicas: 3\n  selector:\n    matchLabels:\n      app: alert\n  template:\n    metadata:\n      labels:\n        app: alert\n    spec:\n      volumes:\n      - name: alert-cfg\n        configMap:\n          name: alert-configs\n      - name: alert-temp-cfg\n        configMap:\n          name: alert-template\n      containers:\n      - name: alertmanager\n        image: prom/alertmanager:v0.26.0\n        args:\n        - &quot;--web.listen-address=:9093&quot;\n        - &quot;--cluster.listen-address=0.0.0.0:9094&quot;\n        - &quot;--cluster.peer=alertmanager-0.alertmanager-svc:9094&quot;\n        - &quot;--cluster.peer=alertmanager-1.alertmanager-svc:9094&quot;\n        - &quot;--cluster.peer=alertmanager-2.alertmanager-svc:9094&quot;\n        - &quot;--cluster.peer-timeout=60s&quot;\n        - &quot;--config.file=/etc/alertmanager/alertmanager.yml&quot;\n        - &quot;--storage.path=/etc/alertmanager/data&quot;\n        - &quot;--data.retention=120h&quot;\n        volumeMounts:\n        - name: alert-cfg\n          mountPath: /etc/alertmanager/\n        - name: alert-temp-cfg\n          mountPath: /etc/alertmanager/template\n        - name: alert-data\n          mountPath: /etc/alertmanager/data\n        ports:\n        - name: web\n          containerPort: 9093\n        - name: cluster\n          containerPort: 9094\n        resources:\n          requests:\n            cpu: 200m\n            memory: 200Mi\n          limits:\n            cpu: 300m\n            memory: 300Mi\n\n  volumeClaimTemplates:\n    - metadata:\n        name: alert-data\n      spec:\n        accessModes: [&quot;ReadWriteMany&quot;]\n        storageClassName: &quot;nfs-storage&quot;\n        resources:\n          requests:\n            storage: 3Gi\n\n[root@k8s-master01 03-alertmanager]# kubectl apply -f 04-alertmanager-statefulset.yaml\n[root@k8s-master01 03-alertmanager]# kubectl get pods -n monitoring\nNAME                                READY   STATUS    RESTARTS   AGE\nalertmanager-0                      1/1     Running   0          97s\nalertmanager-1                      1/1     Running   0          97s\nalertmanager-2                      1/1     Running   0          97s\nwebhook-dingding-6d68854649-r6smd   1/1     Running   0          19m\nwebhook-wechat-54b5bbf677-rmr26     1/1     Running   0          32m\n</code></pre>\n<h5 id=\"26-发布alertmanager服务\"><a class=\"anchor\" href=\"#26-发布alertmanager服务\">#</a> 2.6 发布 AlertManager 服务</h5>\n<p>1、编写 Ingress 资源清单</p>\n<pre><code>[root@k8s-master01 03-alertmanager]# cat 05-alertmanager-ingress.yaml \napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: alert-ingress\n  namespace: monitoring\nspec:\n  ingressClassName: &quot;nginx&quot;\n  rules:\n  - host: &quot;k8s-alert.hmallleasing.com&quot;\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: alertmanager-svc\n            port:\n              number: 9093\n\n[root@k8s-master01 03-alertmanager]# kubectl apply -f 05-alertmanager-ingress.yaml \n[root@k8s-master01 03-alertmanager]# kubectl get ingress -n monitoring\nNAME            CLASS   HOSTS                        ADDRESS                                        PORTS   AGE\nalert-ingress   nginx   k8s-alert.hmallleasing.com   192.168.40.103,192.168.40.104,192.168.40.105   80      21s\n</code></pre>\n<p>2、访问 AlertManager 的⻚⾯</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240310213846950.png\" alt=\"image-20240310213846950\" /></p>\n<h5 id=\"27-测试alertmanager告警\"><a class=\"anchor\" href=\"#27-测试alertmanager告警\">#</a> 2.7 测试 AlertManager 告警</h5>\n<p>1、模拟故障测试 AlertManager 告警是否能正常发送</p>\n<pre><code>[root@k8s-master01 ~]# kubectl run tools --image=uhub.service.ucloud.cn/oldxu/tools:v1.0\n[root@k8s-master01 ~]# kubectl exec -it tools -- /bin/bash\n\n# 路由给钉钉\n/alert_test_oldxu --alertURL=&quot;http://alertmanager-svc.monitoring.svc.cluster.local:9093/api/v1/alerts&quot; --label=&quot;alertname=CPU故障,instance=dingding,severity=critical,job=node_exporter&quot;\n\n# 路由给微信\n/alert_test_oldxu --alertURL=&quot;http://alertmanager-svc.monitoring.svc.cluster.local:9093/api/v1/alerts&quot; --label=&quot;alertname=节点故障,instance=wechat,severity=critical,job=kube-nodes&quot;\n\n# 路由给邮件\n/alert_test_oldxu --alertURL=&quot;http://alertmanager-svc.monitoring.svc.cluster.local:9093/api/v1/alerts&quot; --label=&quot;alertname=redis故障,instance=email,severity=critical,job=redis_exporter&quot;\n</code></pre>\n<h4 id=\"3-部署prometheus至kubernetes\"><a class=\"anchor\" href=\"#3-部署prometheus至kubernetes\">#</a> 3、部署 Prometheus ⾄ Kubernetes</h4>\n<ul>\n<li>1、创建 ConfigMap，准备 Prometheus 配置⽂件，定义 AlertManager 的地址、以及 Rules 规则⽂件的路径等</li>\n<li>2、创建 ConfigMap，准备 Prometheus 告警相关的规则⽂件；</li>\n<li>3、创建 RBAC 权限，我们需要使⽤ Prometheus 访问 APIServer 来抓取各种资源的指标，这意味着 Prometheus 的 Pod 需要相应的权限来访问 Kubernetes API</li>\n<li>4、创建 HeadlessService；</li>\n<li>5、创建 statefulSet，运⾏单节点的 Prometheus（⽣产环境不建议使⽤ NFS 作为后端存储）；</li>\n<li>6、创建 Ingress，对外提供 Prometheus</li>\n</ul>\n<h5 id=\"31-创建prometheus配置文件\"><a class=\"anchor\" href=\"#31-创建prometheus配置文件\">#</a> 3.1 创建 Prometheus 配置⽂件</h5>\n<p>1、编辑 Prometheus 配置⽂件，先使⽤最⼩化配置。（后期监控其他组件在进⾏修改或增加。） configMap 资源名称： prom-configs</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n[root@k8s-master01 04-prometheus]# kubectl get cm -n monitoring\nNAME               DATA   AGE\nalert-configs      1      25m\nalert-template     1      25m\nkube-root-ca.crt   1      52m\nprom-configs       1      16s\n</code></pre>\n<h5 id=\"32-创建prometheus告警规则\"><a class=\"anchor\" href=\"#32-创建prometheus告警规则\">#</a> 3.2 创建 Prometheus 告警规则</h5>\n<p>1、编辑 PrometheusRules 告警规则⽂件 以 node、pods、jvm、redis、blackbox 等告警规则⽂件为例，后续根据情况在添加， configMap 资源名称： prom-rules</p>\n<p><em>注意：这些 rules 是基于此前节点监控的规则，然后结合 K8S 的标签进⾏了重新修订。</em></p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 02-prom-rules-configmap.yaml \napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-rules\n  namespace: monitoring\ndata:\n  node_rules.yml: |-\n    groups:\n    - name: CPU告警规则\n      rules:\n      - alert: 节点CPU使用率超过80%\n        expr: ( 1 - avg(irate(node_cpu_seconds_total&#123;mode=&quot;idle&quot;&#125;[1m])) by (instance,job) ) * 100 &gt; 80\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;主机CPU利用率过高，实例：&#123;&#123; $labels.instance &#125;&#125; , &#123;&#123; $labels.job &#125;&#125;&quot;\n          description: &quot;该实例的CPU利用率低于20%，当前利用率：&#123;&#123; $value &#125;&#125;%。可能存在CPU资源浪费情况。&quot;\n      - alert: CPU饱和度过高\n        expr: sum(node_load1) by (instance,job) / (count(node_cpu_seconds_total&#123;mode=&quot;idle&quot;&#125;) by (instance,job) * 2) * 100 &gt; 80\n        for: 2m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;CPU饱和度过高，实例：&#123;&#123; $labels.instance &#125;&#125; , &#123;&#123; $labels.job &#125;&#125;&quot;\n          description: &quot;该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：&#123;&#123; $value &#125;&#125;%。需要立即检查系统负载情况。&quot;\n    \n      - alert: 主机内存不足\n        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)  / node_memory_MemTotal_bytes * 100 &gt; 80\n        for: 2m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;主机内存使用率较高, 实例:&#123;&#123; $labels.instance &#125;&#125;, 任务:&#123;&#123; $labels.job &#125;&#125;&quot;\n          description: &quot;该实例的内存使用率持续2分钟高于80%，当前利用率：&#123;&#123; $value &#125;&#125;%&quot;\n    \n    \n      - alert: 内存饱和度高\n        expr: ( 1 - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes ) * 100 &gt; 30\n        for: 2m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;主机内存内存饱和度高, 实例:&#123;&#123; $labels.instance &#125;&#125;, 任务:&#123;&#123; $labels.job &#125;&#125;&quot;\n          description: &quot;SWAP内存使用率已连续2分钟超过30%，表明内存饱和度过高，当前SWAP使用率为：&#123;&#123; $value &#125;&#125;%。&quot;\n    \n\n      - alert: 磁盘空间告急\n        expr: ( node_filesystem_size_bytes&#123;device!=&quot;tmpfs&quot;&#125; - node_filesystem_avail_bytes&#123;device!=&quot;tmpfs&quot;&#125; ) / node_filesystem_size_bytes&#123;device!=&quot;tmpfs&quot;&#125; * 100 &gt; 70\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 磁盘&#123;&#123; $labels.mountpoint &#125;&#125; 分区空间不足&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的磁盘空间使用率已超过 70%，当前使用率为 &#123;&#123; $value &#125;&#125;%，请及时处理。&quot;\n    \n    \n      - alert: 磁盘Inode空间告急\n        expr: (node_filesystem_files&#123;device!=&quot;tmpfs&quot;&#125; - node_filesystem_files_free&#123;device!=&quot;tmpfs&quot;&#125; ) / node_filesystem_files&#123;device!=&quot;tmpfs&quot;&#125; * 100 &gt; 70\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 磁盘空间不足&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的磁盘Inode空间使用率已超过 70%，当前使用率为 &#123;&#123; $value &#125;&#125;%，请及时处理。&quot;\n    \n      - alert: 磁盘IOPS写入较高\n        #expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 &gt;60\n        #round函数可以对值进行四舍五入\n        expr: round(max(irate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100) &gt; 60\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; IOPS每秒写入次数超过120次/s&quot;\n          description: \n            目前磁盘IOPS写入饱和度是 &#123;&#123; $value &#125;&#125;%\n            目前磁盘IOPS每秒写入最大 &#123;&#123; printf `max(rate(node_disk_writes_completed_total&#123;instance=\"%s\",job=\"%s\"&#125;[1m]))` $labels.instance $labels.job | query | first | value | printf \"%.2f\" &#125;&#125; 次/s\n    \n      - alert: 磁盘IOPS读取较高\n        expr: round(max(irate(node_disk_reads_completed_total[1m])) by (instance,job) / 120 * 100) &gt; 60\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; IOPS每秒读取次数超过120次/s&quot;\n          description: \n            目前磁盘IOPS读取饱和度是 &#123;&#123; $value &#125;&#125;%\n            目前磁盘IOPS每秒读取最大 &#123;&#123; printf `max(rate(node_disk_reads_completed_total&#123;instance=\"%s\",job=\"%s\"&#125;[1m]))` $labels.instance $labels.job | query | first | value | printf \"%.2f\" &#125;&#125; 次/s\n    \n    \n      - alert: 磁盘IO写入吞吐较高\n        expr: round(max(rate(node_disk_written_bytes_total[1m])) by (instance,job) / 1024 /1024 / 30 * 100) &gt; 60\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 磁盘IO写入每秒超过最大30MB/s&quot;\n          description: \n            目前磁盘IO写入吞吐量的饱和度是 &#123;&#123; $value &#125;&#125;%。\n            目前磁盘IO写入吞吐量每秒最大是 &#123;&#123; printf `max(rate(node_disk_written_bytes_total&#123;instance=\"%s\",job=\"%s\"&#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf \"%.2f\" &#125;&#125;MB/s\n    \n      - alert: 磁盘IO读取吞吐较高\n        expr: round(max(rate(node_disk_read_bytes_total[1m])) by (instance,job) / 1024 /1024 /30 * 100 ) &gt; 60\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 磁盘IO读取每秒超过最大30MB/s&quot;\n          description:\n            目前磁盘IO读取吞吐量的饱和度是 &#123;&#123; $value &#125;&#125;%。\n            目前磁盘IO读取吞吐量每秒最大是 &#123;&#123; printf `max(rate(node_disk_read_bytes_total&#123;instance=\"%s\",job=\"%s\"&#125;[1m])) /1024/1024` $labels.instance $labels.job | query | first | value | printf \"%.2f\" &#125;&#125;MB/s\n    \n    \n      - alert: 网络下载带宽异常\n        expr: max(irate(node_network_receive_bytes_total[1m]) * 8 / 1024 / 1024) by (instance,job,device) / 50 * 100  &gt;= 80\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的 &#123;&#123; $labels.device &#125;&#125;接口下载流量已经超过公司实际50Mbps&quot;\n          description: \n            目前下载带宽已经达到 &#123;&#123; printf `(irate(node_network_receive_bytes_total&#123;instance=\"%s\",job=\"%s\",device=\"%s\"&#125;[1m]) * 8 / 1024 / 1024)` $labels.instance $labels.job $labels.device | query | first | value | printf \"%.2f\" &#125;&#125; Mbps/s\n            目前下载带宽使用率在 &#123;&#123; $value &#125;&#125;%\n    \n      - alert: 网络上传带宽异常\n        expr: max(irate(node_network_transmit_bytes_total[1m]) * 8 / 1024 / 1024) by (instance,job,device) / 50 * 100 &gt;= 80\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的 &#123;&#123; $labels.device &#125;&#125;接口上传流量已经超过公司实际50Mbps&quot;\n          description: \n            目前上传带宽已经达到 &#123;&#123; printf `(irate(node_network_transmit_bytes_total&#123;instance=\"%s\",job=\"%s\",device=\"%s\"&#125;[1m]) * 8 / 1024 / 1024)` $labels.instance $labels.job $labels.device | query | first | value | printf \"%.2f\" &#125;&#125; Mbps/s\n            目前上传带宽使用率在 &#123;&#123; $value &#125;&#125;%\n    \n    \n      - alert: 网络TCP连接数异常\n        expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit * 100 &gt; 80\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的 tcp连接数超过80%&quot;\n          description: \n            目前TCP连接数是 &#123;&#123; printf `node_nf_conntrack_entries&#123;instance=\"%s\",job=\"%s\"&#125;` $labels.instance $labels.job | query | first | value | printf \"%.2f\" &#125;&#125;\n            目前TCP连接使用率是 &#123;&#123; $value &#125;&#125;%\n    \n      - alert: 节点处于Down状态\n        expr: up == 0\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例:&#123;&#123; $labels.instance &#125;&#125; 处于Down状态&quot;\n          description: &quot;&#123;&#123; $labels.instance &#125;&#125; 节点已连接超时&quot;\n\n  kube_pods_rules.yml: |-\n    groups:\n    - name: Pods的告警规则文件\n      rules:\n      - alert: Pod中容器的CPU利用率高\n        expr: sum (rate(container_cpu_usage_seconds_total&#123;image!=&quot;&quot;&#125;[5m])) by (instance,job,pod,namespace) * 100 &gt; 80\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod CPU利用率高&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的CPU利用率当前为 &#123;&#123; $value &#125;&#125;%，超过了80%的阈值。&quot;\n    \n      - alert: Pod中容器内存利用率高\n        expr: |\n          sum(container_memory_working_set_bytes&#123;name!=&quot;&quot;&#125;) by (instance,job,pod,namespace)\n          /\n          sum(container_spec_memory_limit_bytes&#123;name!=&quot;&quot;&#125; &gt; 0) by (instance,job,pod,namespace) * 100 &gt; 80\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod内存利用率高&quot;\n          description: 在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的内存最大限制是 &#123;&#123; printf `sum (container_spec_memory_limit_bytes&#123;namespace=\"%s\",pod=\"%s\"&#125; > 0 ) /1024 /1024` $labels.namespace $labels.pod | query | first | value &#125;&#125;MB , 目前利用率已达&#123;&#123; $value &#125;&#125;%，超过限制的80%。\n\n      - alert: Pod容器网络发送速率过高\n        expr: sum(rate(container_network_transmit_bytes_total&#123;image!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) * 8 /1024 /1024 &gt; 50\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod网络发送速率过高&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的网络发送速率达到&#123;&#123; $value &#125;&#125;Mbps，超过了50Mbps的阈值。&quot;\n    \n      - alert: Pod容器网络接收速率过高\n        expr: sum(rate(container_network_receive_bytes_total&#123;image!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) * 8 /1024 /1024 &gt; 50\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod网络发送速率过高&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的网络接收速率达到&#123;&#123; $value &#125;&#125;Mbps，超过了50Mbps的阈值。&quot;\n    \n      - alert: Pod容器磁盘写入吞吐量过大\n        expr: sum (rate(container_fs_writes_bytes_total&#123;name!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) /1024 /1024 &gt; 20\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod磁盘写入吞吐量过大&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的磁盘写入吞吐量达到&#123;&#123; $value &#125;&#125;MB/s，超过了20MB/s的阈值。&quot;\n    \n      - alert: Pod容器磁盘读取吞吐量过大\n        expr: sum (rate(container_fs_reads_bytes_total&#123;name!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) /1024 /1024 &gt; 20\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod磁盘读取吞吐量过大&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的磁盘读取吞吐量达到&#123;&#123; $value &#125;&#125;MB/s，超过了20MB/s的阈值。&quot;\n\n\n  jvm_rules.yml: |-\n    groups:\n    - name: &quot;JVM告警规则&quot;\n      rules:\n      - alert: JVM堆内存使用率过高\n        expr: jvm_memory_bytes_used&#123;area=&quot;heap&quot;,&#125; / jvm_memory_bytes_max&#123;area=&quot;heap&quot;,&#125; * 100 &gt; 90\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 实例的JVM 堆内存使用率超过80%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间下的 '&#123;&#123; $labels.pod_name &#125;&#125;' PodJVM堆内存使用率超过80%, 当前使用率是 &#123;&#123; $value &#125;&#125;%&quot;\n\n      - alert: JVMGC时间过长\n        expr: sum (rate(jvm_gc_collection_seconds_sum[5m]) / rate(jvm_gc_collection_seconds_count[5m])) by (instance,job,gc,namespace,pod_name) &gt; 1\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 实例的JVM  GC时间超过了1秒。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间下的 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod使用 &#123;&#123; $labels.gc &#125;&#125; GC垃圾回收算法时间超过1s，当前值 &#123;&#123; $value &#125;&#125;秒&quot;\n\n      - alert: JVM死锁线程过多\n        expr: min_over_time(jvm_threads_deadlocked[5m]) &gt; 0\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;JVM检测到'&#123;&#123; $labels.instance &#125;&#125;' 实例有死锁线程&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间下的 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod，在过去5分钟检测到死锁线程, 当前死锁线程数是 &#123;&#123; $value &#125;&#125;。&quot;\n\n\n  redis_rules.yml: |-\n    groups:\n    - name: redis告警规则\n      rules:\n      - alert: Redis实例宕机\n        expr: redis_up == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例宕机&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod在过去5分钟内无法连接。&quot;\n\n      - alert: Redis连接数过高\n        expr: redis_connected_clients / redis_config_maxclients * 100 &gt; 80\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例连接数超过80%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod当前连接数占最大连接数的比率超过80%。当前比率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis连接被拒绝\n        expr: increase(redis_rejected_connections_total[1h]) &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例有连接被拒绝&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod在过去1小时内有连接被拒绝。当前被拒绝的连接数: &#123;&#123; $value &#125;&#125;。&quot;\n\n      - alert: Redis内存使用率过高\n        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 &gt; 80\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例内存使用率超过80%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod的内存使用率超过配置的最大内存值的80%。当前内存使用率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis缓存命中率低\n        expr: |\n          irate(redis_keyspace_hits_total[5m])\n          / \n          (irate(redis_keyspace_hits_total[5m]) + irate(redis_keyspace_misses_total[5m])) * 100 &lt; 90\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例缓存命中率低于90%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod最近5分钟内的缓存命中率低于90%。当前命中率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis即将过期的Key数量过多\n        expr: |\n          sum(redis_db_keys_expiring) by (instance, job, namespace,pod_name,db)\n          / \n          sum(redis_db_keys) by (instance, job, namespace,pod_name,db) * 100 &gt; 50\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例中的 '&#123;&#123; $labels.db &#125;&#125;' 数据库有大量即将过期的Key&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod中的 '&#123;&#123; $labels.db &#125;&#125;' 数据库有超过50%的Key即将过期。当前过期比率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: RedisRDB备份失败\n        expr: redis_rdb_last_bgsave_status == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例 RDB备份失败&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod最近的RDB备份失败。&quot;\n\n      - alert: RedisRDB备份时间过长\n        expr: redis_rdb_last_bgsave_duration_sec &gt; 3 and redis_rdb_last_bgsave_status == 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例 RDB备份成功但耗时超过3秒&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod, RDB备份成功但耗时超过了3秒。持续时间: &#123;&#123; $value &#125;&#125;秒。&quot;\n\n      - alert: RedisRDB备份过期\n        expr: (time() - redis_rdb_last_save_timestamp_seconds) &gt; 36000\n        for: 24h\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例超过10小时未进行RDB备份&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod已超过10小时没有生成新的RDB备份文件。&quot;\n\n      - alert: Redis命令拒绝率过高\n        expr: |\n          sum(irate(redis_commands_rejected_calls_total[5m])) by (instance,job,namespace,pod_name)\n          / \n          sum(irate(redis_commands_total[5m])) by (instance,job,namespace,pod_name) * 100 &gt; 25\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例命令拒绝率超过25%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod的命令拒绝率超过了25%。当前拒绝率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis命令平均响应时间过长\n        expr: |\n          sum(rate(redis_commands_duration_seconds_total[5m])) by (instance,job,namespace,pod_name)\n          / \n          sum(rate(redis_commands_processed_total[5m])) by (instance,job,namespace,pod_name) &gt; 0.250\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例命令平均响应时间超过250ms&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod的执行命令平均响应时间超过了250毫秒。当前平均响应时间: &#123;&#123; $value &#125;&#125;秒。&quot;\n\n\n  blackbox_tcp_rules.yml: |-\n    groups:\n    - name: Blackbox_tcp告警规则文件\n      rules:\n      - alert: Service TCP探测失败\n        expr: sum(probe_success&#123;job=~&quot;.*tcp&quot;&#125;) by (instance,job,namespace,service_name) == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;探测 '&#123;&#123; $labels.instance &#125;&#125;' Service 的TCP接口探测失败。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的 '&#123;&#123; $labels.service_name &#125;&#125;' Service资源 '&#123;&#123; $labels.instance &#125;&#125;' 地址探测失败。&quot;\n    \n      - alert: Service TCP请求的响应时间过长\n        expr: probe_duration_seconds&#123;job=~&quot;.*tcp&quot;&#125; &gt; 0.500\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;探测 '&#123;&#123; $labels.instance &#125;&#125;' Service 的TCP响应时间超过了500毫秒。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的 '&#123;&#123; $labels.service_name &#125;&#125;' Service资源 '&#123;&#123; $labels.instance &#125;&#125;' 当前响应时长为 &#123;&#123; $value &#125;&#125; 秒。&quot;\n\n      - alert: Service的DNS解析响应时间过长\n        expr: probe_dns_lookup_time_seconds&#123;job=~&quot;.*tcp&quot;&#125; &gt; 0.500\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;探测 '&#123;&#123; $labels.instance &#125;&#125;' Service 的DNS解析响应时间超过了500毫秒。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的 '&#123;&#123; $labels.service_name &#125;&#125;' Service资源 '&#123;&#123; $labels.instance &#125;&#125;' 当前响应时长为 &#123;&#123; $value &#125;&#125; 秒。&quot;\t\n\n  blackbox_http_rules.yml: |-\n    groups:\n    - name: Blackbox_http告警规则文件\n      rules:\n      - alert: 站点平均请求过长\n        expr: sum (avg_over_time(probe_http_duration_seconds[1m])) by (instance,job,namespace,ingress_name) &gt; 3\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名整体请求时间超过了3秒。&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名最近1分钟的平均请求时间超过3秒。当前平均请求时间：&#123;&#123; $value &#125;&#125;秒。&quot;\n\n      - alert: 站点阶段耗时过长\n        expr: |\n          (\n            probe_http_duration_seconds&#123;phase=&quot;connect&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;processing&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;resolve&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;tls&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;transfer&quot;&#125; &gt; 1\n          )\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名在 '&#123;&#123; $labels.phase &#125;&#125;' 阶段耗时过长&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名在阶段 '&#123;&#123; $labels.phase &#125;&#125;' 的耗时超过0.5秒。当前耗时：&#123;&#123; $value &#125;&#125;秒。&quot;\n\n      - alert: 站点响应状态码异常\n        expr: probe_http_status_code &lt;= 199 or probe_http_status_code &gt;= 400\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名返回异常状态码&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名返回的状态码为 &#123;&#123; $value &#125;&#125;，表明请求可能存在问题。&quot;\n    \n      - alert: 重定向次数过多\n        expr: probe_http_redirects &gt; 5\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名重定向次数过多&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名在最近的探测中重定向次数超过5次。当前次数：&#123;&#123; $value &#125;&#125;次。&quot;\n\n      - alert: 证书即将过期&lt;30\n        expr: (probe_ssl_earliest_cert_expiry - time()) /86400 &lt; 30\n        for: 24h\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书即将过期&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书将在 &#123;&#123; $value &#125;&#125; 天内过期。&quot;\n    \n      - alert: 证书即将过期&lt;7\n        expr: (probe_ssl_earliest_cert_expiry - time()) /86400 &lt; 7\n        for: 24h\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;&#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书即将过期&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 &#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书将在 &#123;&#123; $value &#125;&#125; 天内过期。&quot;\n</code></pre>\n<p>2、创建 ConfigMap</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl apply -f 02-prom-rules-configmap.yaml \n[root@k8s-master01 04-prometheus]# kubectl get cm -n monitoring\nNAME               DATA   AGE\nalert-configs      1      34m\nalert-template     1      34m\nkube-root-ca.crt   1      61m\nprom-configs       1      9m2s\nprom-rules         6      13s\n</code></pre>\n<h5 id=\"33-创建prometheusrbac权限\"><a class=\"anchor\" href=\"#33-创建prometheusrbac权限\">#</a> 3.3 创建 PrometheusRBAC 权限</h5>\n<p>1、创建⼀个 ServiceAccount ⽤户，名称为 prometheus-sa</p>\n<p>2、创建 ClusterRole，设定对应的权限规则，名称为 Prometheus-role 。</p>\n<p>3、创建 ClusterRoleBinding，名称为 prometheus-rolebinding ，将 Prometheus-role ⻆⾊的权限关联⾄ kube-prom</p>\n<p>名称空间 prometheus-sa ⽤户。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 03-prometheus-rbac.yaml \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus-sa\n  namespace: monitoring\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus-role\nrules:\n  - apiGroups:\n      - &quot;&quot;\n    resources:\n      - nodes\n      - services\n      - endpoints\n      - pods\n      - nodes/proxy\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - &quot;networking.k8s.io&quot;\n    resources:\n      - ingresses\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - &quot;&quot;\n    resources:\n      - configmaps\n      - nodes/metrics\n    verbs:\n      - get\n  - nonResourceURLs:\n      - /metrics\n    verbs:\n      - get\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus-rolebinding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus-role\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus-sa\n    namespace: monitoring\n    \n[root@k8s-master01 04-prometheus]# kubectl apply -f 03-prometheus-rbac.yaml \nserviceaccount/prometheus-sa created\nclusterrole.rbac.authorization.k8s.io/prometheus-role created\nclusterrolebinding.rbac.authorization.k8s.io/prometheus-rolebinding created\n</code></pre>\n<h5 id=\"34-创建headlesssevice\"><a class=\"anchor\" href=\"#34-创建headlesssevice\">#</a> 3.4 创建 headlessSevice</h5>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 04-prometheus-headlessService.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus-svc\n  namespace: monitoring\nspec:\n  clusterIP: &quot;None&quot;\n  selector:\n    app: prometheus\n  ports:\n  - name: http\n    port: 9090\n    targetPort: 9090\n    \n[root@k8s-master01 04-prometheus]# kubectl apply -f 04-prometheus-headlessService.yaml \n[root@k8s-master01 04-prometheus]# kubectl get svc -n monitoring\nNAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)             AGE\nalertmanager-svc       ClusterIP   None           &lt;none&gt;        9093/TCP,9094/TCP   37m\nprometheus-svc         ClusterIP   None           &lt;none&gt;        9090/TCP            16s\nwebhook-dingding-svc   ClusterIP   10.96.241.84   &lt;none&gt;        5002/TCP            49m\nwebhook-wechat-svc     ClusterIP   10.96.82.7     &lt;none&gt;        5001/TCP            62m\n</code></pre>\n<h5 id=\"35-部署prometheus服务\"><a class=\"anchor\" href=\"#35-部署prometheus服务\">#</a> 3.5 部署 Prometheus 服务</h5>\n<p>使⽤ statefulSet 编写 Prometheus 清单⽂件</p>\n<ul>\n<li>1、定义 Prometheus 所关联的 ServiceAccount 账户，确保有权限能访问 APIServer</li>\n<li>1、定义 Prometheus 实例的启动命令，包含了对应的 “配置⽂件路径 “、“数据存储路径” 相关的参数。</li>\n<li>2、定义 Prometheus 实例挂载 “配置⽂件” 的 ConfigMap 资源，以及 rules 告警规则⽂件的 ConfigMap 资源。</li>\n<li>3、Prometheus 使⽤ PVC 模板来提供数据持久化；</li>\n</ul>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 05-prometheus-statefulset.yaml \napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  serviceName: &quot;prometheus-svc&quot;\n  replicas: 2\n  selector:\n    matchLabels:\n      app: prometheus\n  template:\n    metadata:\n      labels:\n        app: prometheus\n    spec:\n      serviceAccountName: &quot;prometheus-sa&quot;\t\t# sa账号\n      volumes:\n      - name: prom-cfg\n        configMap:\n          name: prom-configs\n      - name: prom-rules-cfg\n        configMap:\n          name: prom-rules\n      containers:\n      - name: prom\n        image: prom/prometheus:v2.49.1\n        args:\n        - &quot;--config.file=/etc/prometheus/prometheus.yml&quot;\n        - &quot;--storage.tsdb.path=/etc/prometheus/data&quot;\n        - &quot;--storage.tsdb.retention.time=10d&quot;\n        - &quot;--web.enable-lifecycle&quot;\n        volumeMounts:\n        - name: prom-cfg\n          mountPath: /etc/prometheus\n        - name: prom-rules-cfg\n          mountPath: /etc/prometheus/rules\n        - name: prom-data\n          mountPath: /etc/prometheus/data\n        ports:\n        - containerPort: 9090\n        resources:\n          requests:\n            cpu: 1000m\n            memory: 1024Mi\n          limits:\n            cpu: 1000m\n            memory: 1024Mi\n  volumeClaimTemplates:\n    - metadata:\n        name: prom-data\n      spec:\n        accessModes: [&quot;ReadWriteMany&quot;]\n        storageClassName: &quot;nfs-storage&quot;\n        resources:\n          requests:\n            storage: 3Gi\n            \n[root@k8s-master01 04-prometheus]# kubectl apply -f 05-prometheus-statefulset.yaml\n[root@k8s-master01 04-prometheus]# kubectl get pods -n monitoring\nNAME                                READY   STATUS    RESTARTS   AGE\nalertmanager-0                      1/1     Running   0          38m\nalertmanager-1                      1/1     Running   0          38m\nalertmanager-2                      1/1     Running   0          38m\nprometheus-0                        1/1     Running   0          2m35s\nprometheus-1                        1/1     Running   0          92s\nwebhook-dingding-6d68854649-r6smd   1/1     Running   0          56m\nwebhook-wechat-54b5bbf677-rmr26     1/1     Running   0          69m\n\n</code></pre>\n<h5 id=\"36-发布prometheus服务\"><a class=\"anchor\" href=\"#36-发布prometheus服务\">#</a> 3.6 发布 Prometheus 服务</h5>\n<p>1、编写 Ingress 资源清单</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 06-prometheus-ingress.yaml \napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: prom-ingress\n  namespace: monitoring\nspec:\n  ingressClassName: &quot;nginx&quot;\n  rules:\n  - host: &quot;k8s-prom.hmallleasing.com&quot;\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: prometheus-svc\n            port:\n              number: 9090\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 06-prometheus-ingress.yaml \n[root@k8s-master01 04-prometheus]# kubectl get ingress -n monitoring\nNAME            CLASS   HOSTS                        ADDRESS                                        PORTS   AGE\nalert-ingress   nginx   k8s-alert.hmallleasing.com   192.168.40.103,192.168.40.104,192.168.40.105   80      38m\nprom-ingress    nginx   k8s-prom.hmallleasing.com    192.168.40.103,192.168.40.104,192.168.40.105   80      78s\n</code></pre>\n<h4 id=\"4-部署grafana至kubernetes\"><a class=\"anchor\" href=\"#4-部署grafana至kubernetes\">#</a> 4、部署 Grafana ⾄ Kubernetes</h4>\n<ul>\n<li>1、创建 HeadlessService；</li>\n<li>2、部署 Grafana，使⽤ statefulSet；</li>\n<li>3、创建 Ingress，对外提供 Grafana；</li>\n</ul>\n<h5 id=\"41-创建headlessservice\"><a class=\"anchor\" href=\"#41-创建headlessservice\">#</a> 4.1 创建 HeadlessService</h5>\n<p>1、编写 Grafana 的 headlessService</p>\n<pre><code>[root@k8s-master01 05-grafana]# cat 01-grafana-headlessService.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: grafana-svc\n  namespace: monitoring\nspec:\n  clusterIP: &quot;None&quot;\n  selector:\n    app: grafana\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n</code></pre>\n<p>2、检查 service</p>\n<pre><code>[root@k8s-master01 05-grafana]# kubectl apply -f 01-grafana-headlessService.yaml \n[root@k8s-master01 05-grafana]# kubectl get svc -n monitoring\nNAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)             AGE\nalertmanager-svc       ClusterIP   None           &lt;none&gt;        9093/TCP,9094/TCP   23h\ngrafana-svc            ClusterIP   None           &lt;none&gt;        3000/TCP            5s\nprometheus-svc         ClusterIP   None           &lt;none&gt;        9090/TCP            22h\nwebhook-dingding-svc   ClusterIP   10.96.241.84   &lt;none&gt;        5002/TCP            23h\nwebhook-wechat-svc     ClusterIP   10.96.82.7     &lt;none&gt;        5001/TCP            23h\n</code></pre>\n<h5 id=\"42-部署grafana服务\"><a class=\"anchor\" href=\"#42-部署grafana服务\">#</a> 4.2 部署 Grafana 服务</h5>\n<p>使⽤ statefulSet 编写 Grafana 清单⽂件</p>\n<ul>\n<li>1、Grafana 需要通过 GF_SECURITY_ADMIN_USER 传递⽤户名， GF_SECURITY_ADMIN_PASSWORD 传递密码。</li>\n<li>2、Grafana 的实例，需要使⽤ PVC 模板来提供数据持久化；</li>\n<li>3、Grafana 的持久存储需要考虑权限， fsGroup: 472</li>\n</ul>\n<pre><code>[root@k8s-master01 05-grafana]# cat 02-grafana-statefulset.yaml \napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  serviceName: &quot;grafana-svc&quot;\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      securityContext:\n        fsGroup: 472    # 当Pod启动时，Kubernetes会自动将此组ID应用到Pod级别共享的存储上（比如持久卷）。\n      containers:\n      - name: grafana\n        image: grafana/grafana:10.2.2\n        env:\n        - name: GF_SECURITY_ADMIN_USER\n          value: &quot;admin&quot;\n        - name: GF_SECURITY_ADMIN_PASSWORD\n          value: &quot;talent&quot;\n        volumeMounts:\n        - name: grafana-data\n          mountPath: /var/lib/grafana\n        ports:\n        - containerPort: 3000\n        readinessProbe:\n          httpGet:\n            path: /api/health\n            port: 3000\n            scheme: HTTP\n          initialDelaySeconds: 60\n          failureThreshold: 10\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 30\n        livenessProbe:\n          httpGet:\n            path: /api/health\n            port: 3000\n            scheme: HTTP\n          initialDelaySeconds: 60\n          failureThreshold: 10\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 30\n        resources:\n          requests:\n            cpu: 500m\n            memory: 2048Mi\n          limits:\n            cpu: 500m\n            memory: 2048Mi\n  volumeClaimTemplates:\n    - metadata:\n        name: grafana-data\n      spec:\n        accessModes: [&quot;ReadWriteMany&quot;]\n        storageClassName: &quot;nfs-storage&quot;\n        resources:\n          requests:\n            storage: 3Gi\n\n[root@k8s-master01 05-grafana]# kubectl apply -f 02-grafana-statefulset.yaml \n[root@k8s-master01 ~]# kubectl get pods -n monitoring\nNAME                                READY   STATUS    RESTARTS            AGE\nalertmanager-0                      1/1     Running   1 (6m18s ago)       23h\nalertmanager-1                      1/1     Running   1 (&lt;invalid&gt; ago)   23h\nalertmanager-2                      1/1     Running   1 (11m ago)         23h\ngrafana-0                           1/1     Running   0                   2m22s\nprometheus-0                        1/1     Running   1 (4m34s ago)       23h\nprometheus-1                        1/1     Running   1 (6m18s ago)       23h\nwebhook-dingding-6d68854649-r6smd   1/1     Running   1 (4m34s ago)       23h\nwebhook-wechat-54b5bbf677-rmr26     1/1     Running   1 (6m18s ago)       24h\n</code></pre>\n<h5 id=\"43-发布grafana服务\"><a class=\"anchor\" href=\"#43-发布grafana服务\">#</a> 4.3 发布 Grafana 服务</h5>\n<p>1、编辑 Grafana 的 Ingress</p>\n<pre><code>[root@k8s-master01 05-grafana]# cat 03-grafana-ingress.yaml \napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: grafana-ingress\n  namespace: monitoring\nspec:\n  ingressClassName: &quot;nginx&quot;\n  rules:\n  - host: &quot;k8s-grafana.hmallleasing.com&quot;\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: grafana-svc\n            port:\n              number: 3000\n       \n[root@k8s-master01 05-grafana]# kubectl apply -f 03-grafana-ingress.yaml \n[root@k8s-master01 05-grafana]# kubectl get ingress -n monitoring\nNAME              CLASS   HOSTS                          ADDRESS                         PORTS   AGE\nalert-ingress     nginx   k8s-alert.hmallleasing.com     192.168.40.103,192.168.40.105   80      23h\ngrafana-ingress   nginx   k8s-grafana.hmallleasing.com   192.168.40.103,192.168.40.105   80      21s\nprom-ingress      nginx   k8s-prom.hmallleasing.com      192.168.40.103,192.168.40.105   80      23h\n</code></pre>\n<p>2、访问 Grafana 的 web 界⾯</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311211754517.png\" alt=\"image-20240311211754517\" /></p>\n<h5 id=\"44-配置grafana连接prometheus\"><a class=\"anchor\" href=\"#44-配置grafana连接prometheus\">#</a> 4.4 配置 Grafana 连接 Prometheus</h5>\n<p>1、点击 Connections--&gt;Add newConnection，搜索 Prometheus，点击添加 DataSource</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311212003641.png\" alt=\"image-20240311212003641\" /></p>\n<p>2、点击测试并保存</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311212027200.png\" alt=\"image-20240311212027200\" /></p>\n<h4 id=\"5-部署blackbox至kubernetes\"><a class=\"anchor\" href=\"#5-部署blackbox至kubernetes\">#</a> 5、部署 blackbox ⾄ Kubernetes</h4>\n<ul>\n<li>1、创建 ConfigMap，定义 blackbox.yml 中的检测模块；</li>\n<li>2、部署 Blackbox，使⽤ Deployment；</li>\n<li>3、创建 Service、ingress，对外发布 Blackbox；</li>\n</ul>\n<h5 id=\"51-创建blackbox的配置文件\"><a class=\"anchor\" href=\"#51-创建blackbox的配置文件\">#</a> 5.1 创建 Blackbox 的配置⽂件</h5>\n<p>1、创建 ConfigMap 配置，定义 Blackbox 的检测⽅法，名称为 blackbox-configs</p>\n<pre><code>[root@k8s-master01 06-blackbox]# cat 01-blackbox-configs-configmap.yaml \napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: blackbox-configs\n  namespace: monitoring\ndata:\n  blackbox.yml: |-\n    modules:\n      # http检查模块\n      http_2xx:\n        prober: http\n        http:\n          preferred_ip_protocol: &quot;ip4&quot;\n          valid_http_versions: [ &quot;HTTP/1.1&quot;, &quot;HTTP/2.0&quot; ]\n      # Http Post检查模块\n      http_post_2xx:\n        prober: http\n        http:\n          method: POST\n          preferred_ip_protocol: &quot;ip4&quot;\n          valid_http_versions: [ &quot;HTTP/1.1&quot;, &quot;HTTP/2.0&quot; ]\n    \n      # TCP检查模块\n      tcp_connect:\n        prober: tcp\n        timeout: 5s\n    \n      # ICMP检查模块\n      icmp:\n        prober: icmp\n        timeout: 5s\n        icmp:\n          preferred_ip_protocol: &quot;ip4&quot;\n    \n      # DNS检查模块\n      dns_tcp:  \n        prober: dns\n        dns:\n          transport_protocol: &quot;tcp&quot;\n          preferred_ip_protocol: &quot;ip4&quot;\n          query_name: &quot;kubernetes.default.svc.cluster.local&quot;\n\n      # SSH检查模块\n      ssh_banner:\n        prober: tcp\n        tcp:\n          query_response:\n          - expect: &quot;^SSH-2.0-&quot;\n          - send: &quot;SSH-2.0-blackbox-ssh-check&quot;\n</code></pre>\n<p>2、创建 configmap</p>\n<pre><code>[root@k8s-master01 06-blackbox]# kubectl apply -f 01-blackbox-configs-configmap.yaml \nconfigmap/blackbox-configs created\n[root@k8s-master01 06-blackbox]# kubectl get cm -n monitoring\nNAME               DATA   AGE\nalert-configs      1      23h\nalert-template     1      23h\nblackbox-configs   1      1s\nkube-root-ca.crt   1      24h\nprom-configs       1      23h\nprom-rules         6      23h\n</code></pre>\n<h5 id=\"52-部署blackbox服务\"><a class=\"anchor\" href=\"#52-部署blackbox服务\">#</a> 5.2 部署 Blackbox 服务</h5>\n<p>编写 Blackbox 的部署清单⽂件</p>\n<pre><code>[root@k8s-master01 06-blackbox]# cat 02-blackbox-deployment.yaml \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: blackbox\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: blackbox\n  template:\n    metadata:\n      labels:\n        app: blackbox\n    spec:\n      volumes:\n      - name: blackbox-cfg\n        configMap:\n          name: blackbox-configs\n      containers:\n      - name: blackbox\n        image: prom/blackbox-exporter:v0.24.0\n        args:\n        - &quot;--web.listen-address=:9115&quot;\n        - &quot;--config.file=/etc/blackbox_exporter/blackbox.yml&quot;\n        volumeMounts:\n        - name: blackbox-cfg\n          mountPath: /etc/blackbox_exporter\n        ports:\n        - containerPort: 9115\n\n[root@k8s-master01 06-blackbox]# kubectl apply -f 02-blackbox-deployment.yaml\n[root@k8s-master01 06-blackbox]# kubectl get pods -n monitoring\nNAME                                READY   STATUS    RESTARTS            AGE\nalertmanager-0                      1/1     Running   1 (20m ago)         23h\nalertmanager-1                      1/1     Running   1 (&lt;invalid&gt; ago)   23h\nalertmanager-2                      1/1     Running   1 (25m ago)         23h\nblackbox-7c7c8db4f7-hqs4c           1/1     Running   0                   112s\ngrafana-0                           1/1     Running   0                   16m\nprometheus-0                        1/1     Running   1 (19m ago)         23h\nprometheus-1                        1/1     Running   1 (20m ago)         23h\nwebhook-dingding-6d68854649-r6smd   1/1     Running   1 (19m ago)         24h\nwebhook-wechat-54b5bbf677-rmr26     1/1     Running   1 (20m ago)         24h\n</code></pre>\n<h5 id=\"53-发布blackbox服务\"><a class=\"anchor\" href=\"#53-发布blackbox服务\">#</a> 5.3 发布 blackbox 服务</h5>\n<p>1、创建 Service</p>\n<pre><code>[root@k8s-master01 06-blackbox]# cat 03-blackbox-service.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: blackbox-svc\n  namespace: monitoring\nspec:\n  selector:\n    app: blackbox\n  ports:\n  - name: http\n    port: 9115\n    targetPort: 9115\n\n[root@k8s-master01 06-blackbox]# kubectl apply -f 03-blackbox-service.yaml \n</code></pre>\n<p>2、创建 Ingress</p>\n<pre><code>[root@k8s-master01 06-blackbox]# cat 04-blackbox-ingress.yaml \napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: blackbox-ingress\n  namespace: monitoring\nspec:\n  ingressClassName: &quot;nginx&quot;\n  rules:\n  - host: &quot;k8s-blackbox.hmallleasing.com&quot;\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: blackbox-svc\n            port:\n              number: 9115\n\n[root@k8s-master01 06-blackbox]# kubectl apply -f 04-blackbox-ingress.yaml \n</code></pre>\n<p>3、访问 blackbox ⻚⾯</p>\n<h4 id=\"image-202403112132301406-监控kubernetes集群节点\"><a class=\"anchor\" href=\"#image-202403112132301406-监控kubernetes集群节点\">#</a> <img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311213230140.png\" alt=\"image-20240311213230140\" />6、监控 Kubernetes 集群节点</h4>\n<p>使⽤ Prometheus 监控 Kubernetes 集群中的 节点，⼤体需要如下⼏步：</p>\n<ul>\n<li>1、使⽤ DaemonSet 部署 Node_exporter</li>\n<li>2、使⽤ Prometheus 的 Kubernetes 服务发现功能，⾃动识别集群中的 Node 节点</li>\n<li>3、使⽤ relabeling 功能调整⽬标地址和端⼝：</li>\n<li>4、使⽤ relabel 功能，为节点增加⼀些必要的标签维度；</li>\n</ul>\n<h5 id=\"61-部署node-exporter\"><a class=\"anchor\" href=\"#61-部署node-exporter\">#</a> 6.1 部署 Node-Exporter</h5>\n<p>使⽤ DaemonSet 部署 Node_exporter</p>\n<ul>\n<li>1、使⽤ DaemonSet 部署 Node Exporter，确保设置 hostPID、hostIPC 和 hostNetwork 为 true，让 Node Exporter 容器能够访问宿主机的⽹络、进程和 IPC 空间。</li>\n<li>2、需要确保 Node Exporter 可以在所有节点上运⾏，包括 Master 节点，因此需要在 DaemonSet 的 Pod 规范中添加容忍度，允许调度到有污点的节点上运⾏。</li>\n<li>3、通过 volumeMounts，将宿主机的 /proc、/sys 和根⽬录 / 挂载到 Node Exporter 容器的相应位置。确保 Node Exporter 能够直接访问宿主机的系统信息。</li>\n<li>4、最后在 Node Exporter 的启动参数中，指定 /proc、/sys 等挂载后的路径，以便正确读取宿主机的数据。</li>\n</ul>\n<pre><code>[root@k8s-master01 07-node_exporter]# cat 01-node-exporter-daemonset.yaml \napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: node-exporter\n  namespace: monitoring\nspec:\n  selector:\n    matchLabels:\n      app: node-exporter\n  template:\n    metadata:\n      labels:\n        app: node-exporter\n    spec:\n      hostPID: true\n      hostIPC: true\n      hostNetwork: true\n      # 容忍度\n      tolerations:\n      - key: node-role.kubernetes.io/control-plane\n        operator: &quot;Exists&quot;\n      volumes:\n      - name: proc\n        hostPath:\n          path: /proc\n      - name: sys\n        hostPath:\n          path: /sys\n      - name: root\n        hostPath:\n          path: /root\n      containers:\n      - name: node\n        image: prom/node-exporter:v1.7.0\n        args:\n        - &quot;--web.listen-address=:9100&quot;\n        - &quot;--web.max-requests=40&quot;\n        - &quot;--collector.mountstats&quot;\n        - &quot;--collector.systemd&quot;\n        - &quot;--collector.ethtool&quot;\n        - &quot;--collector.tcpstat&quot;\n        - &quot;--path.procfs=/host/proc&quot;\n        - &quot;--path.sysfs=/host/sys&quot;\n        - &quot;--path.rootfs=/host/root&quot;\n        volumeMounts:\n        - name: proc\n          mountPath: /host/proc\n        - name: sys\n          mountPath: /host/sys\n        - name: root\n          mountPath: /host/root\n        ports:\n        - containerPort: 9100\n        resources:\n          requests:\n            cpu: 200m\n            memory: 200Mi\n          limits:\n            cpu: 200m\n            memory: 200Mi\n</code></pre>\n<p>2、检查 Node_exporter 的部署情况</p>\n<pre><code>[root@k8s-master01 07-node_exporter]# kubectl apply -f 01-node-exporter-daemonset.yaml \n[root@k8s-master01 07-node_exporter]# kubectl get pods -n monitoring -o wide|grep node-exporter\nnode-exporter-55bsf                 1/1     Running   0                   2m48s   192.168.40.103   k8s-master03   &lt;none&gt;           &lt;none&gt;\nnode-exporter-5ldbs                 1/1     Running   0                   2m48s   192.168.40.104   k8s-node01     &lt;none&gt;           &lt;none&gt;\nnode-exporter-dj269                 1/1     Running   0                   2m48s   192.168.40.101   k8s-master01   &lt;none&gt;           &lt;none&gt;\nnode-exporter-kqdmg                 1/1     Running   0                   2m48s   192.168.40.102   k8s-master02   &lt;none&gt;           &lt;none&gt;\nnode-exporter-ml2sk                 1/1     Running   0                   2m48s   192.168.40.105   k8s-node02     &lt;none&gt;           &lt;none&gt;\n</code></pre>\n<h5 id=\"62-配置prometheus监控node\"><a class=\"anchor\" href=\"#62-配置prometheus监控node\">#</a> 6.2 配置 Prometheus 监控 Node</h5>\n<p>1、修改 Prometheus 的配置⽂件中，使⽤ kubernetes_sd_configs 配置项指定服务发现的⻆⾊为 node。这样 Prometheus 将会⾃动发现 Kubernetes 集群中的所有 Node，并获取它们的元数据。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat  01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n</code></pre>\n<p>3、重启 Prometheus，⽽后检查 Prometheus 的 Target</p>\n<pre><code>#确保k8s-prom.hmallleasing.com可以解析\n[root@k8s-master01 04-prometheus]# cat /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.40.101 k8s-master01\n192.168.40.102 k8s-master02\n192.168.40.103 k8s-master03 k8s-prom.hmallleasing.com\n192.168.40.100 k8s-master-lb # 如果不是高可用集群，该IP为Master01的IP\n192.168.40.104 k8s-node01\n192.168.40.105 k8s-node02\n[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311222953117.png\" alt=\"image-20240311222953117\" /></p>\n<h5 id=\"63-relabel修改抓取的节点端口\"><a class=\"anchor\" href=\"#63-relabel修改抓取的节点端口\">#</a> 6.3 relabel 修改抓取的节点端⼝</h5>\n<p>1、重新修改配置，通过 relabel ⽅式将 10250 端⼝，修改为 9100 端⼝</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n          \n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，发现端⼝变成了 9100，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311223411745.png\" alt=\"image-20240311223411745\" /></p>\n<h5 id=\"64-relabel为节点添加新标签\"><a class=\"anchor\" href=\"#64-relabel为节点添加新标签\">#</a> 6.4 relabel 为节点添加新标签</h5>\n<p>查询节点的元数据标签，发现如下的⼀些 labels，希望保留下来，以便在监控中提供更多的维度和上下⽂。</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311223515199.png\" alt=\"image-20240311223515199\" /></p>\n<p>1、修改 Prometheus 的配置⽂件，使⽤ labelmap 将标签映射到每个节点上。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n          \n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n</code></pre>\n<p>3、重新加载 Prometheus，⽽后这些元数据是否附加到节点的 Labels 上了。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240311223925408.png\" alt=\"image-20240311223925408\" /></p>\n<h5 id=\"65-导入节点可视化图形\"><a class=\"anchor\" href=\"#65-导入节点可视化图形\">#</a> 6.5 导⼊节点可视化图形</h5>\n<p>ID：16098</p>\n<h4 id=\"7-监控k8s控制组件\"><a class=\"anchor\" href=\"#7-监控k8s控制组件\">#</a> 7、监控 K8S 控制组件</h4>\n<h5 id=\"71-监控控制平面组件\"><a class=\"anchor\" href=\"#71-监控控制平面组件\">#</a> 7.1 监控控制平⾯组件</h5>\n<p>监控 Kubernetes 集群的控制平⾯，⾸先需要知道要监控哪些组件，然后了解它们是如何提供 Metrics 指标的，最后确定这些指标的监控⽅法，是通过⼿动配置还是⾃动发现。</p>\n<ul>\n<li>关键组件包括：APIServer、ControllerManager、Scheduler、etcd、CoreDNS、kubelet、kube-proxy</li>\n<li>Metrics 指标获取：这些控制平⾯组件都内建 Metrics 端点。但是某些组件可能默认只在本地接⼝（127.0.0.1）上暴露 Metrics，因此需要修改对应组件的配置，以确保这些 Metrics 可通过远程的⽅式进⾏访问。</li>\n</ul>\n<h5 id=\"72-监控控制平面组件策略\"><a class=\"anchor\" href=\"#72-监控控制平面组件策略\">#</a> 7.2 监控控制平⾯组件策略</h5>\n<p><strong>监控这些组件有两种主要⽅法：</strong></p>\n<ul>\n<li>1、⼿动配置监控，在 Prometheus 配置⽂件中，⼿动指定每个控制器组件服务的地址和端⼝，来完成监控。很明显这种⽅式⾮常繁琐，且维护成本太⾼。</li>\n<li>2、⾃动化监控，利⽤ Kubernetes 的服务发现机制，来动态发现服务实例。有如下两种常⽤的⽅法</li>\n</ul>\n<p><strong>⾃动化监控⽅式：</strong></p>\n<ul>\n<li>1、基于 endpoints 的服务发现，⾃动发现所有的 endpints 端点，然后使⽤ relabel 匹配，来保留符合条件的端点实例。</li>\n<li>2、基于 Pod 的服务发现，⾃动发现所有 Pod，然后使⽤ relabel 匹配，只保留符合标签条件的 Pod 实例。</li>\n</ul>\n<p><em>注意事项：</em></p>\n<p><em>1、使⽤ endpoints 作为服务发现的⽅式，它要求被监控的⽬标必须有对应的 Service 才可以实现，否则⽆法获取端点。但基于 Pod 的发现⽅式不依赖是否有 Service。</em></p>\n<p><em>2、不论采⽤哪种服务的发现⽅式，最终都必须通过 relabel 来基于标签筛选所需要的端点，因此获取所需要监控的⽬标标签，⾄关重要。</em></p>\n<h5 id=\"73-监控apiserver\"><a class=\"anchor\" href=\"#73-监控apiserver\">#</a> 7.3 监控 APIServer</h5>\n<h6 id=\"731-获取apiserver的metrics\"><a class=\"anchor\" href=\"#731-获取apiserver的metrics\">#</a> 7.3.1 获取 APIServer 的 Metrics</h6>\n<p>1、API-Server 在 https 协议的， 6443/metrics 接⼝上提供了指标数据。</p>\n<pre><code>[root@k8s-master01 ~]# netstat -lntp|grep 6443\ntcp        0      0 127.0.0.1:16443         0.0.0.0:*               LISTEN      1126/haproxy        \ntcp        0      0 0.0.0.0:16443           0.0.0.0:*               LISTEN      1126/haproxy        \ntcp6       0      0 :::6443                 :::*                    LISTEN      2301/kube-apiserver \n</code></pre>\n<p>2、APIServer 有对应的 Service，所以采⽤ Endpints ⽅式发现服务，因此我们需要获取 APIServer 的 Service 标签（labels），以便 Prometheus 只抓取 APIServer 服务的 Pod 实例</p>\n<pre><code>[root@k8s-master01 ~]#  kubectl describe service -n default kubernet\nName:              kubernetes\nNamespace:         default\nLabels:            component=apiserver\n                   provider=kubernetes\nAnnotations:       &lt;none&gt;\nSelector:          &lt;none&gt;\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.0.1\nIPs:               10.96.0.1\nPort:              https  443/TCP\nTargetPort:        6443/TCP\nEndpoints:         192.168.40.101:6443,192.168.40.102:6443,192.168.40.103:6443\nSession Affinity:  None\nEvents:            &lt;none&gt;\n</code></pre>\n<h6 id=\"732-配置prometheus监控apiserver\"><a class=\"anchor\" href=\"#732-配置prometheus监控apiserver\">#</a> 7.3.2 配置 Prometheus 监控 APIServer</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-apiserver ，metrics 路径是 /metrics ，协议是 https</li>\n<li>2、基于 Kubernetes 的 Endpoints 来实现⾃动发现，由于 APIServer 采⽤的是 HTTPS，因此还需要指定 TLS 相关的配置；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名为 __meta_kubernetes_service_label_component ，标签值为 apiserver 。（会查询所有名称空间，意味着范围查询会更⼴）</li>\n<li>4、使⽤ relabel_configs，仅保留 __meta_kubernetes_namespace=default 、 __meta_kubernetes_service_name=kubernetes 并且 __meta_kubernetes_endpoint_port_name=https 的实例（明确名称空间和 service 名称，以及对应的端⼝，这种⽅式会更精准⼀些）</li>\n</ul>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过值映射获取标签\n          replacement: $1\n          action: labelmap\n          \n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过值映射获取标签\n      replacement: $1\n      action: labelmap[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查最终结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313214452728.png\" alt=\"image-20240313214452728\" /></p>\n<h6 id=\"733-apiserver告警规则文件\"><a class=\"anchor\" href=\"#733-apiserver告警规则文件\">#</a> 7.3.3 APIServer 告警规则⽂件</h6>\n<p>1、编辑 Prometheus 的 Alert 规则⽂件</p>\n<pre><code>  kube_apiserver_rules.yml: |-\n    groups:\n    - name: APIServer告警规则\n      rules:\n      - alert: APIServer请求错误率过高\n        expr: |\n          sum by (instance, namespace, job, group, code, resource, verb,subresource) (rate(apiserver_request_total&#123;code=~&quot;5..|4..&quot;&#125;[5m])) \n          /\n          sum by (instance, namespace, job, group, code, resource, verb,subresource) (rate(apiserver_request_total[5m])) * 100  &gt; 10\n        for: 5m \n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;APIServer请求错误率超过10%&quot;\n          description: &quot;APIServer实例 &#123;&#123; $labels.instance &#125;&#125; 在命名空间 &#123;&#123; $labels.namespace &#125;&#125; 中的 &#123;&#123; $labels.group &#125;&#125; 组中 &#123;&#123; $labels.resource &#125;&#125; 类型请求错误率超过10%。当前错误率: &#123;&#123; $value &#125;&#125;%，请求类型: &#123;&#123; $labels.verb &#125;&#125;，状态码: &#123;&#123; $labels.code &#125;&#125;。&quot;\n    \n      - alert: APIServer Mutating请求负载过高\n        expr: avg_over_time(apiserver_current_inflight_requests&#123;request_kind=&quot;mutating&quot;&#125;[5m]) &gt; (400 * 0.8)\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;APIServer Mutating请求负载过高&quot;\n          description: &quot;APIServer处理变更性请求的平均负载超过了最大限制的80%。当前负载: &#123;&#123; $value &#125;&#125;。&quot;\n    \n      - alert: APIServer ReadOnly请求负载过高\n        expr: avg_over_time(apiserver_current_inflight_requests&#123;request_kind=&quot;readOnly&quot;&#125;[5m]) &gt; (800 * 0.8)\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;APIServer ReadOnly请求负载过高&quot;\n          description: &quot;APIServer处理只读请求的平均负载超过了最大限制的80%。当前负载: &#123;&#123; $value &#125;&#125;，实例: &#123;&#123; $labels.instance &#125;&#125;，命名空间: &#123;&#123; $labels.namespace &#125;&#125;。&quot;\n      \n      - alert: APIServer平均延迟过高\n        expr: |\n          rate(apiserver_request_duration_seconds_sum&#123;verb!=&quot;WATCH&quot;&#125;[5m])\n          /\n          rate(apiserver_request_duration_seconds_count&#123;verb!=&quot;WATCH&quot;&#125;[5m]) &gt; 5\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;APIServer平均延迟过高&quot;\n          description: &quot;APIServer实例 &#123;&#123; $labels.instance &#125;&#125; 对资源 &#123;&#123; $labels.resource &#125;&#125; 的 &#123;&#123; $labels.verb &#125;&#125; 请求的平均延迟超过5秒。当前平均延迟: &#123;&#123; $value &#125;&#125;秒。&quot;\n          \n[root@k8s-master01 04-prometheus]# kubectl apply -f 02-prom-rules-configmap.yaml \n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  kubectl exec -it prometheus-0 -n monitoring -- ls /etc/prometheus/rules/\n[root@k8s-master01 04-prometheus]#  kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/rules/kube_apiserver_rules.yml\n</code></pre>\n<p>3、重新加载 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查告警规则</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313222355735.png\" alt=\"image-20240313222355735\" /></p>\n<h5 id=\"74-监控k8s核心组件-controller\"><a class=\"anchor\" href=\"#74-监控k8s核心组件-controller\">#</a> 7.4 监控 K8S 核⼼组件 - Controller</h5>\n<h6 id=\"741-获取controller的metrics\"><a class=\"anchor\" href=\"#741-获取controller的metrics\">#</a> 7.4.1 获取 Controller 的 Metrics</h6>\n<p>Controller Manager 默认在 10257/metrics 接⼝上提供了指标数据，默认情况下，ControllerManager 的 Metrics 接⼝仅在本地（127.0.0.1）地址监听，因此我们需要修改其监听地址的参数，将 --bind-address=127.0.0.1 修改为 --bind-address=0.0.0.0</p>\n<p>1、修改 ControllerManager Pod 的配置清单，所有的 master 节点都需修改，生产环境需分开修改，防止业务不可用。</p>\n<pre><code>[root@k8s-master01 ~]#  cat /etc/kubernetes/manifests/kube-controller-manager.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-controller-manager\n    tier: control-plane\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-controller-manager\n    - --allocate-node-cidrs=true\n    - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf\n    - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf\n    - --bind-address=0.0.0.0\n    - --client-ca-file=/etc/kubernetes/pki/ca.crt\n...\n</code></pre>\n<p>2、在 Kubernetes 1.28 版本中，默认配置不再允许通过 HTTP 访问 ControllerManager 的 metrics 端点，因此必须使⽤ HTTPS。在本地测试访问 Controller Manager 的 Metrics ，我们可以使⽤已存在的 prometheus-sa 服务账户来创建⼀个令牌 (token)，然后在来访问 controllerManager 的 Metrics。</p>\n<pre><code>[root@k8s-master01 ~]# TOKEN=$(kubectl create token -n monitoring prometheus-sa)\n[root@k8s-master01 ~]# curl -s -k -H &quot;Authorization: Bearer $TOKEN&quot; https://192.168.40.101:10257/metrics |grep kube-controller\nleader_election_master_status&#123;name=&quot;kube-controller-manager&quot;&#125; 1\nrunning_managed_controllers&#123;manager=&quot;kube-controller-manager&quot;,name=&quot;nodeipam&quot;&#125; 1\n</code></pre>\n<p>3、Controller Manager 没有 Service，因此我们直接获取对应 Pod 的标签（labels），以便 Prometheus 只抓取提供 Controller Manager 服务的 Pod 实例。</p>\n<pre><code># 查看kube-controllerManager的标签\n[root@k8s-master01 ~]# kubectl describe pod -n kube-system kube-controller-manager-k8s-master01|grep -i label\nLabels:               component=kube-controller-manager\n</code></pre>\n<h6 id=\"742-配置prometheus监控controller\"><a class=\"anchor\" href=\"#742-配置prometheus监控controller\">#</a> 7.4.2 配置 Prometheus 监控 Controller</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-controller ，metrics 路径是 /metrics ，协议是 https</li>\n<li>2、基于 Kubernetes 的 Pod ⽅式实现⾃动发现，由于 ControllerManager 采⽤的是 HTTPS，因此还需要指定 TLS 相关的配置；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名为 __meta_kubernetes_pod_label_component ，标签值为 kube-controller-manager</li>\n</ul>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n       \n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查最终结果</p>\n<p>抓取的 ControllerManager 的地址没错，但是端口不是 10257，而是 https 默认的 443，因此我们需要重新</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240314215117208.png\" alt=\"image-20240314215117208\" /></p>\n<h6 id=\"743-relabel修改抓取的pod端口\"><a class=\"anchor\" href=\"#743-relabel修改抓取的pod端口\">#</a> 7.4.3 relabel 修改抓取的 Pod 端⼝</h6>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n          \n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml     \n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查最终结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240314215543314.png\" alt=\"image-20240314215543314\" /></p>\n<h6 id=\"744-relabel为pod添加新标签\"><a class=\"anchor\" href=\"#744-relabel为pod添加新标签\">#</a> 7.4.4 relabel 为 Pod 添加新标签</h6>\n<p>Pod 的元数据标签，我们希望保留 __meta_kubernetes_namespace、__meta_kubernetes_pod_name ，这两个维度的标签。</p>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查最终结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240314220057566.png\" alt=\"image-20240314220057566\" /></p>\n<h5 id=\"75-监控k8s核心组件-scheduler\"><a class=\"anchor\" href=\"#75-监控k8s核心组件-scheduler\">#</a> 7.5 监控 K8S 核⼼组件 - Scheduler</h5>\n<h6 id=\"751-获取scheduler的metrics\"><a class=\"anchor\" href=\"#751-获取scheduler的metrics\">#</a> 7.5.1 获取 Scheduler 的 Metrics</h6>\n<p>Scheduler 默认在 10259/metrics 接⼝上提供了指标数据，默认情况下，Scheduler 的 Metrics 接⼝仅在本地（127.0.0.1）地址监听，因此我们需要修改其监听地址的参数，将 --bind-address=127.0.0.1 修改为 --bind-address=0.0.0.0。</p>\n<pre><code>[root@k8s-master01 ~]# netstat -lntp|grep 10259\ntcp        0      0 127.0.0.1:10259         0.0.0.0:*               LISTEN      1762/kube-scheduler \n</code></pre>\n<p>1、修改 Scheduler Pod 的配置清单，3 台 master 都需修改，生产环境需不要同时修改，避免业务不可用。</p>\n<pre><code>[root@k8s-master01 ~]# cat /etc/kubernetes/manifests/kube-scheduler.yaml \napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-scheduler\n    tier: control-plane\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-scheduler\n    - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf\n    - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf\n    - --bind-address=0.0.0.0\n    - --kubeconfig=/etc/kubernetes/scheduler.conf\n...\n</code></pre>\n<p>2、本地测试访问 Scheduler 的 Metrics ，我们可以使⽤已存在的 prometheus\u0002sa 服务账户来创建⼀个令牌 (token)，然后在来访问 Scheduler 的 Metrics。</p>\n<pre><code>[root@k8s-master01 ~]# TOKEN=$(kubectl create token -n monitoring prometheus-sa)\n[root@k8s-master01 ~]# curl -s -k -H &quot;Authorization: Bearer $TOKEN&quot; https://192.168.40.101:10259/metrics |grep kube-scheduler\nleader_election_master_status&#123;name=&quot;kube-scheduler&quot;&#125; 1\n</code></pre>\n<p>3、Scheduler 没有 Service，因此我们直接获取对应 Pod 的标签（labels），以便 Prometheus 只抓取提供 Scheduler 服务的 Pod 实例。</p>\n<pre><code>[root@k8s-master01 ~]# kubectl describe pod kube-scheduler-k8s-master01  -n kube-system\nName:                 kube-scheduler-k8s-master01\nNamespace:            kube-system\nPriority:             2000001000\nPriority Class Name:  system-node-critical\nNode:                 k8s-master01/192.168.40.101\nStart Time:           Sun, 17 Mar 2024 13:59:17 +0800\nLabels:               component=kube-scheduler\n                      tier=control-plane\n...\n</code></pre>\n<h6 id=\"752-配置prometheus监控scheduler\"><a class=\"anchor\" href=\"#752-配置prometheus监控scheduler\">#</a> 7.5.2 配置 Prometheus 监控 Scheduler</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-scheduler ，metrics 路径是 /metrics ，协议是 https</li>\n<li>2、基于 Kubernetes 的 Pod 来实现⾃动发现，由于 scheduler 采⽤的是 HTTPS，因此还需要指定 TLS 相关的配置；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名为 __meta_kubernetes_pod_label_component ，标签值为 kube-scheduler</li>\n<li>4、使⽤ relabel_configs，修改抓取 Pod 的端⼝为 10259，默认 pod ⾃动抓取的实例，使⽤ http80 端⼝和 https443 端⼝；</li>\n<li>5、使⽤ relabel_configs，保留 __meta_kubernetes_namespace、___meta_kubernetes_pod_name ，这两个维度的标签。</li>\n</ul>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317141321154.png\" alt=\"image-20240317141321154\" /></p>\n<h6 id=\"753-schedule告警规则文件\"><a class=\"anchor\" href=\"#753-schedule告警规则文件\">#</a> 7.5.3 Schedule 告警规则⽂件</h6>\n<p>1、编写告警规则⽂件</p>\n<pre><code>  kube_scheduler_rules.yml: |-\n    groups:\n    - name: scheduler告警规则文件\n      rules:\n      - alert: 调度器每秒调度Pod次数过高\n        expr: rate(scheduler_pod_scheduling_attempts_sum[1m]) &gt; 20\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;调度器每秒调度Pod次数过高 (当前值: &#123;&#123; $value &#125;&#125;次)&quot;\n          description: &quot;调度器实例 &#123;&#123; $labels.instance &#125;&#125; 在过去的一分钟内每秒调度的Pod次数超过了20次，当前值为 &#123;&#123; $value &#125;&#125;次。&quot;\n    \n    \n      - alert: Pending状态的Pod数量过多\n        expr: avg_over_time(scheduler_pending_pods&#123;queue!=&quot;active&quot;&#125;[5m]) &gt; 10\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Pending状态的Pod数量过多 (当前值: &#123;&#123; $value &#125;&#125;个)&quot;\n          description: &quot;调度器实例 &#123;&#123; $labels.instance &#125;&#125; 在过去五分钟内处于Pending状态的Pod数量平均超过了10个，当前值为 &#123;&#123; $value &#125;&#125;个。&quot;\n    \n    \n      - alert: 'Pod平均调度尝试次数过多'\n        expr: avg(rate(scheduler_pod_scheduling_attempts_sum[5m])) by (instance, job, pod_name) &gt; 5\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Pod平均调度尝试次数过多 (当前值: &#123;&#123; $value &#125;&#125;次)&quot;\n          description: &quot;调度器实例 `&#123;&#123; $labels.instance &#125;&#125;` 的Pod在过去五分钟内平均尝试调度次数超过5次，当前值为 &#123;&#123; $value &#125;&#125;次。&quot;\n    \n      - alert: '调度器扩展点平均延迟过高'\n        expr: | \n          rate(scheduler_framework_extension_point_duration_seconds_sum[5m])\n          /\n          rate(scheduler_framework_extension_point_duration_seconds_count[5m]) &gt; 1\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;调度器扩展点平均延迟过高 (当前值: &#123;&#123; $value &#125;&#125;秒)&quot;\n          description: &quot;调度器实例 `&#123;&#123; $labels.instance &#125;&#125;` 的扩展点 `&#123;&#123; $labels.extension_point &#125;&#125;` 在过去五分钟内平均延迟超过了1秒，当前值为 &#123;&#123; $value &#125;&#125;秒。\n</code></pre>\n<h5 id=\"76-监控k8s核心组件-etcd\"><a class=\"anchor\" href=\"#76-监控k8s核心组件-etcd\">#</a> 7.6 监控 K8S 核⼼组件 - Etcd</h5>\n<h6 id=\"761-获取etcd的metrics\"><a class=\"anchor\" href=\"#761-获取etcd的metrics\">#</a> 7.6.1 获取 Etcd 的 Metrics</h6>\n<p>etcd 默认在 2381/metrics 接⼝上提供了指标数据，默认情况下，etcd 的 Metrics 接⼝仅在本地（127.0.0.1）地址监听，因此我们需要修改其监听地址的参数，将 --listen-metrics-urls=http://127.0.0.1:2381 修改为 ---listen-metrics-urls=http://0.0.0.0:2381</p>\n<pre><code>[root@k8s-master01 04-prometheus]# netstat -lntp|grep 2381\ntcp        0      0 127.0.0.1:2381          0.0.0.0:*               LISTEN      1808/etcd \n</code></pre>\n<p>1、修改 etcd Pod 的配置清单，3 台 master 都需修改，生产环境需不要同时修改，避免业务不可用。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat /etc/kubernetes/manifests/etcd.yaml \napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.40.101:2379\n  creationTimestamp: null\n  labels:\n    component: etcd\n    tier: control-plane\n  name: etcd\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - etcd\n    - --advertise-client-urls=https://192.168.40.101:2379\n    - --cert-file=/etc/kubernetes/pki/etcd/server.crt\n    - --client-cert-auth=true\n    - --data-dir=/var/lib/etcd\n    - --experimental-initial-corrupt-check=true\n    - --experimental-watch-progress-notify-interval=5s\n    - --initial-advertise-peer-urls=https://192.168.40.101:2380\n    - --initial-cluster=k8s-master01=https://192.168.40.101:2380\n    - --key-file=/etc/kubernetes/pki/etcd/server.key\n    - --listen-client-urls=https://127.0.0.1:2379,https://192.168.40.101:2379\n    - --listen-metrics-urls=http://0.0.0.0:2381\n    - --listen-peer-urls=https://192.168.40.101:2380\n...\n</code></pre>\n<p>2、本地访问 etcd 的 Metrics</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  curl -s http://192.168.40.101:2381/metrics |grep etcd|head -n 10\n# HELP etcd_cluster_version Which version is running. 1 for 'cluster_version' label with current cluster version\n# TYPE etcd_cluster_version gauge\netcd_cluster_version&#123;cluster_version=&quot;3.5&quot;&#125; 1\n# HELP etcd_debugging_auth_revision The current revision of auth store.\n# TYPE etcd_debugging_auth_revision gauge\netcd_debugging_auth_revision 1\n# HELP etcd_debugging_disk_backend_commit_rebalance_duration_seconds The latency distributions of commit.rebalance called by bboltdb backend.\n# TYPE etcd_debugging_disk_backend_commit_rebalance_duration_seconds histogram\netcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket&#123;le=&quot;0.001&quot;&#125; 933\netcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket&#123;le=&quot;0.002&quot;&#125; 933\n</code></pre>\n<p>3、etcd 没有 Service，因此我们直接获取对应 Pod 的标签（labels），以便 Prometheus 只抓取提供 etcd 服务的 Pod 实例。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl describe pods etcd-k8s-master01 -n kube-system\nName:                 etcd-k8s-master01\nNamespace:            kube-system\nPriority:             2000001000\nPriority Class Name:  system-node-critical\nNode:                 k8s-master01/192.168.40.101\nStart Time:           Sun, 17 Mar 2024 13:48:58 +0800\nLabels:               component=etcd\n                      tier=control-plane\n...\n</code></pre>\n<h6 id=\"762-配置prometheus监控etcd\"><a class=\"anchor\" href=\"#762-配置prometheus监控etcd\">#</a> 7.6.2 配置 Prometheus 监控 Etcd</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-etcd ，metrics 路径是 /metrics，协议是 http</li>\n<li>2、基于 Kubernetes 的 Pod 来实现⾃动发现；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名为 __meta_kubernetes_pod_label_component ，标签值为 etcd</li>\n<li>4、使⽤ relabel_configs，修改抓取 Pod 的端⼝为 2381，默认 pod ⾃动抓取的实例，使⽤ http80 端⼝和 https443 端⼝；</li>\n<li>5、使⽤ relabel_configs，保留 ____meta_kubernetes_namespace、__meta_kubernetes_pod_name ，这两个维度的标签。</li>\n</ul>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317144233242.png\" alt=\"image-20240317144233242\" /></p>\n<h6 id=\"763-etcd告警规则文件\"><a class=\"anchor\" href=\"#763-etcd告警规则文件\">#</a> 7.6.3 Etcd 告警规则⽂件</h6>\n<pre><code>  kube_etcd_rules.yml: |-\n    groups:\n    - name: etcd告警规则文件\n      rules:\n      - alert: Etcd成员异常下线\n        expr: count(etcd_server_id) by (job) % 2 == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;Etcd成员异常下线&quot;\n          description: &quot;Etcd集群成员数量为偶数，可能有成员下线导致集群无法正常提供服务。&quot;\n    \n      - alert: Etcd通信异常\n        expr: etcd_server_has_leader == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;Etcd通信异常 (实例: &#123;&#123; $labels.instance &#125;&#125;)&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的Etcd节点无法与集群中的其它节点通信。&quot;\n    \n    \n      - alert: Etcd领导者变更频繁\n        expr: rate(etcd_server_leader_changes_seen_total[5m]) &gt; 5\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Etcd领导者变更频繁 (实例: &#123;&#123; $labels.instance &#125;&#125;)&quot;\n          description: &quot;在过去的5分钟内，实例 &#123;&#123; $labels.instance &#125;&#125; 的Etcd领导者变更次数超过了5次，这可能会影响集群稳定性。&quot;\n    \n      - alert: Etcd后端提交到磁盘耗时异常\n        expr: |\n          sum by (instance, job, pod_name) (rate(etcd_disk_backend_commit_duration_seconds_sum[5m])) \n          / \n          sum by (instance, job, pod_name) (rate(etcd_disk_backend_commit_duration_seconds_count[5m])) &gt; 2\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Etcd后端提交耗时异常 (实例: &#123;&#123; $labels.instance &#125;&#125;)&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的Etcd后端在过去5分钟内提交到磁盘的操作平均耗时超过了2秒。&quot;\n    \n    \n      - alert: Etcd wal日志fsync耗时异常\n        expr: |\n          sum by (instance, job, pod_name) (rate(etcd_disk_wal_fsync_duration_seconds_sum[5m]))\n          /\n          sum by (instance, job, pod_name) (rate(etcd_disk_wal_fsync_duration_seconds_count[5m])) &gt; 2\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Etcd wal日志fsync耗时异常 (实例: &#123;&#123; $labels.instance &#125;&#125;)&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的Etcd节点在过去5分钟内日志文件的fsync调用平均耗时超过了2秒。&quot;\n</code></pre>\n<h6 id=\"764-导入etcd图形\"><a class=\"anchor\" href=\"#764-导入etcd图形\">#</a> 7.6.4 导⼊ Etcd 图形</h6>\n<p>导⼊ ID：9733</p>\n<h5 id=\"77-监控k8s核心组件-coredns\"><a class=\"anchor\" href=\"#77-监控k8s核心组件-coredns\">#</a> 7.7 监控 K8S 核⼼组件 - CoreDNS</h5>\n<h6 id=\"771-获取coredns的metrics\"><a class=\"anchor\" href=\"#771-获取coredns的metrics\">#</a> 7.7.1 获取 CoreDNS 的 Metrics</h6>\n<p>1、CoreDNS 通过 9153 端⼝的 /metrics 路径提供指标数据。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl get svc -n kube-system\nNAME             TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                  AGE\ncalico-typha     ClusterIP   10.96.237.85   &lt;none&gt;        5473/TCP                 198d\nkube-dns         ClusterIP   10.96.0.10     &lt;none&gt;        53/UDP,53/TCP,9153/TCP   198d\nmetrics-server   ClusterIP   10.96.23.183   &lt;none&gt;        443/TCP                  198d\n\n[root@k8s-master01 04-prometheus]# curl -s http://10.96.0.10:9153/metrics|head -n 10\n# HELP coredns_build_info A metric with a constant '1' value labeled by version, revision, and goversion from which CoreDNS was built.\n# TYPE coredns_build_info gauge\ncoredns_build_info&#123;goversion=&quot;go1.20&quot;,revision=&quot;055b2c3&quot;,version=&quot;1.10.1&quot;&#125; 1\n# HELP coredns_cache_entries The number of elements in the cache.\n# TYPE coredns_cache_entries gauge\ncoredns_cache_entries&#123;server=&quot;dns://:53&quot;,type=&quot;denial&quot;,view=&quot;&quot;,zones=&quot;.&quot;&#125; 39\ncoredns_cache_entries&#123;server=&quot;dns://:53&quot;,type=&quot;success&quot;,view=&quot;&quot;,zones=&quot;.&quot;&#125; 12\n# HELP coredns_cache_hits_total The count of cache hits.\n# TYPE coredns_cache_hits_total counter\ncoredns_cache_hits_total&#123;server=&quot;dns://:53&quot;,type=&quot;denial&quot;,view=&quot;&quot;,zones=&quot;.&quot;&#125; 878\n</code></pre>\n<p>2、CoreDNS 有对应的 Service，因此我们需要获取 DNS 对应的 Service 的标签（labels），以便 Prometheus 只抓取提供 DNS 服务的 Pod 实例。</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl describe svc kube-dns -n kube-system\nName:              kube-dns\nNamespace:         kube-system\nLabels:            k8s-app=kube-dns\n                   kubernetes.io/cluster-service=true\n                   kubernetes.io/name=CoreDNS\n...\n</code></pre>\n<h6 id=\"772-配置prometheus监控dns\"><a class=\"anchor\" href=\"#772-配置prometheus监控dns\">#</a> 7.7.2 配置 Prometheus 监控 DNS</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-dns ，metrics 路径是 /metrics ，协议是 http</li>\n<li>2、基于 Kubernetes 的 endpoints 来实现⾃动发现；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名为 __meta_kubernetes_service_label_k8s_app ，标签值为 kube-dns</li>\n<li>4、使⽤ relabel_configs，重新调整 Pod 的端⼝，将标签 __meta_kubernetes_pod_ip 修改为 IP:9153 端⼝。默认将匹配到的 53、9153 端⼝ ，都视作⼀独⽴的实例。</li>\n<li>5、使⽤ relabel_configs，保留 ___meta_kubernetes_namespace、____meta_kubernetes_pod_name、__meta_kubernetes_service_name ，这三个维度的标签。</li>\n</ul>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317151422648.png\" alt=\"image-20240317151422648\" /></p>\n<h6 id=\"773-coredns告警规则文件\"><a class=\"anchor\" href=\"#773-coredns告警规则文件\">#</a> 7.7.3 CoreDNS 告警规则⽂件</h6>\n<p>1、编写告警规则⽂件</p>\n<pre><code>  kube_coredns_rules.yml: |-\n    groups:\n    - name: CoreDNS告警规则文件\n      rules:\n      - alert: CoreDNS SERVFAIL响应率过高\n        expr: |\n          sum(rate(coredns_dns_responses_total&#123;rcode=&quot;SERVFAIL&quot;&#125;[5m])) by (instance, job, server, pod_name, zone) &gt; 10\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的 CoreDNS SERVFAIL 响应率过高&quot;\n          description: &quot;在过去5分钟内，实例 &#123;&#123; $labels.instance &#125;&#125;，CoreDNS Pod名称 &#123;&#123; $labels.pod_name &#125;&#125;，服务端点 &#123;&#123; $labels.server &#125;&#125;，区域 &#123;&#123; $labels.zone &#125;&#125; 的SERVFAIL响应率超过了10次，当前值：&#123;&#123; $value &#125;&#125;次/秒。请检查CoreDNS服务状态。&quot;\n  \n      - alert: CoreDNS域名解析时延过高\n        expr: |\n          sum(rate(coredns_dns_request_duration_seconds_sum[5m])) by (instance, job, server, pod_name, zone)\n          /\n          sum(rate(coredns_dns_request_duration_seconds_count[5m])) by (instance, job, server, pod_name, zone) &gt; 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;实例 &#123;&#123; $labels.instance &#125;&#125; 的 CoreDNS 解析时延超过1秒&quot;\n          description: &quot;在过去5分钟内，实例 &#123;&#123; $labels.instance &#125;&#125;，CoreDNS Pod名称 &#123;&#123; $labels.pod_name &#125;&#125;，服务端点 &#123;&#123; $labels.server &#125;&#125;，区域 &#123;&#123; $labels.zone &#125;&#125; 的平均域名解析时延超过了1秒，当前平均时延：&#123;&#123; $value &#125;&#125;秒。\n</code></pre>\n<h6 id=\"774-导入coredns图形\"><a class=\"anchor\" href=\"#774-导入coredns图形\">#</a> 7.7.4 导⼊ CoreDNS 图形</h6>\n<p>导⼊ ID：15762</p>\n<h5 id=\"78-监控k8s核心组件-kubeproxy\"><a class=\"anchor\" href=\"#78-监控k8s核心组件-kubeproxy\">#</a> 7.8 监控 K8S 核⼼组件 - Kubeproxy</h5>\n<h6 id=\"781-获取kube-proxy的metrics\"><a class=\"anchor\" href=\"#781-获取kube-proxy的metrics\">#</a> 7.8.1 获取 kube-proxy 的 Metrics</h6>\n<p>1、Kube-Proxy 在 10249/metrics 接⼝上提供指标数据，默认情况下 kube-proxy 的 Metrics 接⼝仅在本地（127.0.0.1）地址监听，因此我们需要修改其监听地址的参数，将 metricsBindAddress: &quot;&quot;修改 metricsBindAddress:&quot;0.0.0.0&quot; ，然后重启 kube-proxy</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  kubectl edit configmap -n kube-system kube-proxy\n...\n    kind: KubeProxyConfiguration\n    metricsBindAddress: &quot;0.0.0.0&quot;\n    mode: &quot;ipvs&quot;\n    nodePortAddresses: null\n    oomScoreAdj: null\n    portRange: &quot;&quot;\n    showHiddenMetricsForVersion: &quot;&quot;\n    winkernel:\n...\n\n# 重启kube-proxy的pod\n[root@k8s-master01 04-prometheus]#  kubectl rollout restart daemonset -n kube-system kube-proxy\n</code></pre>\n<p>2、检查 kube-proxy 的监听地址</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  netstat -lntp |grep kube-proxy\ntcp6       0      0 :::10256                :::*                    LISTEN      60042/kube-proxy    \ntcp6       0      0 :::10249                :::*                    LISTEN      60042/kube-proxy \n</code></pre>\n<p>3、kube-proxy 没有 Service，因此我们直接获取对应 Pod 的标签（labels），以便 Prometheus 只抓取提供 kube-proxy 服务的 Pod 实例。</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  kubectl describe daemonsets.apps -n kube-system kube-proxy\nName:           kube-proxy\nSelector:       k8s-app=kube-proxy\nNode-Selector:  kubernetes.io/os=linux\nLabels:         k8s-app=kube-proxy\nAnnotations:    deprecated.daemonset.template.generation: 3\n...\n</code></pre>\n<h6 id=\"782-配置prometheus监控kube-proxy\"><a class=\"anchor\" href=\"#782-配置prometheus监控kube-proxy\">#</a> 7.8.2 配置 Prometheus 监控 kube-proxy</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-proxy ，metrics 路径是 /metrics ，协议是 http</li>\n<li>2、基于 Kubernetes 的 pod 来实现⾃动发现；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名为 __meta_kubernetes_pod_label_k8s_app ，标签值为 kube-proxy</li>\n<li>4、使⽤ relabel_configs，重新调整 Pod 的端⼝，将标签 __meta_kubernetes_pod_ip 修改为 IP:10249 端⼝，默认 Pod 的⾃动发现端⼝ http 是 80，https 是 443。</li>\n<li>5、使⽤ relabel_configs，保留 __meta_kubernetes_namespace、__meta_kubernetes_pod_name ，这两个维度的标签。</li>\n</ul>\n<p>1、修改 Prometheus 配置</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n\n  # 监控kube-proxy\n  - job_name: &quot;kube-proxy&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n      regex: &quot;kube-proxy&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:10249\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317153148617.png\" alt=\"image-20240317153148617\" /></p>\n<h6 id=\"783-kube-proxy告警规则文件\"><a class=\"anchor\" href=\"#783-kube-proxy告警规则文件\">#</a> 7.8.3 Kube-Proxy 告警规则⽂件</h6>\n<p>1、编写告警规则⽂件</p>\n<pre><code>  kube_proxy_rules.yml: |-\n    groups:\n    - name: kube-proxy告警规则文件\n      rules:\n      - alert: KubeProxy同步时间过长\n        expr: |\n          rate (kubeproxy_sync_proxy_rules_duration_seconds_sum[5m]) /\n          rate (kubeproxy_sync_proxy_rules_duration_seconds_count[5m]) &gt; 3\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;kube-proxy同步时间过长 (实例: &#123;&#123; $labels.instance &#125;&#125;)&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125;, kube-proxy同步操作的平均时间超过了3秒。该Pod &#123;&#123; $labels.pod_name &#125;&#125; 当前同步延迟：&#123;&#123; $value &#125;&#125;/s&quot;\n      \n      - alert: Iptables规则同步失败次数过多\n        expr: rate(kubeproxy_sync_proxy_rules_iptables_restore_failures_total[5m]) &gt; 10\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;Iptables同步失败告警 (实例: &#123;&#123; $labels.instance &#125;&#125;)&quot;\n          description: &quot;实例 &#123;&#123; $labels.instance &#125;&#125;, iptables规则同步失败次数超过10次。该Pod &#123;&#123; $labels.pod_name &#125;&#125; 当前失败次数：&#123;&#123; $value &#125;&#125;&quot;\n</code></pre>\n<h5 id=\"79-监控kubernetes集群资源状态\"><a class=\"anchor\" href=\"#79-监控kubernetes集群资源状态\">#</a> 7.9 监控 Kubernetes 集群资源状态</h5>\n<h6 id=\"791-什么是集群资源状态\"><a class=\"anchor\" href=\"#791-什么是集群资源状态\">#</a> 7.9.1 什么是集群资源状态</h6>\n<p>集群资源状态是指， Kubernetes 集群中所有资源对象、以及这些资源对象的当前状态信息。这些资源对象，包括 Pod、Deployment、DaemonSet、StatefulSet、Job、CronJob 等 。⽽这些资源状态，则提供了这些资源的详细信息，例如：</p>\n<ul>\n<li>1、当前集群中资源的数量；</li>\n<li>2、当前集群中总共有多少个 Pod，分别处于什么状态（如 Running、Stopped、Terminated）。</li>\n<li>3、有多少个 Deployment 正在运⾏，以及它们正在运⾏的 Pod 副本数量与实际期望运⾏的 Pod 副本数是否⼀致。</li>\n<li>3、DaemonSet 控制的 Pod 是否已经在所有（或指定的）节点上运⾏。</li>\n<li>4、Job 和 CronJob 是否按预定计划运⾏，以及执⾏成功与否。</li>\n<li>...</li>\n</ul>\n<p>但是在 Kubernetes 中的组件，并不提供关于资源状态的指标。因此我们需要使⽤ kube-state-metrics ，因为 kube-state-metrics 它会主动收集关于 Kubernetes 集群中的各种资源的状态信息。如 Pod、Deployment、Job 以及它们的数量、运⾏状况等，⽽后将些信息转换成 Prometheus 所兼容的指标格式，进⽽让 Prometheus 能抓取这些指标，并进⾏分析与展示。</p>\n<h6 id=\"792-安装kube-state-metrics\"><a class=\"anchor\" href=\"#792-安装kube-state-metrics\">#</a> 7.9.2 安装 Kube-State-Metrics</h6>\n<p>kube-state-metrics 版本与 kubernetes 的版本对应关系（注意版本要兼容）</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">kube-state-metrics</th>\n<th style=\"text-align:center\">Kubernetes client-go Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">v2.6.0</td>\n<td style=\"text-align:center\">v1.24</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">v2.7.0</td>\n<td style=\"text-align:center\">v1.25</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">v2.8.2</td>\n<td style=\"text-align:center\">v1.26</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">v2.9.2</td>\n<td style=\"text-align:center\">v1.26</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">v2.10.0</td>\n<td style=\"text-align:center\">v1.27</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">main</td>\n<td style=\"text-align:center\">v1.28</td>\n</tr>\n</tbody>\n</table>\n<p>1、安装 kube-state-metrics，⾸先克隆最新分⽀的源代码</p>\n<pre><code>[root@k8s-master01 ~]# yum install git -y\n[root@k8s-master01 ~]#  git clone https://github.com/kubernetes/kube-state-metrics.git\n# 加速地址\n[root@k8s-master01 ~]# git clone https://mirror.ghproxy.com/https://github.com/kubernetes/kube-state-metrics.git\n</code></pre>\n<p>2、修改 kube-state-metrics/examples/standard/deployment.yaml 镜像为国内的镜像</p>\n<pre><code>[root@k8s-master01 ~]# cat kube-state-metrics/examples/standard/deployment.yaml \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/version: 2.11.0\n  name: kube-state-metrics\n  namespace: kube-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-state-metrics\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: exporter\n        app.kubernetes.io/name: kube-state-metrics\n        app.kubernetes.io/version: 2.11.0\n    spec:\n      automountServiceAccountToken: true\n      containers:\n#      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.11.0\n      - image: uhub.service.ucloud.cn/oldxu/kube-state-metrics:v2.10.0\n...\n</code></pre>\n<p>3、应⽤资源清单⽂件</p>\n<pre><code>[root@k8s-master01 ~]#  kubectl apply -f kube-state-metrics/examples/standard/\nclusterrolebinding.rbac.authorization.k8s.io/kube-state-metrics created\nclusterrole.rbac.authorization.k8s.io/kube-state-metrics created\ndeployment.apps/kube-state-metrics created\nserviceaccount/kube-state-metrics created\nservice/kube-state-metrics created\n</code></pre>\n<p>4、 Kube-state-metrics 的 Pod 运⾏在 kube-system 名称空间</p>\n<pre><code>[root@k8s-master01 standard]# kubectl get pods,svc -n kube-system -l app.kubernetes.io/name=kube-state-metrics\nNAME                                      READY   STATUS    RESTARTS   AGE\npod/kube-state-metrics-5864c7d699-mwbp4   1/1     Running   0          2m15s\n\nNAME                         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)             AGE\nservice/kube-state-metrics   ClusterIP   None         &lt;none&gt;        8080/TCP,8081/TCP   2m15s\n</code></pre>\n<p>5、 Kube-state-metrics 有提供 Service ，因此我们需要获取 Service 的标签（labels），以便 Prometheus 只抓取提供 Kube-state-metrics 服务的实例。</p>\n<pre><code>[root@k8s-master01 standard]# curl -s http://172.16.85.199:8080/metrics | head -n 10\n# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.\n# TYPE go_gc_duration_seconds summary\ngo_gc_duration_seconds&#123;quantile=&quot;0&quot;&#125; 2.1866e-05\ngo_gc_duration_seconds&#123;quantile=&quot;0.25&quot;&#125; 8.7894e-05\ngo_gc_duration_seconds&#123;quantile=&quot;0.5&quot;&#125; 0.000165906\ngo_gc_duration_seconds&#123;quantile=&quot;0.75&quot;&#125; 0.000179164\ngo_gc_duration_seconds&#123;quantile=&quot;1&quot;&#125; 0.000420888\ngo_gc_duration_seconds_sum 0.001599982\ngo_gc_duration_seconds_count 10\n# HELP go_goroutines Number of goroutines that currently exist.\n\n[root@k8s-master01 standard]#  kubectl describe service -n kube-system kube-state-metrics\nName:              kube-state-metrics\nNamespace:         kube-system\nLabels:            app.kubernetes.io/component=exporter\n                   app.kubernetes.io/name=kube-state-metrics\n                   app.kubernetes.io/version=2.11.0\n...\n</code></pre>\n<h6 id=\"793-配置prometheus监控ksm\"><a class=\"anchor\" href=\"#793-配置prometheus监控ksm\">#</a> 7.9.3 配置 Prometheus 监控 KSM</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-state-metrics ，metrics 路径是 /metrics ，协议是 http</li>\n<li>2、基于 Kubernetes 的 endpoints 来⾃动发现所有的 endpoints 端点；</li>\n<li>3、使⽤ relabel_configs，仅保留标签名 __meta_kubernetes_service_label_app_kubernetes_io_name ，标签值是 kube-state-metrics 的实例。</li>\n<li>4、使⽤ relabel_configs，重新调整 Pod 的端⼝，将标签 __meta_kubernetes_pod_ip 修改为 IP:8080 端⼝。</li>\n<li>5、使⽤ relabel_configs，映射 _<em>meta_kubernetes_service_label</em> (.*) ，所有的标签以及标签值。</li>\n</ul>\n<p>1、配置 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控kube-state-metrics\n      - job_name: &quot;kube-state-metrics&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n          regex: &quot;kube-state-metrics&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:8080\n          target_label: __address__\n\n        # 添加维度标签\n        - regex: __meta_kubernetes_service_label_(.*)\n          action: labelmap\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n\n  # 监控kube-proxy\n  - job_name: &quot;kube-proxy&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n      regex: &quot;kube-proxy&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:10249\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控kube-state-metrics\n  - job_name: &quot;kube-state-metrics&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n      regex: &quot;kube-state-metrics&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:8080\n      target_label: __address__\n\n    # 添加维度标签\n    - regex: __meta_kubernetes_service_label_(.*)\n      action: labelmap\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317205755162.png\" alt=\"image-20240317205755162\" /></p>\n<h6 id=\"794-资源状态告警规则文件\"><a class=\"anchor\" href=\"#794-资源状态告警规则文件\">#</a> 7.9.4 资源状态告警规则⽂件</h6>\n<p>1、编写告警规则⽂件</p>\n<pre><code>  kube_state_metrics_rules.yml: |-\n    groups:\n    - name: KSM告警规则文件\n      rules:\n      - alert: 节点kubelet未就绪\n        expr: kube_node_status_condition&#123;condition=&quot;Ready&quot;, status=&quot;true&quot;&#125; == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;节点 &#123;&#123; $labels.node &#125;&#125; kubelet未就绪&quot;\n          description: &quot;节点 &#123;&#123; $labels.node &#125;&#125; kubelet已经超过5分钟未处于就绪状态，需要立即检查。&quot;\n\n      - alert: 节点内存压力大\n        expr: kube_node_status_condition&#123;condition=&quot;MemoryPressure&quot;, status=&quot;true&quot;&#125; == 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;节点 &#123;&#123; $labels.node &#125;&#125; 内存压力过高&quot;\n          description: &quot;节点 &#123;&#123; $labels.node &#125;&#125; 正在经历内存压力，可能需要增加内存资源或减少工作负载。&quot;\n\n      - alert: 节点网络压力大\n        expr: kube_node_status_condition&#123;condition=&quot;NetworkUnavailable&quot;,status=&quot;true&quot;&#125; == 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;节点 &#123;&#123; $labels.node &#125;&#125; 网络压力过高&quot;\n          description: &quot;节点 &#123;&#123; $labels.node &#125;&#125; 的网络接压力过大，可能存在网络瓶颈。&quot;\n\n      - alert: 节点磁盘压力大\n        expr: kube_node_status_condition&#123;condition=&quot;DiskPressure&quot;, status=&quot;true&quot;&#125; == 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;节点 &#123;&#123; $labels.node &#125;&#125;磁盘压力过高&quot;\n          description: &quot;节点 &#123;&#123; $labels.node &#125;&#125; 正在经历磁盘压力，磁盘空间或inode可能不足。&quot;\n\n      - alert: 节点PID压力大\n        expr: kube_node_status_condition&#123;condition=&quot;PIDPressure&quot;, status=&quot;true&quot;&#125; == 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;节点 &#123;&#123; $labels.node &#125;&#125; PID压力过高&quot;\n          description: &quot;节点 &#123;&#123; $labels.node &#125;&#125; 上的进程数可能已经达到上限。&quot;\n\n      - alert: 启动失败的Pod\n        expr: sum (kube_pod_status_phase&#123;phase=~&quot;Pending|Unknown|Failed&quot;&#125;) by (job,namespace, pod) &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Pod启动失败&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的Pod '&#123;&#123; $labels.pod &#125;&#125;'启动失败。&quot;\n      \n      - alert: 因为OOM重启的Pod\n        expr: |\n          (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m &gt;= 1)\n          and ignoring (reason)\n          min_over_time(kube_pod_container_status_last_terminated_reason&#123;reason=&quot;OOMKilled&quot;&#125;[10m]) &gt;= 1\n        for: 10m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;&#123;&#123; $labels.pod &#125;&#125; Pod因OOM重启&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的Pod '&#123;&#123; $labels.pod &#125;&#125;' 触发了OOM造成Pod重启,触发OOM的容器是 '&#123;&#123; $labels.container &#125;&#125;'。&quot;\n\n      - alert: Deployment副本数不一致\n        expr: kube_deployment_spec_replicas - kube_deployment_status_replicas_available &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Deployment副本数不一致&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.deployment &#125;&#125; 部署副本数与期望副本数不一致，当前偏差了&#123;&#123; $value &#125;&#125;个副本。&quot;\n      \n      - alert: DaemonSet副本数不一致\n        expr: |\n          kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 &lt; 100\n          or\n          kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;DaemonSet副本数不一致&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.daemonset &#125;&#125; 期望副本数与实际运行副本数不一致。&quot;\n\n      - alert: DaemonSet调度出现错误\n        expr: kube_daemonset_status_number_misscheduled &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;DaemonSet调度错误&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.daemonset &#125;&#125; 调度了错误的Pod。&quot;\n\n      - alert: StatefulSet副本数异常\n        expr: |\n          kube_statefulset_status_replicas_ready  / kube_statefulset_replicas  * 100 &lt; 100\n          or\n          kube_statefulset_replicas - kube_statefulset_status_replicas_current &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;StatefulSet副本数异常&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.statefulset &#125;&#125; 期望副本数与实际运行副本数不一致。&quot;\n\n      - alert: PV异常\n        expr: kube_persistentvolume_status_phase&#123;phase=&quot;Failed&quot;&#125; &gt; 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;PV异常&quot;\n          description: &quot;持久卷'&#123;&#123; $labels.persistentvolume &#125;&#125;'处于Failed状态。&quot;\n\n      - alert: PVC异常\n        expr: kube_persistentvolumeclaim_status_phase&#123;phase=~&quot;Lost|Pending&quot;&#125; &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;PVC异常&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.persistentvolumeclaim &#125;&#125; 持久卷(PVC)处于 &#123;&#123; $labels.phase &#125;&#125;状态。&quot;\n\n      - alert: Job完成度低\n        expr: kube_job_status_succeeded / kube_job_spec_completions * 100 &lt; 75\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;Job完成度低于75%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.job_name &#125;&#125; Job任务完成度低于预期的75%。&quot;\n\n      - alert: Job失败次数高\n        expr: kube_job_status_failed &gt; 5\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;Job失败次数过高&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 &#123;&#123; $labels.job_name &#125;&#125; Job任务执行失败次数超过5次以上，当前失败 &#123;&#123; $value &#125;&#125; 次。&quot;\n</code></pre>\n<h6 id=\"795-导入资源状态图形\"><a class=\"anchor\" href=\"#795-导入资源状态图形\">#</a> 7.9.5 导⼊资源状态图形</h6>\n<p>ID：13332  或 15757</p>\n<h5 id=\"710-监控kubernetes集群pod资源\"><a class=\"anchor\" href=\"#710-监控kubernetes集群pod资源\">#</a> 7.10 监控 Kubernetes 集群 Pod 资源</h5>\n<h6 id=\"7101-pod资源是什么\"><a class=\"anchor\" href=\"#7101-pod资源是什么\">#</a> 7.10.1 Pod 资源是什么</h6>\n<p>所谓 Pod 资源，指的是，运⾏在 Pod 中的 &quot;容器&quot; 所使⽤的计算资源。这些计算资源指的是 CPU、内存、⽹络以及磁盘 IO 等相关指标。之前我们监控容器的资源时，使⽤的是 cAdvisor ⼯具来监控。不过在 Kubernetes 中，Cadvisor ⼯具已经被内置到了 kubelet 的组件中。因此，我们可以直接监控节点的 kubelet，来收集相关 Pod 的指标数据。</p>\n<p>kubelet 的指标可以通过以下⽅式访问：</p>\n<ul>\n<li>端⼝：10250，kubelet ⽤于指标数据。</li>\n<li>协议：HTTPS，确保数据传输的安全性（因此需要进⾏认证才可以抓取数据）。</li>\n<li>路径： /metrics/cadvisor ，特定的 URL 路径，我们需要从这个路径获取 cAdvisor 提供的指标数据。</li>\n</ul>\n<h6 id=\"7102-配置prometheus监控pod\"><a class=\"anchor\" href=\"#7102-配置prometheus监控pod\">#</a> 7.10.2 配置 Prometheus 监控 Pod</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-kubelet ，metrics 路径是 /metrics/cadvisor ，协议是 https</li>\n<li>2、基于 Kubernetes 的 node ⽅式来发现所有的主机实例，由于 kubelet 采⽤的是 HTTPS，因此还需要指定 TLS 相关的配置；</li>\n<li>3、使⽤ relabel_configs，映射 _<em>meta_kubernetes_node_label</em> (.*) ，所有的标签以及标签值。</li>\n</ul>\n<pre><code>[root@k8s-master01 04-prometheus]# TOKEN=$(kubectl create token -n monitoring prometheus-sa)\n[root@k8s-master01 04-prometheus]# curl -s -k -H &quot;Authorization: Bearer $TOKEN&quot; https://192.168.40.101:10250/metrics|head -n 10\n# HELP aggregator_discovery_aggregation_count_total [ALPHA] Counter of number of times discovery was aggregated\n# TYPE aggregator_discovery_aggregation_count_total counter\naggregator_discovery_aggregation_count_total 0\n# HELP apiserver_audit_event_total [ALPHA] Counter of audit events generated and sent to the audit backend.\n# TYPE apiserver_audit_event_total counter\napiserver_audit_event_total 0\n# HELP apiserver_audit_requests_rejected_total [ALPHA] Counter of apiserver requests rejected due to an error in audit logging backend.\n# TYPE apiserver_audit_requests_rejected_total counter\napiserver_audit_requests_rejected_total 0\n# HELP apiserver_client_certificate_expiration_seconds [ALPHA] Distribution of the remaining lifetime on the certificate used to authenticate a request.\n</code></pre>\n<p>1、配置 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控kube-state-metrics\n      - job_name: &quot;kube-state-metrics&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n          regex: &quot;kube-state-metrics&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:8080\n          target_label: __address__\n\n        # 添加维度标签\n        - regex: __meta_kubernetes_service_label_(.*)\n          action: labelmap\n\n      # 监控kubelet(Pod)\n      - job_name: &quot;kube-kubelet&quot;\n        metrics_path: &quot;/metrics/cadvisor&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: node\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 添加标签的映射\n        relabel_configs:\n        - regex: __meta_kubernetes_node_label_(.*)\n          action: labelmap\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n\n  # 监控kube-proxy\n  - job_name: &quot;kube-proxy&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n      regex: &quot;kube-proxy&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:10249\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控kube-state-metrics\n  - job_name: &quot;kube-state-metrics&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n      regex: &quot;kube-state-metrics&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:8080\n      target_label: __address__\n\n    # 添加维度标签\n    - regex: __meta_kubernetes_service_label_(.*)\n      action: labelmap\n\n  # 监控kubelet(Pod)\n  - job_name: &quot;kube-kubelet&quot;\n    metrics_path: &quot;/metrics/cadvisor&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: node\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 添加标签的映射\n    relabel_configs:\n    - regex: __meta_kubernetes_node_label_(.*)\n      action: labelmap\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317212313946.png\" alt=\"image-20240317212313946\" /></p>\n<p>3、检查此前创建好的 kube_pods_rules.yml 告警规则⽂件</p>\n<pre><code>  kube_pods_rules.yml: |-\n    groups:\n    - name: Pods的告警规则文件\n      rules:\n      - alert: Pod中容器的CPU利用率高\n        expr: sum (rate(container_cpu_usage_seconds_total&#123;image!=&quot;&quot;&#125;[5m])) by (instance,job,pod,namespace) * 100 &gt; 80\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod CPU利用率高&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的CPU利用率当前为 &#123;&#123; $value &#125;&#125;%，超过了80%的阈值。&quot;\n    \n      - alert: Pod中容器内存利用率高\n        expr: |\n          sum(container_memory_working_set_bytes&#123;name!=&quot;&quot;&#125;) by (instance,job,pod,namespace)\n          /\n          sum(container_spec_memory_limit_bytes&#123;name!=&quot;&quot;&#125; &gt; 0) by (instance,job,pod,namespace) * 100 &gt; 80\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod内存利用率高&quot;\n          description: 在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的内存最大限制是 &#123;&#123; printf `sum (container_spec_memory_limit_bytes&#123;namespace=\"%s\",pod=\"%s\"&#125; > 0 ) /1024 /1024` $labels.namespace $labels.pod | query | first | value &#125;&#125;MB , 目前利用率已达&#123;&#123; $value &#125;&#125;%，超过限制的80%。\n\n      - alert: Pod容器网络发送速率过高\n        expr: sum(rate(container_network_transmit_bytes_total&#123;image!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) * 8 /1024 /1024 &gt; 50\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod网络发送速率过高&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的网络发送速率达到&#123;&#123; $value &#125;&#125;Mbps，超过了50Mbps的阈值。&quot;\n    \n      - alert: Pod容器网络接收速率过高\n        expr: sum(rate(container_network_receive_bytes_total&#123;image!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) * 8 /1024 /1024 &gt; 50\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod网络发送速率过高&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的网络接收速率达到&#123;&#123; $value &#125;&#125;Mbps，超过了50Mbps的阈值。&quot;\n    \n      - alert: Pod容器磁盘写入吞吐量过大\n        expr: sum (rate(container_fs_writes_bytes_total&#123;name!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) /1024 /1024 &gt; 20\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod磁盘写入吞吐量过大&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的磁盘写入吞吐量达到&#123;&#123; $value &#125;&#125;MB/s，超过了20MB/s的阈值。&quot;\n    \n      - alert: Pod容器磁盘读取吞吐量过大\n        expr: sum (rate(container_fs_reads_bytes_total&#123;name!=&quot;&quot;&#125;[1m])) by (instance,job,pod,namespace) /1024 /1024 &gt; 20\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;在 '&#123;&#123; $labels.instance &#125;&#125;' 节点上运行的 '&#123;&#123; $labels.pod &#125;&#125;' Pod磁盘读取吞吐量过大&quot;\n          description: &quot;在 '&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod &#125;&#125;' Pod的磁盘读取吞吐量达到&#123;&#123; $value &#125;&#125;MB/s，超过了20MB/s的阈值。&quot;\n</code></pre>\n<h5 id=\"711-监控kubernetes集群service资源\"><a class=\"anchor\" href=\"#711-监控kubernetes集群service资源\">#</a> 7.11 监控 Kubernetes 集群 Service 资源</h5>\n<h6 id=\"7111-为何需要监控service资源\"><a class=\"anchor\" href=\"#7111-为何需要监控service资源\">#</a> 7.11.1 为何需要监控 Service 资源</h6>\n<p>监控 Service 资源是为了确保我们的服务，时刻处于持续运⾏状态，通常关注如下两个维度；</p>\n<p>● 1、可⽤性：确保 Service 始终是可以被访问的，从⽽保障服务的连续性。</p>\n<p>● 2、性能：监控 Service 的响应时间，确保其处理请求的速度，始终处于⼀个稳定的时间。</p>\n<p>为了确保 Service 的服务始终可⽤，我们通常会采⽤ Blackbox 的 TCP 探测⽅法来进⾏监控。</p>\n<p>之前 Blackbox 监控⽅式⽐较固定，不够灵活。为了改进这⼀点，在监控 Service 时，我们可以将监控⽬标配置为⾃动发现机制。这样，每当有新的 Service 出现或现有 Service 发⽣变化时，监控系统能够⾃动识别并开始监控，⽽不需要⼿动更新 Prometheus 的配置。</p>\n<pre><code>  - job_name: 'blackbox_http'\n    metrics_path: /probe # metrics的path这次不是/metrics，⽽是/probe\n    params: # 传递参数\n      module: [http_2xx] # 调⽤哪个模块进⾏探测\n    static_configs:\n    - targets: [&quot;https://www.xuliangwei.com&quot;,&quot;http://www.oldxu.net&quot;,&quot;https://www.baidu.com&quot;,&quot;http://httpbin.org/status/400&quot;,&quot;https://httpstat.us/500&quot;,&quot;https://httpstat.us/502&quot;]\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: prom-node04.oldxu.net:9115\n      \n# relabel_configs是标签重写的配置，这⾥进⾏了三次操作：\n# 1、将⽬标地址（__address__）赋予给__param_target，这是Blackbox Exporter需要的⽬标target参数。\n# 2、将__param_target的内容复制到instance标签，这样Prometheus UI中显示的instance实例名称会是⽬标站点地址，⽽不是Blackbox的地址。\n# 3、最后，将实际发送探测请求的地址（__address__）设置为运⾏Blackbox Exporter的节点地址和端⼝（prom-node04.oldxu.net:9115），这样Prometheus就会向这个地址发送探测请求。\n</code></pre>\n<h6 id=\"7112-配置prometheus监控service\"><a class=\"anchor\" href=\"#7112-配置prometheus监控service\">#</a> 7.11.2 配置 Prometheus 监控 Service</h6>\n<p>1、添加⼀个新的 Job，名为： kube-blackbox-tcp ，协议是 tcp ， metrics 路径是 /probe</p>\n<p>2、基于 Kubernetes 的 service 来实现⾃动发现所有的 Service，⽽后进⾏⾃动监控；</p>\n<p>3、使⽤ relabel_configs，保留 __meta_kubernetes_namespace、__meta_kubernetes_service_name 这两个维度的标签。</p>\n<p>1、配置 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控kube-state-metrics\n      - job_name: &quot;kube-state-metrics&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n          regex: &quot;kube-state-metrics&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:8080\n          target_label: __address__\n\n        # 添加维度标签\n        - regex: __meta_kubernetes_service_label_(.*)\n          action: labelmap\n\n      # 监控kubelet(Pod)\n      - job_name: &quot;kube-kubelet&quot;\n        metrics_path: &quot;/metrics/cadvisor&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: node\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 添加标签的映射\n        relabel_configs:\n        - regex: __meta_kubernetes_node_label_(.*)\n          action: labelmap\n\n      # 监控service\n      - job_name: &quot;kube-blackbox-tcp&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [tcp_connect]         # 使用tcp_connect模块\n        kubernetes_sd_configs:\n        - role: service\n        relabel_configs:\n        - source_labels: [__address__]\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: (.*)\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          regex: (.*)\n          replacement: $1\n          target_label: service_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n\n  # 监控kube-proxy\n  - job_name: &quot;kube-proxy&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n      regex: &quot;kube-proxy&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:10249\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控kube-state-metrics\n  - job_name: &quot;kube-state-metrics&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n      regex: &quot;kube-state-metrics&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:8080\n      target_label: __address__\n\n    # 添加维度标签\n    - regex: __meta_kubernetes_service_label_(.*)\n      action: labelmap\n\n  # 监控kubelet(Pod)\n  - job_name: &quot;kube-kubelet&quot;\n    metrics_path: &quot;/metrics/cadvisor&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: node\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 添加标签的映射\n    relabel_configs:\n    - regex: __meta_kubernetes_node_label_(.*)\n      action: labelmap\n\n  # 监控service\n  - job_name: &quot;kube-blackbox-tcp&quot;\n    metrics_path: &quot;/probe&quot;\n    params:\n      module: [tcp_connect]         # 使用tcp_connect模块\n    kubernetes_sd_configs:\n    - role: service\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: blackbox-svc:9115\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: (.*)\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_service_name]\n      regex: (.*)\n      replacement: $1\n      target_label: service_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317214533161.png\" alt=\"image-20240317214533161\" /></p>\n<p>5、检查此前创建好的 kube_blackbox_tcp_rules.yml 告警规则⽂件</p>\n<pre><code> blackbox_tcp_rules.yml: |-\n    groups:\n    - name: Blackbox_tcp告警规则文件\n      rules:\n      - alert: Service TCP探测失败\n        expr: sum(probe_success&#123;job=~&quot;.*tcp&quot;&#125;) by (instance,job,namespace,service_name) == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;探测 '&#123;&#123; $labels.instance &#125;&#125;' Service 的TCP接口探测失败。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的 '&#123;&#123; $labels.service_name &#125;&#125;' Service资源 '&#123;&#123; $labels.instance &#125;&#125;' 地址探测失败。&quot;\n    \n      - alert: Service TCP请求的响应时间过长\n        expr: probe_duration_seconds&#123;job=~&quot;.*tcp&quot;&#125; &gt; 0.500\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;探测 '&#123;&#123; $labels.instance &#125;&#125;' Service 的TCP响应时间超过了500毫秒。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的 '&#123;&#123; $labels.service_name &#125;&#125;' Service资源 '&#123;&#123; $labels.instance &#125;&#125;' 当前响应时长为 &#123;&#123; $value &#125;&#125; 秒。&quot;\n\n      - alert: Service的DNS解析响应时间过长\n        expr: probe_dns_lookup_time_seconds&#123;job=~&quot;.*tcp&quot;&#125; &gt; 0.500\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;探测 '&#123;&#123; $labels.instance &#125;&#125;' Service 的DNS解析响应时间超过了500毫秒。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中的 '&#123;&#123; $labels.service_name &#125;&#125;' Service资源 '&#123;&#123; $labels.instance &#125;&#125;' 当前响应时长为 &#123;&#123; $value &#125;&#125; 秒。&quot;\t\n</code></pre>\n<h5 id=\"712-监控kubernetes集群ingress资源\"><a class=\"anchor\" href=\"#712-监控kubernetes集群ingress资源\">#</a> 7.12 监控 Kubernetes 集群 Ingress 资源</h5>\n<h6 id=\"7121-为何需要监控ingress资源\"><a class=\"anchor\" href=\"#7121-为何需要监控ingress资源\">#</a> 7.12.1 为何需要监控 Ingress 资源</h6>\n<p>监控 Ingress 对应的域名，主要是为了确保⽤户，能时刻访问到对应域名所提供的服务；监控域名维度如下；</p>\n<ol>\n<li>\n<p>HTTP 请求延迟：监控站点处理请求的延迟，如果请求延迟过⾼可以推送告警消息，这样就可以第⼀时间进⾏处理。</p>\n</li>\n<li>\n<p>证书过期时间：监控 TLS/SSL 证书的有效期，以便及时更新证书，避免因为证书过期造成访问中断。</p>\n</li>\n<li>\n<p>可⽤性：持续检查 Ingress 绑定的域名是否可被持续访问，确保⽤户的访问不会中断。</p>\n</li>\n</ol>\n<p>为了实现这样的监控，通常会利⽤ Blackbox Exporter 的 HTTP 探测功能来检查 Ingress 对应域名的健康状态和响应时间。</p>\n<p>之前 Blackbox 监控⽅式⽐较固定，不够灵活。为了改进这⼀点，在监控 Ingress 时，我们可以将监控⽬标配置为⾃动发现机制。这样，每当有新的 ingress 出现或现有 ingress 发⽣变化时，监控系统能够⾃动识别并开始监控，⽽不需要⼿动更新 Prometheus 的配置。</p>\n<pre><code>  - job_name: 'blackbox_http'\n    metrics_path: /probe # metrics的path这次不是/metrics，⽽是/probe\n    params: # 传递参数\n      module: [http_2xx] # 调⽤哪个模块进⾏探测\n    static_configs:\n    - targets: [&quot;https://www.xuliangwei.com&quot;,&quot;http://www.oldxu.net&quot;,&quot;https://www.baidu.com&quot;,&quot;http://httpbin.org/status/400&quot;,&quot;https://httpstat.us/500&quot;,&quot;https://httpstat.us/502&quot;]\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: prom-node04.oldxu.net:9115\n      \n# relabel_configs是标签重写的配置，这⾥进⾏了三次操作：\n# 1、将⽬标地址（__address__）赋予给__param_target，这是Blackbox Exporter需要的⽬标target参数。\n# 2、将__param_target的内容复制到instance标签，这样Prometheus UI中显示的instance实例名称会是⽬标站点地址，⽽不是Blackbox的地址。\n# 3、最后，将实际发送探测请求的地址（__address__）设置为运⾏Blackbox Exporter的节点地址和端⼝（prom-node04.oldxu.net:9115），这样Prometheus就会向这个地址发送探测请求。\n</code></pre>\n<h6 id=\"7122-配置prometheus监控ingress\"><a class=\"anchor\" href=\"#7122-配置prometheus监控ingress\">#</a> 7.12.2 配置 Prometheus 监控 Ingress</h6>\n<ul>\n<li>1、添加⼀个新的 Job，名为： kube-blackbox-http ，协议是 http</li>\n<li>2、基于 Kubernetes 的 ingress 来⾃动发现所有的 Ingress 资源，⽽后进⾏监控。</li>\n<li>3、使⽤ relabel_configs，保留 __meta_kubernetes_namespace、__meta_kubernetes_ingress_name、__meta_kubernetes_ingress_class_name 这三个维度的标签。</li>\n</ul>\n<p>1、配置 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控kube-state-metrics\n      - job_name: &quot;kube-state-metrics&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n          regex: &quot;kube-state-metrics&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:8080\n          target_label: __address__\n\n        # 添加维度标签\n        - regex: __meta_kubernetes_service_label_(.*)\n          action: labelmap\n\n      # 监控kubelet(Pod)\n      - job_name: &quot;kube-kubelet&quot;\n        metrics_path: &quot;/metrics/cadvisor&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: node\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 添加标签的映射\n        relabel_configs:\n        - regex: __meta_kubernetes_node_label_(.*)\n          action: labelmap\n\n      # 监控service\n      - job_name: &quot;kube-blackbox-tcp&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [tcp_connect]         # 使用tcp_connect模块\n        kubernetes_sd_configs:\n        - role: service\n        relabel_configs:\n        - source_labels: [__address__]\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: (.*)\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          regex: (.*)\n          replacement: $1\n          target_label: service_name\n\n      # 监控ingress\n      - job_name: &quot;kube-blackbox-http&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [http_2xx]            # 使用http模块进行探测\n        kubernetes_sd_configs:\n        - role: ingress\n        relabel_configs:\n        # 协议有可能是http或https，因此需要根据抓取到的协议+端⼝，拼接出具体的探测示例\n        - source_labels: [__meta_kubernetes_ingress_scheme,__address__]\n          regex: (.*);(.*)\n          replacement: $1://$2\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_ingress_name]\n          target_label: ingress_name\n        - source_labels: [__meta_kubernetes_ingress_class_name]\n          target_label: ingress_class_name\n          \n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]#  kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n\n  # 监控kube-proxy\n  - job_name: &quot;kube-proxy&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n      regex: &quot;kube-proxy&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:10249\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控kube-state-metrics\n  - job_name: &quot;kube-state-metrics&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n      regex: &quot;kube-state-metrics&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:8080\n      target_label: __address__\n\n    # 添加维度标签\n    - regex: __meta_kubernetes_service_label_(.*)\n      action: labelmap\n\n  # 监控kubelet(Pod)\n  - job_name: &quot;kube-kubelet&quot;\n    metrics_path: &quot;/metrics/cadvisor&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: node\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 添加标签的映射\n    relabel_configs:\n    - regex: __meta_kubernetes_node_label_(.*)\n      action: labelmap\n\n  # 监控service\n  - job_name: &quot;kube-blackbox-tcp&quot;\n    metrics_path: &quot;/probe&quot;\n    params:\n      module: [tcp_connect]         # 使用tcp_connect模块\n    kubernetes_sd_configs:\n    - role: service\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: blackbox-svc:9115\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: (.*)\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_service_name]\n      regex: (.*)\n      replacement: $1\n      target_label: service_name\n\n  # 监控ingress\n  - job_name: &quot;kube-blackbox-http&quot;\n    metrics_path: &quot;/probe&quot;\n    params:\n      module: [http_2xx]            # 使用http模块进行探测\n    kubernetes_sd_configs:\n    - role: ingress\n    relabel_configs:\n    # 协议有可能是http或https，因此需要根据抓取到的协议+端⼝，拼接出具体的探测示例\n    - source_labels: [__meta_kubernetes_ingress_scheme,__address__]\n      regex: (.*);(.*)\n      replacement: $1://$2\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: blackbox-svc:9115\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_ingress_name]\n      target_label: ingress_name\n    - source_labels: [__meta_kubernetes_ingress_class_name]\n      target_label: ingress_class_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240317215901654.png\" alt=\"image-20240317215901654\" /></p>\n<p>5、检查此前创建好的 blackbox_http_rules.yml 告警规则⽂件</p>\n<pre><code> blackbox_http_rules.yml: |-\n    groups:\n    - name: Blackbox_http告警规则文件\n      rules:\n      - alert: 站点平均请求过长\n        expr: sum (avg_over_time(probe_http_duration_seconds[1m])) by (instance,job,namespace,ingress_name) &gt; 3\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名整体请求时间超过了3秒。&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名最近1分钟的平均请求时间超过3秒。当前平均请求时间：&#123;&#123; $value &#125;&#125;秒。&quot;\n\n      - alert: 站点阶段耗时过长\n        expr: |\n          (\n            probe_http_duration_seconds&#123;phase=&quot;connect&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;processing&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;resolve&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;tls&quot;&#125; &gt; 1 or\n            probe_http_duration_seconds&#123;phase=&quot;transfer&quot;&#125; &gt; 1\n          )\n        for: 1m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名在 '&#123;&#123; $labels.phase &#125;&#125;' 阶段耗时过长&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名在阶段 '&#123;&#123; $labels.phase &#125;&#125;' 的耗时超过0.5秒。当前耗时：&#123;&#123; $value &#125;&#125;秒。&quot;\n\n      - alert: 站点响应状态码异常\n        expr: probe_http_status_code &lt;= 199 or probe_http_status_code &gt;= 400\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名返回异常状态码&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名返回的状态码为 &#123;&#123; $value &#125;&#125;，表明请求可能存在问题。&quot;\n    \n      - alert: 重定向次数过多\n        expr: probe_http_redirects &gt; 5\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名重定向次数过多&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名在最近的探测中重定向次数超过5次。当前次数：&#123;&#123; $value &#125;&#125;次。&quot;\n\n      - alert: 证书即将过期&lt;30\n        expr: (probe_ssl_earliest_cert_expiry - time()) /86400 &lt; 30\n        for: 24h\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书即将过期&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 '&#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书将在 &#123;&#123; $value &#125;&#125; 天内过期。&quot;\n    \n      - alert: 证书即将过期&lt;7\n        expr: (probe_ssl_earliest_cert_expiry - time()) /86400 &lt; 7\n        for: 24h\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;&#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书即将过期&quot;\n          description: &quot;&#123;&#123; $labels.namespace &#125;&#125; 名称空间 &#123;&#123; $labels.instance &#125;&#125;' 域名的 SSL 证书将在 &#123;&#123; $value &#125;&#125; 天内过期。&quot;\n</code></pre>\n<h4 id=\"8-prometheus监控redis应用的pod\"><a class=\"anchor\" href=\"#8-prometheus监控redis应用的pod\">#</a> 8、Prometheus 监控 Redis 应⽤的 Pod</h4>\n<h5 id=\"81-监控redis应用场景说明\"><a class=\"anchor\" href=\"#81-监控redis应用场景说明\">#</a> 8.1 监控 Redis 应⽤场景说明</h5>\n<p>运⾏ redis 的 Pod，⽽后为其创建⼀个 Service，我们现在希望监控它的 Pod 状态，Pod 资源的使⽤，redis 的指标、以及 redis 的 Service 的延迟和存活性。</p>\n<ul>\n<li>1、redis 应⽤指标：可以在 Pod 中注⼊⼀个 redis_exporter 来抓取对应的 redis 指标，并暴露给 Prometheus；</li>\n<li>2、pod 的运⾏状态：kube-state-metrics 能⾃动获取，因此⽆需考虑；</li>\n<li>3、pod 的资源使⽤：kubelet 的 CadVisor 能⾃动获取到每个 Pod 的资源使⽤，因此⽆需考虑；</li>\n<li>4、Pod 的存活性以及延迟：可以通过 Blackbox 来监控 6379、9121 端⼝，在此前创建的 Blackbox-tcp 会⾃动的将这些 Service 资源给监控起来，因此⽆需考虑。</li>\n</ul>\n<h5 id=\"82-运行redis基础服务pod\"><a class=\"anchor\" href=\"#82-运行redis基础服务pod\">#</a> 8.2 运⾏ Redis 基础服务 Pod</h5>\n<p>1、在⼀个 Pod 中同时运⾏ Redis 和 Redis_exporter，清单⽂件如下：</p>\n<pre><code>[root@k8s-master01 08-redis-exporter]# cat 01-redis-deployment.yaml \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n      annotations:\n        prometheus.io/scrape: &quot;true&quot;\n        prometheus.io/scheme: &quot;http&quot;\n        prometheus.io/path: &quot;/metrics&quot;\n        prometheus.io/port: &quot;9121&quot;\n    spec:\n      containers:\n      - name: redis\n        image: redis:6\n        # 设定redis最大的内存，默认最大内存为0\n        command: [&quot;redis-server&quot;]\n        args: [&quot;--maxmemory&quot;, &quot;200mb&quot;]\n        ports:\n        - containerPort: 6379\n      - name: redis-exporter\n        image: oliver006/redis_exporter:v1.57.0\n        ports:\n        - containerPort: 9121\n</code></pre>\n<p>2、创建 Service 资源，需要暴露两个端⼝</p>\n<pre><code>[root@k8s-master01 08-redis-exporter]# cat 02-redis-service.yaml \nkind: Service\napiVersion: v1\nmetadata:\n  name: redis-svc\n  namespace: default\n  labels:\n    app: redis\nspec:\n  selector:\n    app: redis\n  ports:\n  - name: redis\n    port: 6379\n    targetPort: 6379\n  - name: exporter\n    port: 9121\n    targetPort: 9121\n</code></pre>\n<p>3、查看 Service 详情</p>\n<pre><code>[root@k8s-master01 08-redis-exporter]# kubectl apply -f .\n[root@k8s-master01 08-redis-exporter]#  kubectl describe service redis-svc\nName:              redis-svc\nNamespace:         default\nLabels:            app=redis\nAnnotations:       &lt;none&gt;\nSelector:          app=redis\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.140.137\nIPs:               10.96.140.137\n# 端点1\nPort:              redis  6379/TCP\nTargetPort:        6379/TCP\nEndpoints:         172.16.85.208:6379\n# 端点2\nPort:              exporter  9121/TCP\nTargetPort:        9121/TCP\nEndpoints:         172.16.85.208:9121\nSession Affinity:  None\nEvents:            &lt;none&gt;\n</code></pre>\n<h5 id=\"83-配置prometheus监控redis\"><a class=\"anchor\" href=\"#83-配置prometheus监控redis\">#</a> 8.3 配置 Prometheus 监控 Redis</h5>\n<ul>\n<li>1、添加⼀个新的 Job，名为： redis-pod</li>\n<li>2、基于 Kubernetes 的 endpints 来实现⾃动发现</li>\n<li>3、使⽤ relabel_configs，保留 <strong>address</strong> 地址对应的端⼝是 9121 的实例。</li>\n<li>4、使⽤ relabel_configs，保留 __meta_kubernetes_namespace、__meta_kubernetes_service_name、__meta_kubernetes_pod_name 这三个维度的标签。</li>\n</ul>\n<p>1、配置 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控kube-state-metrics\n      - job_name: &quot;kube-state-metrics&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n          regex: &quot;kube-state-metrics&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:8080\n          target_label: __address__\n\n        # 添加维度标签\n        - regex: __meta_kubernetes_service_label_(.*)\n          action: labelmap\n\n      # 监控kubelet(Pod)\n      - job_name: &quot;kube-kubelet&quot;\n        metrics_path: &quot;/metrics/cadvisor&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: node\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 添加标签的映射\n        relabel_configs:\n        - regex: __meta_kubernetes_node_label_(.*)\n          action: labelmap\n\n      # 监控service\n      - job_name: &quot;kube-blackbox-tcp&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [tcp_connect]         # 使用tcp_connect模块\n        kubernetes_sd_configs:\n        - role: service\n        relabel_configs:\n        - source_labels: [__address__]\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: (.*)\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          regex: (.*)\n          replacement: $1\n          target_label: service_name\n\n      # 监控ingress\n      - job_name: &quot;kube-blackbox-http&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [http_2xx]            # 使用http模块进行探测\n        kubernetes_sd_configs:\n        - role: ingress\n        relabel_configs:\n        # 协议有可能是http或https，因此需要根据抓取到的协议+端⼝，拼接出具体的探测示例\n        - source_labels: [__meta_kubernetes_ingress_scheme,__address__]\n          regex: (.*);(.*)\n          replacement: $1://$2\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_ingress_name]\n          target_label: ingress_name\n        - source_labels: [__meta_kubernetes_ingress_class_name]\n          target_label: ingress_class_name\n\n      # 监控redis\n      - job_name: &quot;kube-redis&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留端口为9121的Pod实例\n        relabel_configs:\n        - source_labels: [__address__]\n          regex: (.*):9121\n          action: keep\n\n        # 保留特定维度的标签\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          target_label: service_name\n        - source_labels: [__meta_kubernetes_pod_name]\n          target_label: pod_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s\n  scrape_timeout:  15s\n\n# 告警地址(填写AlertManager的负载均衡地址即可)\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets: [&quot;alertmanager-svc:9093&quot;]\n\n# 告警规则文件\nrule_files:\n  - &quot;/etc/prometheus/rules/*.yml&quot;\n\nscrape_configs:\n  - job_name: &quot;prometheus&quot;\n    metrics_path: &quot;/metrics&quot;\n    static_configs:\n    - targets: [&quot;localhost:9090&quot;]\n\n  # 监控Kubernetes的节点\n  - job_name: &quot;kube-nodes&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: node\n    relabel_configs:\n    - source_labels: [&quot;__address__&quot;]\n      regex: &quot;(.*):10250&quot;\n      replacement: &quot;$1:9100&quot;\n      target_label: __address__\n      action: replace\n    - regex: __meta_kubernetes_node_label_(.*)\n      replacement: $1\n      action: labelmap\n\n  # 监控APIServer\n  - job_name: &quot;kube-apiserver&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n    tls_config:\n      insecure_skip_verify: true   # 跳过证书验证\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 标签重写\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n      regex: &quot;apiserver&quot;\n      action: &quot;keep&quot;\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n    - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n      replacement: $1\n      action: labelmap\n\n\n  # 监控controllerManager\n  - job_name: &quot;kube-controller&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    # 仅保留标签名是component 值为kube-controller-manager\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-controller-manager&quot;\n      action: keep\n    # 替换抓取的实例端口为10257\n    - source_labels: [__address__]\n      regex: (.*)\n      replacement: $1:10257\n      target_label: __address__\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控Scheduler\n  - job_name: &quot;kube-schduler&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: pod\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 基于标签进行过滤\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;kube-scheduler&quot;\n      action: keep\n\n    # 修订抓取的端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:10259\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控etcd\n  - job_name: &quot;kube-etcd&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n      regex: &quot;etcd&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__address__&quot;]\n      regex: (.*)\n      replacement: $1:2381\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控CoreDNS\n  - job_name: &quot;kube-dns&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n      regex: &quot;kube-dns&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:9153\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n    - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: service_name\n\n  # 监控kube-proxy\n  - job_name: &quot;kube-proxy&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: pod\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n      regex: &quot;kube-proxy&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:10249\n      target_label: __address__\n\n    # 添加维度标签\n    - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: namespace\n    - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n      regex: &quot;(.*)&quot;\n      replacement: $1\n      target_label: pod_name\n\n  # 监控kube-state-metrics\n  - job_name: &quot;kube-state-metrics&quot;\n    metrics_path: &quot;/metrics&quot;\n    scheme: http\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留对应标签的Pod\n    relabel_configs:\n    - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n      regex: &quot;kube-state-metrics&quot;\n      action: keep\n\n    # 修订端口\n    - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n      regex: (.*)\n      replacement: $1:8080\n      target_label: __address__\n\n    # 添加维度标签\n    - regex: __meta_kubernetes_service_label_(.*)\n      action: labelmap\n\n  # 监控kubelet(Pod)\n  - job_name: &quot;kube-kubelet&quot;\n    metrics_path: &quot;/metrics/cadvisor&quot;\n    scheme: https\n    kubernetes_sd_configs:\n    - role: node\n    tls_config:\n      insecure_skip_verify: true\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    # 添加标签的映射\n    relabel_configs:\n    - regex: __meta_kubernetes_node_label_(.*)\n      action: labelmap\n\n  # 监控service\n  - job_name: &quot;kube-blackbox-tcp&quot;\n    metrics_path: &quot;/probe&quot;\n    params:\n      module: [tcp_connect]         # 使用tcp_connect模块\n    kubernetes_sd_configs:\n    - role: service\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: blackbox-svc:9115\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: (.*)\n      replacement: $1\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_service_name]\n      regex: (.*)\n      replacement: $1\n      target_label: service_name\n\n  # 监控ingress\n  - job_name: &quot;kube-blackbox-http&quot;\n    metrics_path: &quot;/probe&quot;\n    params:\n      module: [http_2xx]            # 使用http模块进行探测\n    kubernetes_sd_configs:\n    - role: ingress\n    relabel_configs:\n    # 协议有可能是http或https，因此需要根据抓取到的协议+端⼝，拼接出具体的探测示例\n    - source_labels: [__meta_kubernetes_ingress_scheme,__address__]\n      regex: (.*);(.*)\n      replacement: $1://$2\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: blackbox-svc:9115\n    # 保留特定标签\n    - source_labels: [__meta_kubernetes_namespace]\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_ingress_name]\n      target_label: ingress_name\n    - source_labels: [__meta_kubernetes_ingress_class_name]\n      target_label: ingress_class_name\n\n  # 监控redis\n  - job_name: &quot;kube-redis&quot;\n    metrics_path: &quot;/metrics&quot;\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    # 保留端口为9121的Pod实例\n    relabel_configs:\n    - source_labels: [__address__]\n      regex: (.*):9121\n      action: keep\n\n    # 保留特定维度的标签\n    - source_labels: [__meta_kubernetes_namespace]\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_service_name]\n      target_label: service_name\n    - source_labels: [__meta_kubernetes_pod_name]\n      target_label: pod_name\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240318214141751.png\" alt=\"image-20240318214141751\" /></p>\n<p>5、检查此前创建好的 redis_rules.yml 告警规则⽂件</p>\n<pre><code>  redis_rules.yml: |-\n    groups:\n    - name: redis告警规则\n      rules:\n      - alert: Redis实例宕机\n        expr: redis_up == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例宕机&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod在过去5分钟内无法连接。&quot;\n\n      - alert: Redis连接数过高\n        expr: redis_connected_clients / redis_config_maxclients * 100 &gt; 80\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例连接数超过80%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod当前连接数占最大连接数的比率超过80%。当前比率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis连接被拒绝\n        expr: increase(redis_rejected_connections_total[1h]) &gt; 0\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例有连接被拒绝&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod在过去1小时内有连接被拒绝。当前被拒绝的连接数: &#123;&#123; $value &#125;&#125;。&quot;\n\n      - alert: Redis内存使用率过高\n        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 &gt; 80\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例内存使用率超过80%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod的内存使用率超过配置的最大内存值的80%。当前内存使用率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis缓存命中率低\n        expr: |\n          irate(redis_keyspace_hits_total[5m])\n          / \n          (irate(redis_keyspace_hits_total[5m]) + irate(redis_keyspace_misses_total[5m])) * 100 &lt; 90\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例缓存命中率低于90%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod最近5分钟内的缓存命中率低于90%。当前命中率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis即将过期的Key数量过多\n        expr: |\n          sum(redis_db_keys_expiring) by (instance, job, namespace,pod_name,db)\n          / \n          sum(redis_db_keys) by (instance, job, namespace,pod_name,db) * 100 &gt; 50\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例中的 '&#123;&#123; $labels.db &#125;&#125;' 数据库有大量即将过期的Key&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod中的 '&#123;&#123; $labels.db &#125;&#125;' 数据库有超过50%的Key即将过期。当前过期比率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: RedisRDB备份失败\n        expr: redis_rdb_last_bgsave_status == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例 RDB备份失败&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod最近的RDB备份失败。&quot;\n\n      - alert: RedisRDB备份时间过长\n        expr: redis_rdb_last_bgsave_duration_sec &gt; 3 and redis_rdb_last_bgsave_status == 1\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例 RDB备份成功但耗时超过3秒&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod, RDB备份成功但耗时超过了3秒。持续时间: &#123;&#123; $value &#125;&#125;秒。&quot;\n\n      - alert: RedisRDB备份过期\n        expr: (time() - redis_rdb_last_save_timestamp_seconds) &gt; 36000\n        for: 24h\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例超过10小时未进行RDB备份&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod已超过10小时没有生成新的RDB备份文件。&quot;\n\n      - alert: Redis命令拒绝率过高\n        expr: |\n          sum(irate(redis_commands_rejected_calls_total[5m])) by (instance,job,namespace,pod_name)\n          / \n          sum(irate(redis_commands_total[5m])) by (instance,job,namespace,pod_name) * 100 &gt; 25\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例命令拒绝率超过25%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod的命令拒绝率超过了25%。当前拒绝率: &#123;&#123; $value &#125;&#125;%。&quot;\n\n      - alert: Redis命令平均响应时间过长\n        expr: |\n          sum(rate(redis_commands_duration_seconds_total[5m])) by (instance,job,namespace,pod_name)\n          / \n          sum(rate(redis_commands_processed_total[5m])) by (instance,job,namespace,pod_name) &gt; 0.250\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' Redis实例命令平均响应时间超过250ms&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间中 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod的执行命令平均响应时间超过了250毫秒。当前平均响应时间: &#123;&#123; $value &#125;&#125;秒。&quot;\n</code></pre>\n<h4 id=\"9-prometheus监控java业务应用的pod\"><a class=\"anchor\" href=\"#9-prometheus监控java业务应用的pod\">#</a> 9、Prometheus 监控 java 业务应⽤的 Pod</h4>\n<h5 id=\"91-监控业务应用场景说明\"><a class=\"anchor\" href=\"#91-监控业务应用场景说明\">#</a> 9.1 监控业务应⽤场景说明</h5>\n<p>运⾏ javaapp 的业务应⽤ Pod，⽽后为其创建⼀个 Service、Ingress，现在我们希望监控 Pod 状态，Pod 资源的使⽤，jvm 内存相关指标、Service 的 TCP 检测、以及域名响应状态、延迟、存活性等检测。</p>\n<ul>\n<li>\n<p>1、java 应⽤指标：在初始化容器运⾏⼀个 jmx_exporter 的容器，并将相关的 jar 和 config.yaml 共享给主容器，主容器通过 JVM 环境变量传递相关启动参数，完成 jvm 的监控；</p>\n</li>\n<li>\n<p>2、pod 的运⾏状态：kube-state-metrics 能⾃动获取，因此⽆需考虑；</p>\n</li>\n<li>\n<p>3、pod 的资源使⽤：kubelet 的 CadVisor 能⾃动获取到每个 Pod 的资源使⽤，因此⽆需考虑；</p>\n</li>\n<li>\n<p>4、service 的存活性以及延迟：通过此前 kube-blackbox-tcp，能⾃动监控其 Service 的 8080 端⼝和 12345 端⼝；</p>\n</li>\n<li>\n<p>5、ingress 的 http 状态监控，通过此前 kube-blackbox-http，能⾃动监控其 ingress 的域名状态；</p>\n</li>\n</ul>\n<h5 id=\"92-运行业务应用容器pod\"><a class=\"anchor\" href=\"#92-运行业务应用容器pod\">#</a> 9.2 运⾏业务应⽤容器 Pod</h5>\n<p>1、由于官⽅没有提供 jmx_prometheus 的镜像，因此需要先⾃⾏制作镜像。（也可以直接使⽤我制作好的镜像 oldxu3957/jmx_prometheus:v0.20.0 ）</p>\n<pre><code>[root@k8s-master01 dockerfile]# wget https://repo.maven.apache.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.20.0/jmx_prometheus_javaagent-0.20.0.jar\n\n[root@k8s-master01 dockerfile]# cat config.yaml\nrules:\n- pattern: &quot;.*&quot;\n\n# Dockerfile⽂件\n[root@prom-node03 jmx_exporter]# cat Dockerfile\nFROM alpine:latest\nENV VERSION=&quot;0.20.0&quot;\nENV DIR=/jmx\nCOPY ./config.yaml $&#123;DIR&#125;/config.yaml\nCOPY ./jmx_prometheus_javaagent-$&#123;VERSION&#125;.jar $&#123;DIR&#125;/jmx_prometheus.jar\n</code></pre>\n<p>2、运⾏ java 应⽤ Pod</p>\n<pre><code>[root@k8s-master01 09-java-exporter]# cat 01-javaapp-deployment.yaml \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: java-app\n  namespace: default\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: java\n  template:\n    metadata:\n      labels:\n        app: java\n    spec:\n      volumes:\n      - name: javaagent\n        emptyDir: &#123;&#125;\n      initContainers:                # 运⾏初始化容器（将⽂件夹整体拷⻉⾄javaagent共享卷）\n      - name: jmx-prometheus\n        image: oldxu3957/jmx_prometheus:v0.20.0\n        command: [&quot;sh&quot;,&quot;-c&quot;,&quot;cp -rp /jmx /data/&quot;]\n        volumeMounts:\n        - name: javaagent\n          mountPath: /data\n      containers:\n      - name: javaapp\n        image: oldxu3957/javaapp:v1.0\n        env:\n        - name: JAVA_TOOL_OPTIONS     # 通过JAVA_TOOL_OPTIONS传递JVM相关参数\n          value: &quot;-Xms100m -Xmx100m \\\n                 -javaagent:/agent/jmx/jmx_prometheus.jar=12345:/agent/jmx/config.yaml&quot;\n        volumeMounts:\n        - name: javaagent\n          mountPath: /agent\n        ports:\n        - name: java\n          containerPort: 8080\n        - name: jmx\n          containerPort: 12345\n        resources:\n          requests:\n            cpu: 100m\n            memory: 200Mi\n          limits:\n            cpu: 100m\n            memory: 200Mi\n</code></pre>\n<h5 id=\"93-对外发布java业务应用\"><a class=\"anchor\" href=\"#93-对外发布java业务应用\">#</a> 9.3 对外发布 java 业务应⽤</h5>\n<p>1、创建 Service，需要暴露 8080 端⼝和 12345 端⼝</p>\n<pre><code>[root@k8s-master01 09-java-exporter]# cat 02-javaapp-service.yaml \nkind: Service\napiVersion: v1\nmetadata:\n  name: javaapp-svc\n  namespace: default\n  labels:\n    app: java\n  annotations:\n    prometheus.io/scrape: &quot;true&quot;\n    prometheus.io/scheme: &quot;http&quot;\n    prometheus.io/path: &quot;/metrics&quot;\n    prometheus.io/port: &quot;12345&quot;\nspec:\n  selector:\n    app: java\n  ports:\n  - name: javaapp\n    port: 8080\n    targetPort: 8080\n  - name: jmx\n    port: 12345\n    targetPort: 12345\n</code></pre>\n<p>2、创建 Ingress</p>\n<pre><code>[root@k8s-master01 09-java-exporter]# cat 03-javaapp-ingress.yaml \napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: javaapp-ingress\n  namespace: default\nspec:\n  ingressClassName: &quot;nginx&quot;\n  rules:\n  - host: &quot;javaapp.hmallleasing.com&quot;\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: javaapp-svc\n            port:\n              number: 8080\n</code></pre>\n<p>3、更新资源清单</p>\n<pre><code>[root@k8s-master01 09-java-exporter]# kubectl apply -f .\n</code></pre>\n<h5 id=\"94-配置prometheus监控业务应用\"><a class=\"anchor\" href=\"#94-配置prometheus监控业务应用\">#</a> 9.4 配置 Prometheus 监控业务应⽤</h5>\n<ul>\n<li>1、添加⼀个新的 Job，名为： java-pod</li>\n<li>2、基于 Kubernetes 的 endpints 来实现⾃动发现</li>\n<li>3、使⽤ relabel_configs，仅抓取 <strong>address</strong> 地址对应的端⼝是 12345 的实例。</li>\n<li>4、使⽤ relabel_configs，保留 __meta_kubernetes_namespace、__meta_kubernetes_service_name、__meta_kubernetes_pod_name 这三个维度的标签。</li>\n</ul>\n<p>1、配置 Prometheus</p>\n<pre><code>[root@k8s-master01 04-prometheus]# cat 01-prom-configs-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prom-configs\n  namespace: monitoring\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval: 15s\n      scrape_timeout:  15s\n    \n    # 告警地址(填写AlertManager的负载均衡地址即可)\n    alerting:\n      alertmanagers:\n      - static_configs:\n        - targets: [&quot;alertmanager-svc:9093&quot;]\n    \n    # 告警规则文件\n    rule_files:\n      - &quot;/etc/prometheus/rules/*.yml&quot;\n\n    scrape_configs:\n      - job_name: &quot;prometheus&quot;\n        metrics_path: &quot;/metrics&quot;\n        static_configs:\n        - targets: [&quot;localhost:9090&quot;]\n\n      # 监控Kubernetes的节点\n      - job_name: &quot;kube-nodes&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: node\n        relabel_configs:\n        - source_labels: [&quot;__address__&quot;]\n          regex: &quot;(.*):10250&quot;\n          replacement: &quot;$1:9100&quot;\n          target_label: __address__\n          action: replace\n        - regex: __meta_kubernetes_node_label_(.*)\n          replacement: $1\n          action: labelmap\n\n      # 监控APIServer\n      - job_name: &quot;kube-apiserver&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n        tls_config:\n          insecure_skip_verify: true   # 跳过证书验证\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 标签重写\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_component&quot;]  #保留label为apiserver实例\n          regex: &quot;apiserver&quot;\n          action: &quot;keep&quot;\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]        #匹配__meta_kubernetes_namespace值，并赋值给namespace\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]    #__meta_kubernetes_service_name值并赋值给service_name\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n        - regex: __meta_kubernetes_service_label_(.*)        #通过标签映射获取标签\n          replacement: $1\n          action: labelmap\n\n\n      # 监控controllerManager\n      - job_name: &quot;kube-controller&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        # 仅保留标签名是component 值为kube-controller-manager\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-controller-manager&quot;\n          action: keep\n        # 替换抓取的实例端口为10257\n        - source_labels: [__address__]\n          regex: (.*)\n          replacement: $1:10257\n          target_label: __address__\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控Scheduler\n      - job_name: &quot;kube-schduler&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: pod\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 基于标签进行过滤\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;kube-scheduler&quot;\n          action: keep\n\n        # 修订抓取的端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:10259\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控etcd\n      - job_name: &quot;kube-etcd&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_component&quot;]\n          regex: &quot;etcd&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__address__&quot;]\n          regex: (.*)\n          replacement: $1:2381\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控CoreDNS\n      - job_name: &quot;kube-dns&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_k8s_app&quot;]\n          regex: &quot;kube-dns&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:9153\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n        - source_labels: [&quot;__meta_kubernetes_service_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: service_name\n\n      # 监控kube-proxy\n      - job_name: &quot;kube-proxy&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: pod\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_pod_label_k8s_app&quot;]\n          regex: &quot;kube-proxy&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:10249\n          target_label: __address__\n\n        # 添加维度标签\n        - source_labels: [&quot;__meta_kubernetes_namespace&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: namespace\n        - source_labels: [&quot;__meta_kubernetes_pod_name&quot;]\n          regex: &quot;(.*)&quot;\n          replacement: $1\n          target_label: pod_name\n\n      # 监控kube-state-metrics\n      - job_name: &quot;kube-state-metrics&quot;\n        metrics_path: &quot;/metrics&quot;\n        scheme: http\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留对应标签的Pod\n        relabel_configs:\n        - source_labels: [&quot;__meta_kubernetes_service_label_app_kubernetes_io_name&quot;]\n          regex: &quot;kube-state-metrics&quot;\n          action: keep\n\n        # 修订端口\n        - source_labels: [&quot;__meta_kubernetes_pod_ip&quot;]\n          regex: (.*)\n          replacement: $1:8080\n          target_label: __address__\n\n        # 添加维度标签\n        - regex: __meta_kubernetes_service_label_(.*)\n          action: labelmap\n\n      # 监控kubelet(Pod)\n      - job_name: &quot;kube-kubelet&quot;\n        metrics_path: &quot;/metrics/cadvisor&quot;\n        scheme: https\n        kubernetes_sd_configs:\n        - role: node\n        tls_config:\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        # 添加标签的映射\n        relabel_configs:\n        - regex: __meta_kubernetes_node_label_(.*)\n          action: labelmap\n\n      # 监控service\n      - job_name: &quot;kube-blackbox-tcp&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [tcp_connect]         # 使用tcp_connect模块\n        kubernetes_sd_configs:\n        - role: service\n        relabel_configs:\n        - source_labels: [__address__]\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: (.*)\n          replacement: $1\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          regex: (.*)\n          replacement: $1\n          target_label: service_name\n\n      # 监控ingress\n      - job_name: &quot;kube-blackbox-http&quot;\n        metrics_path: &quot;/probe&quot;\n        params:\n          module: [http_2xx]            # 使用http模块进行探测\n        kubernetes_sd_configs:\n        - role: ingress\n        relabel_configs:\n        # 协议有可能是http或https，因此需要根据抓取到的协议+端⼝，拼接出具体的探测示例\n        - source_labels: [__meta_kubernetes_ingress_scheme,__address__]\n          regex: (.*);(.*)\n          replacement: $1://$2\n          target_label: __param_target\n        - source_labels: [__param_target]\n          target_label: instance\n        - target_label: __address__\n          replacement: blackbox-svc:9115\n        # 保留特定标签\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_ingress_name]\n          target_label: ingress_name\n        - source_labels: [__meta_kubernetes_ingress_class_name]\n          target_label: ingress_class_name\n\n      # 监控redis\n      - job_name: &quot;kube-redis&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留端口为9121的Pod实例\n        relabel_configs:\n        - source_labels: [__address__]\n          regex: (.*):9121\n          action: keep\n\n        # 保留特定维度的标签\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          target_label: service_name\n        - source_labels: [__meta_kubernetes_pod_name]\n          target_label: pod_name\n\n      # 监控java\n      - job_name: &quot;kube-java-pod&quot;\n        metrics_path: &quot;/metrics&quot;\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        # 保留端口为12345的Pod实例\n        relabel_configs:\n        - source_labels: [__address__]\n          regex: (.*):12345\n          action: keep\n\n        # 保留特定维度的标签\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          target_label: service_name\n        - source_labels: [__meta_kubernetes_pod_name]\n          target_label: pod_name\n\n[root@k8s-master01 04-prometheus]# kubectl apply -f 01-prom-configs-configmap.yaml\n</code></pre>\n<p>2、检查配置是否更新</p>\n<pre><code>[root@k8s-master01 04-prometheus]# kubectl exec -it prometheus-0 -n monitoring -- cat /etc/prometheus/prometheus.yml\n</code></pre>\n<p>3、重新加载 Prometheus，然后检查节点的 targets，能正常监控 Kubernets 的节点</p>\n<pre><code>[root@k8s-master01 04-prometheus]# curl -X POST http://k8s-prom.hmallleasing.com/-/reload\n</code></pre>\n<p>4、检查 Prometheus 抓取的结果</p>\n<h5 id=\"95-检查此前创建好的-jvm_rulesyml-告警规则文件\"><a class=\"anchor\" href=\"#95-检查此前创建好的-jvm_rulesyml-告警规则文件\">#</a> 9.5 检查此前创建好的 jvm_rules.yml 告警规则⽂件</h5>\n<pre><code>  jvm_rules.yml: |-\n    groups:\n    - name: &quot;JVM告警规则&quot;\n      rules:\n      - alert: JVM堆内存使用率过高\n        expr: jvm_memory_bytes_used&#123;area=&quot;heap&quot;,&#125; / jvm_memory_bytes_max&#123;area=&quot;heap&quot;,&#125; * 100 &gt; 90\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 实例的JVM 堆内存使用率超过80%&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间下的 '&#123;&#123; $labels.pod_name &#125;&#125;' PodJVM堆内存使用率超过80%, 当前使用率是 &#123;&#123; $value &#125;&#125;%&quot;\n\n      - alert: JVMGC时间过长\n        expr: sum (rate(jvm_gc_collection_seconds_sum[5m]) / rate(jvm_gc_collection_seconds_count[5m])) by (instance,job,gc,namespace,pod_name) &gt; 1\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;'&#123;&#123; $labels.instance &#125;&#125;' 实例的JVM  GC时间超过了1秒。&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间下的 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod使用 &#123;&#123; $labels.gc &#125;&#125; GC垃圾回收算法时间超过1s，当前值 &#123;&#123; $value &#125;&#125;秒&quot;\n\n      - alert: JVM死锁线程过多\n        expr: min_over_time(jvm_threads_deadlocked[5m]) &gt; 0\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: &quot;JVM检测到'&#123;&#123; $labels.instance &#125;&#125;' 实例有死锁线程&quot;\n          description: &quot;'&#123;&#123; $labels.namespace &#125;&#125;' 名称空间下的 '&#123;&#123; $labels.pod_name &#125;&#125;' Pod，在过去5分钟检测到死锁线程, 当前死锁线程数是 &#123;&#123; $value &#125;&#125;。&quot;\n</code></pre>\n",
            "tags": [
                "Prometheus"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/4081185382.html",
            "url": "http://ixuyong.cn/posts/4081185382.html",
            "title": "Prometheus监控实战（四）",
            "date_published": "2025-06-29T14:03:48.000Z",
            "content_html": "<h3 id=\"prometheus告警服务\"><a class=\"anchor\" href=\"#prometheus告警服务\">#</a> <strong>Prometheus 告警服务</strong></h3>\n<h4 id=\"一-aleartmanager部署\"><a class=\"anchor\" href=\"#一-aleartmanager部署\">#</a> 一. AleartManager 部署</h4>\n<h5 id=\"11-aleartmanager安装\"><a class=\"anchor\" href=\"#11-aleartmanager安装\">#</a> 1.1 AleartManager 安装</h5>\n<p>1、访问 AlertManager 的 github，获取 AlertManager 的下载地址， <a href=\"https://github.com/prometheus/alertmanager/releases\">https://github.com/prometheus/alertmanager/releases</a></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 下载 AlertManager</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/prometheus/alertmanager/releases/download/v0.26.0/alertmanager-0.26.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 加速地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/prometheus/alertmanager/releases/download/v0.26.0/alertmanager-0.26.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#2. 解压 AlertManager</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf alertmanager-0.26.0.linux-amd64.tar.gz -C /etc/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/alertmanager-0.26.0.linux-amd64/ /etc/alertmanager</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#3. 查看 AlertManager ⽬录结构</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  ll /etc/alertmanager/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>total <span class=\"token number\">62504</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-rwxr-xr-x <span class=\"token number\">1</span> <span class=\"token number\">3434</span> <span class=\"token number\">3434</span> <span class=\"token number\">35410965</span> Aug <span class=\"token number\">24</span>  <span class=\"token number\">2023</span> alertmanager</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> <span class=\"token number\">3434</span> <span class=\"token number\">3434</span>      <span class=\"token number\">356</span> Aug <span class=\"token number\">24</span>  <span class=\"token number\">2023</span> alertmanager.yml</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>-rwxr-xr-x <span class=\"token number\">1</span> <span class=\"token number\">3434</span> <span class=\"token number\">3434</span> <span class=\"token number\">28566971</span> Aug <span class=\"token number\">24</span>  <span class=\"token number\">2023</span> amtool</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> <span class=\"token number\">3434</span> <span class=\"token number\">3434</span>    <span class=\"token number\">11357</span> Aug <span class=\"token number\">24</span>  <span class=\"token number\">2023</span> LICENSE</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> <span class=\"token number\">3434</span> <span class=\"token number\">3434</span>      <span class=\"token number\">457</span> Aug <span class=\"token number\">24</span>  <span class=\"token number\">2023</span> NOTICE</pre></td></tr></table></figure><h5 id=\"12-aleartmanager配置\"><a class=\"anchor\" href=\"#12-aleartmanager配置\">#</a> 1.2 AleartManager 配置</h5>\n<p>1、定义 Alertmanager 的配置⽂件，设定发件⼈的邮箱，以及路由匹配规则，和接收⼈ （group_wait 与 group_interval 区别）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp /etc/alertmanager/alertmanager.yml /etc/alertmanager/alertmanager.yml.bak</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/alertmanager/alertmanager.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  resolve_timeout: 2h    <span class=\"token comment\"># 已经触发了告警的消息，在多长时间内没有收到该告警的消息，则会自动将该告警标记为已解决。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  smtp_smarthost: <span class=\"token string\">'smtp.qq.com:25'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  smtp_from: <span class=\"token string\">'373370405@qq.com'</span>  <span class=\"token comment\"># 发件人邮件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  smtp_auth_username: <span class=\"token string\">'373370405@qq.com'</span>  <span class=\"token comment\"># 发件人用户名</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  smtp_auth_password: <span class=\"token string\">'jmtpwlkuijaybhic'</span> <span class=\"token comment\"># 发件人密码 [授权码]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  smtp_hello: <span class=\"token string\">'qq.com'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  smtp_require_tls: <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 所有报警信息进入后的根路由，用来设置报警的分发策略</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>route:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  group_by: <span class=\"token punctuation\">[</span><span class=\"token string\">'alertname'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#告警信息会根据告警名称分组，同名的告警消息会被归到一组，然后一起发送。（一个学校的一起搭⻋回家）</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  group_wait: 30s     <span class=\"token comment\"># 当一组新告警产生时，系统会等待 30 秒，以便把这段时间内相同组的其他告警一起合并发送。（发车时间，保不齐在等待的 30s 内会有新的同校学生上车）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  group_interval: 1m  <span class=\"token comment\"># 已经发送了一个分组的告警通知之后，即使又有新的相同分组的告警到来，也需要等待至少 1 分钟后才会发送该分组的告警通知。（类似于发车间隔，没赶上就得等）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  repeat_interval: 5m <span class=\"token comment\"># 如果同一个组中的报警信息已经发送成功了，下一次这个组发送告警的时间间隔（重复发送相同告警的时间间隔）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  receiver: default   <span class=\"token comment\"># 默认的 receiver：如果一个报警没有被一个 route 匹配，则发送给默认的接收器</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>receivers:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>- name: <span class=\"token string\">'default'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  email_configs:</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - to: <span class=\"token string\">'373370405@qq.com'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    send_resolved: <span class=\"token boolean\">true</span> <span class=\"token comment\"># 接受告警恢复的通知</span></pre></td></tr></table></figure><p>2、检查 AlertManager 的配置⽂件是否正确</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  /etc/alertmanager/amtool check-config /etc/alertmanager/alertmanager.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Checking <span class=\"token string\">'/etc/alertmanager/alertmanager.yml'</span>  SUCCESS</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Found:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> - global config</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> - route</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> - <span class=\"token number\">0</span> inhibit rules</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> - <span class=\"token number\">1</span> receivers</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> - <span class=\"token number\">0</span> templates</pre></td></tr></table></figure><h5 id=\"13-alertmanager启动\"><a class=\"anchor\" href=\"#13-alertmanager启动\">#</a> 1.3 AlertManager 启动</h5>\n<p>1、配置 system 管理 alertmanager 启动和停⽌</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/alertmanager.service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>alertmanager</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/alertmanager/alertmanager <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  --web.listen-address<span class=\"token operator\">=</span>:9093 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token parameter variable\">--config.file</span><span class=\"token operator\">=</span>/etc/alertmanager/alertmanager.yml <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token parameter variable\">--storage.path</span><span class=\"token operator\">=</span>/etc/alertmanager/data <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token parameter variable\">--data.retention</span><span class=\"token operator\">=</span>120h</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start alertmanager</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable alertmanager</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9093</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9093                 :::*                    LISTEN      <span class=\"token number\">2648</span>/alertmanager</pre></td></tr></table></figure><p>2、访问 alertmanager，通过 <a href=\"http://IP:9093\">http://IP:9093</a> 访问</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/yuWRORp.png\" alt=\"image-20240305221644642.png\" /></p>\n<h5 id=\"14-alertmanager测试\"><a class=\"anchor\" href=\"#14-alertmanager测试\">#</a> 1.4 AlertManager 测试</h5>\n<p>1、使⽤ Go 编写的告警测试⼯具来验证告警合并功能。发送具有相同 alertname 名称，但不同内容的告警，以验证 AlertManager 是否会将它们合并成⼀个组。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 下载告警程序</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget http://file.oldxu.net/prometheus/Alert/alert_test_oldxu</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod +x alert_test_oldxu</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># alertname = 节点故障（--alertURL 指定 alertmanager 服务器所在的地址、端⼝以及接⼝）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>./alert_test_oldxu <span class=\"token parameter variable\">--alertURL</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://prom-node01.oldxu.net:9093/api/v1/alerts\"</span> <span class=\"token parameter variable\">--label</span><span class=\"token operator\">=</span><span class=\"token string\">\"alertname=节点故障,instance=prom-node01.oldxu.net,severity=critical,job=node_exporter\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>./alert_test_oldxu <span class=\"token parameter variable\">--alertURL</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://prom-node01.oldxu.net:9093/api/v1/alerts\"</span> <span class=\"token parameter variable\">--label</span><span class=\"token operator\">=</span><span class=\"token string\">\"alertname=节点故障,instance=prom-node02.oldxu.net,severity=critical,job=node_exporter\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># alertname=cpu 故障</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>./alert_test_oldxu <span class=\"token parameter variable\">--alertURL</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://prom-node01.oldxu.net:9093/api/v1/alerts\"</span> <span class=\"token parameter variable\">--label</span><span class=\"token operator\">=</span><span class=\"token string\">\"alertname=cpu故障,instance=prom-node01.oldxu.net,severity=critical,job=node_exporter\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>./alert_test_oldxu <span class=\"token parameter variable\">--alertURL</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://prom-node01.oldxu.net:9093/api/v1/alerts\"</span> <span class=\"token parameter variable\">--label</span><span class=\"token operator\">=</span><span class=\"token string\">\"alertname=cpu故障,instance=prom-node02.oldxu.net,severity=critical,job=node_exporter\"</span></pre></td></tr></table></figure><h4 id=\"二-prometheus对接aleartmanager\"><a class=\"anchor\" href=\"#二-prometheus对接aleartmanager\">#</a> 二. Prometheus 对接 AleartManager</h4>\n<h5 id=\"21-配置prom对接aleartmanager\"><a class=\"anchor\" href=\"#21-配置prom对接aleartmanager\">#</a> 2.1 配置 Prom 对接 AleartManager</h5>\n<p>1、编辑 prometheus.yml ⽂件，然后将告警接⼊⾄ AlertManager 组件；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Alertmanager 配置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>alerting:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  alertmanagers:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  - static_configs:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9093\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_http'</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 这次不是 /metrics，是 /probe</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    params: <span class=\"token comment\"># 传递参数</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>http_2xx<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 调哪个模块进探测</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.xuliangwei.com\"</span>,<span class=\"token string\">\"http://www.oldxu.net\"</span>,<span class=\"token string\">\"https://www.baidu.com\"</span>,<span class=\"token string\">\"http://httpbin.org/status/400\"</span>,<span class=\"token string\">\"https://httpstat.us/500\"</span>,<span class=\"token string\">\"https://httpstat.us/502\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_tcp'</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>tcp_connect<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 tcp_connect 模块</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:3306\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:6379\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_icmp'</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>icmp<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 icmp 模块</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_ssh'</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>ssh_banner<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使⽤ ssh_banner 模块</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:22\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  - job_name: <span class=\"token string\">'domain_exporter'</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 不是 /metrics，⽽是 /probe</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"nf-leasing.com\"</span>,<span class=\"token string\">\"hmallleasing.com\"</span>,<span class=\"token string\">\"jd.com\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"145\"></td><td><pre>      replacement: prom-node04.oldxu.net:9222</pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>  - job_name: <span class=\"token string\">\"pushgateway\"</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9091\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>2、由于 AlertManager 也对外提供了 Metrics 接⼝，我们可以直接将 AlertManager 纳⼊监控中来；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Alertmanager 配置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>alerting:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  alertmanagers:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  - static_configs:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9093\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_http'</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 这次不是 /metrics，是 /probe</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    params: <span class=\"token comment\"># 传递参数</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>http_2xx<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 调哪个模块进探测</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.xuliangwei.com\"</span>,<span class=\"token string\">\"http://www.oldxu.net\"</span>,<span class=\"token string\">\"https://www.baidu.com\"</span>,<span class=\"token string\">\"http://httpbin.org/status/400\"</span>,<span class=\"token string\">\"https://httpstat.us/500\"</span>,<span class=\"token string\">\"https://httpstat.us/502\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_tcp'</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>tcp_connect<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 tcp_connect 模块</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:3306\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:6379\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_icmp'</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>icmp<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 icmp 模块</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_ssh'</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>ssh_banner<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使⽤ ssh_banner 模块</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:22\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  - job_name: <span class=\"token string\">'domain_exporter'</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 不是 /metrics，⽽是 /probe</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"nf-leasing.com\"</span>,<span class=\"token string\">\"hmallleasing.com\"</span>,<span class=\"token string\">\"jd.com\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"145\"></td><td><pre>      replacement: prom-node04.oldxu.net:9222</pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>  - job_name: <span class=\"token string\">\"pushgateway\"</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9091\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>  - job_name: <span class=\"token string\">\"alertmanager\"</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9093\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>3、重新加载 Prometheus 服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"22-配置prometheus告警规则\"><a class=\"anchor\" href=\"#22-配置prometheus告警规则\">#</a> 2.2 配置 Prometheus 告警规则</h5>\n<p>1、在 Prometheus 服务器上编辑⼀个测试的告警规则</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/node_rules.yml </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: 节点告警规则</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  - alert: 节点处于Down状态</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    expr: up <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"节点处于Down状态,实例:\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\" 节点已关闭\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: 节点CPU使率超过80%</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - avg<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">\"主机CPU利率过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">\"该实例的CPU利用率低于20%，当前利用率：%。可能存在CPU资源浪费情况。\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: CPU饱和度过高</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">\"CPU饱和度过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">\"该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：%。需要立即检查系统负载情况。\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - alert: 主机内存不足</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes<span class=\"token punctuation\">)</span> / node_memory_MemTotal_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存使用率较高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      description: <span class=\"token string\">\"该实例的内存使用率持续2分钟高于80%，当前利用率：%\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - alert: 内存饱和度高</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存内存饱和度高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      description: <span class=\"token string\">\"SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过高，当前SWAP使用率为：%。\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  - alert: 磁盘空间告急</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span> / node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘 分区空间不足\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      description: <span class=\"token string\">\"实例  磁盘  分区空间使用率已超过 70%，当前使用率为 %，请及时处理。\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  - alert: 磁盘Inode空间告急</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_filesystem_files<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_files_free<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span> / node_filesystem_files<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘 分区Inode空间不足\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      description: <span class=\"token string\">\"实例  磁盘  分区的Inode空间使用率已超过 70%，，当前使用率为 %，请及时处理。\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  - alert: 磁盘IOPS写入较高</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">#expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 >60</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">#round 函数可以对值进行四舍五入，磁盘最大 IOPS 为 120 次 /s</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_disk_writes_completed_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">120</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      summary: <span class=\"token string\">\"实例  IOPS每秒写入次数超过120次/s\"</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      description: </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        当前磁盘IOPS写入饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼25--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        当前磁盘IOPS每秒写入最大 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼26--<span class=\"token operator\">></span> 次/s</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  - alert: 磁盘IOPS读取较高</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_disk_reads_completed_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">120</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      summary: <span class=\"token string\">\"实例  IOPS每秒读取次数超过120次/s\"</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        当前磁盘IOPS读取饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼28--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        当前磁盘IOPS每秒读取最⼤ <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼29--<span class=\"token operator\">></span> 次/s</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  - alert: 磁盘IO写入吞吐较高</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_written_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">1024</span> /1024 / <span class=\"token number\">30</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘IO写入每秒超过最高30MB/s\"</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        当前磁盘IO写入吞吐量的饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼31--<span class=\"token operator\">></span>%。</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        当前磁盘IO写入吞吐量每秒最大是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼32--<span class=\"token operator\">></span>MB/s</pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  - alert: 磁盘IO读取吞吐较高</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_read_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">1024</span> /1024 /30 * <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘IO读取每秒超过最大30MB/s\"</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        当前磁盘IO读取吞吐量的饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼34--<span class=\"token operator\">></span>%。</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        当前磁盘IO读取吞吐量每秒最大是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼35--<span class=\"token operator\">></span>MB/s</pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  - alert: 网络下载带宽异常</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    expr: max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_network_receive_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> / <span class=\"token number\">1024</span> / <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job,device<span class=\"token punctuation\">)</span> / <span class=\"token number\">50</span> * <span class=\"token number\">100</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>      summary: <span class=\"token string\">\"实例  的  接口下载流量已经超过公司实际50Mbps\"</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        当前下载带宽已经达到 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼38--<span class=\"token operator\">></span> Mbps/s</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        当前下载带宽使用率在 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼39--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  - alert: 网络上传带宽异常</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    expr: max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_network_transmit_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> / <span class=\"token number\">1024</span> / <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job,device<span class=\"token punctuation\">)</span> / <span class=\"token number\">50</span> * <span class=\"token number\">100</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>      summary: <span class=\"token string\">\"实例  的  接口上传流量已经超过公司实际50Mbps\"</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        当前上传带宽已经达到 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼42--<span class=\"token operator\">></span> Mbps/s</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        当前上传带宽使用率在 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼43--<span class=\"token operator\">></span>%</pre></td></tr></table></figure><h5 id=\"23-配置prometheus加载规则\"><a class=\"anchor\" href=\"#23-配置prometheus加载规则\">#</a> 2.3 配置 Prometheus 加载规则</h5>\n<p>为了能够让 Prometheus 能够定期评估告警规则，我们需要在 Prometheus 全局配置⽂件中通过 rule_files 指定告警规则⽂件的路径，⽽后 Prometheus 会定期评估这些告警规则， 当规则条件满⾜时，会向外部发送通知。</p>\n<p>1、配置 Prometheus 加载告警规则⽂件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Alertmanager 配置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>alerting:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  alertmanagers:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  - static_configs:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9093\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>2、检查 Prometheus 语法</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Checking /etc/prometheus/rules/node_rules.yml</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  SUCCESS: <span class=\"token number\">13</span> rules found</pre></td></tr></table></figure><p>3、重启 Prometheus 服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST http://localhost:9090/-/reload</pre></td></tr></table></figure><h5 id=\"24-触发规则并验证告警通知\"><a class=\"anchor\" href=\"#24-触发规则并验证告警通知\">#</a> 2.4 触发规则并验证告警通知</h5>\n<p>1、停⽌ node2 和 node03 的 node_exporter 服务，那么就会触发告警</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node02 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop node_exporter.service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop node_exporter.service</span></pre></td></tr></table></figure><p>2、检查 Prometheus 的 Alert ⻚⾯的状态是否处于 Firing</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/GiZA5Fd.png\" alt=\"11.png\" /></p>\n<p>3、检查 AlertManager 是否收到了告警</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/i9iZoxh.png\" alt=\"12.png\" /></p>\n<p>4、检查邮件是否能看到告警的信息，因为两条告警的 alertname 是⼀致的，因此它们会合并为⼀条消息发送出来。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/FwXQPdL.png\" alt=\"13.png\" /></p>\n<h5 id=\"25-自定义邮件告警模板\"><a class=\"anchor\" href=\"#25-自定义邮件告警模板\">#</a> 2.5 ⾃定义邮件告警模板</h5>\n<p>1、定义告警的通知模板和恢复模板</p>\n<pre><code>[root@prom-node01 ~]# mkdir /etc/alertmanager/template\n[root@prom-node01 ~]# cat /etc/alertmanager/template/email.tmpl\n&#123;&#123; define \"email.html\" &#125;&#125;\n&#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;\n&#123;&#123; range .Alerts &#125;&#125;\n&lt;h2 style=&quot;color: red;&quot;&gt;@告警通知&lt;/h2&gt;\n告警程序: AlertManager &lt;br&gt;\n告警级别: &#123;&#123; .Labels.severity &#125;&#125; &lt;br&gt;\n告警类型: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;\n故障主机: &#123;&#123; .Labels.instance &#125;&#125; &lt;br&gt;\n告警主题: &#123;&#123; .Annotations.summary &#125;&#125; &lt;br&gt;\n告警详情: &#123;&#123; .Annotations.description &#125;&#125; &lt;br&gt;\n触发时间: &#123;&#123; (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" &#125;&#125; &lt;br&gt;\n&#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;\n\n&#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;\n&#123;&#123; range .Alerts &#125;&#125;\n&lt;h2 style=&quot;color: green;&quot;&gt;@告警恢复&lt;/h2&gt;\n告警程序: AlertManager &lt;br&gt;\n告警级别: &#123;&#123; .Labels.severity &#125;&#125; &lt;br&gt;\n告警类型: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;\n告警主机: &#123;&#123; .Labels.instance &#125;&#125; &lt;br&gt;\n告警主题: &#123;&#123; .Annotations.summary &#125;&#125; &lt;br&gt;\n告警详情: &#123;&#123; .Annotations.description &#125;&#125; &lt;br&gt;\n触发时间: &#123;&#123; (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" &#125;&#125; &lt;br&gt;\n恢复时间: &#123;&#123; (.EndsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" &#125;&#125; &lt;br&gt;\n&#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;\n&#123;&#123; end &#125;&#125;\n</code></pre>\n<p>2、配置 AlertManager，引⽤该模板</p>\n<pre><code>[root@prom-node01 ~]# cat /etc/alertmanager/alertmanager.yml\nglobal:\n  resolve_timeout: 2h    # 已经触发了告警的消息，在多长时间内没有收到该告警的消息，则会自动将该告警标记为已解决。\n  smtp_smarthost: 'smtp.qq.com:25'\n  smtp_from: '373370405@qq.com'  # 发件人邮件\n  smtp_auth_username: '373370405@qq.com'  # 发件人用户名\n  smtp_auth_password: 'jmtpwlkuijaybhic' # 发件人密码[授权码]\n  smtp_hello: 'qq.com'\n  smtp_require_tls: false\n\n# 加载模板文件\ntemplates:\n  - '/etc/alertmanager/template/email.tmpl'\n \n# 所有报警信息进入后的根路由，用来设置报警的分发策略\nroute:\n  group_by: ['alertname'] # 告警信息会根据告警名称分组，同名的告警消息会被归到一组，然后一起发送。（一个学校的一起搭⻋回家）\n  group_wait: 30s     # 当一组新告警产生时，系统会等待30秒，以便把这段时间内相同组的其他告警一起合并发送。（发车时间，保不齐在等待的30s内会有新的同校学生上车）\n  group_interval: 1m  # 已经发送了一个分组的告警通知之后，即使又有新的相同分组的告警到来，也需要等待至少1分钟后才会发送该分组的告警通知。（类似于发车间隔，没赶上就得等）\n  repeat_interval: 5m # 如果同一个组中的报警信息已经发送成功了，下一次这个组发送告警的时间间隔（重复发送相同告警的时间间隔）\n  receiver: default   # 默认的receiver：如果一个报警没有被一个route匹配，则发送给默认的接收器\n  \nreceivers:\n- name: 'default'\n  email_configs:\n  - to: '373370405@qq.com'\n    send_resolved: true # 接受告警恢复的通知\n    html: '&#123;&#123; template \"email.html\" . &#125;&#125;' # 发送邮件内容，调用该模板进行渲染\n</code></pre>\n<p>3、检查 AlertManager 的配置⽂件是否正确</p>\n<pre><code>[root@prom-node01 ~]# /etc/alertmanager/amtool check-config /etc/alertmanager/alertmanager.yml\nChecking '/etc/alertmanager/alertmanager.yml'  SUCCESS\nFound:\n - global config\n - route\n - 0 inhibit rules\n - 1 receivers\n - 1 templates\n  SUCCESS\n</code></pre>\n<p>4、重新加载 AlertManager</p>\n<pre><code>[root@prom-node01 ~]#  curl -X POST http://localhost:9093/-/reload\n</code></pre>\n<p>5、触发告警，验证告警模板是否正常渲染</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240306200956695.png\" alt=\"image-20240306200956695\" /></p>\n<h4 id=\"三-alertmanager告警通知方式\"><a class=\"anchor\" href=\"#三-alertmanager告警通知方式\">#</a> 三. AlertManager 告警通知⽅式</h4>\n<h5 id=\"31-配置alert对接微信告警\"><a class=\"anchor\" href=\"#31-配置alert对接微信告警\">#</a> 3.1 配置 Alert 对接微信告警</h5>\n<p>企业微信告警，需要将发送告警的服务器域名添加到⽩名单，同时该服务器必须运⾏在公⽹，因此常规的企业微信告警没办法很好在本地实现。但是我们可以采⽤ webhook ⽅式来实现： Prometheus--&gt;AlertManager--&gt; ⾃定义 Webhook 程序 --&gt; 企业微信机器⼈ --&gt; 通知给对应的⽤户</p>\n<ul>\n<li>1. 访问企业微信官⽹， <a href=\"https://work.weixin.qq.com/\">https://work.weixin.qq.com/</a> ，注册⼀个账户。</li>\n<li>2. 创建⼀个群聊，并邀请⾄少两名其他成员加⼊，因为企业微信群聊⾄少需要三名成员才能启⽤。</li>\n<li>3. 在群组聊天中添加⼀个新的机器⼈。</li>\n<li>4. 记录机器⼈的 Webhook URL (Token)</li>\n</ul>\n<pre><code>https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=47ffbdd9-4308-4db0-aa08-f309546cc92d\n</code></pre>\n<p>1、下载并运⾏ webhook_wechat</p>\n<pre><code>[root@prom-node01 ~]# wget http://file.oldxu.net/prometheus/Alert/webhook_wechat_oldxu\n[root@prom-node01 ~]# mv webhook_wechat_oldxu /usr/local/bin/\n[root@prom-node01 ~]# chmod +x /usr/local/bin/webhook_wechat_oldxu\n</code></pre>\n<p>2、编辑启动脚本⽂件</p>\n<pre><code>[root@prom-node01 ~]# cat /usr/lib/systemd/system/webhook_wechat.service\n[Unit]\nDescription=webhook_wechat\nDocumentation=https://prometheus.io/\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/webhook_wechat_oldxu --port 5001\nExecReload=/bin/kill -HUP\nTimeoutStopSec=20s\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n\n[root@prom-node01 ~]# systemctl daemon-reload\n[root@prom-node01 ~]# systemctl start webhook_wechat &amp;&amp; systemctl enable webhook_wechat\n[root@prom-node01 ~]# netstat -lntp|grep 5001\ntcp6       0      0 :::5001                 :::*                    LISTEN      2576/webhook_wechat \n</code></pre>\n<p>3、测试 webhook_wechat 能否正确发送消息到企业微信</p>\n<pre><code>[root@prom-node01 ~]# curl -X POST http://localhost:5001/alert?token=&lt;企业微信机器人token&gt; \\\n-H &quot;Content-Type: application/json&quot; \\\n-d '&#123;\n  &quot;alerts&quot;: [\n    &#123;\n      &quot;status&quot;: &quot;firing&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 down&quot;,\n        &quot;description&quot;: &quot;The instance example1 is down.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;0001-01-01T00:00:00Z&quot;\n    &#125;,\n   &#123;\n      &quot;status&quot;: &quot;resolved&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 is back up&quot;,\n        &quot;description&quot;: &quot;The instance example1 has recovered.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;2024-12-20T16:04:05Z&quot;\n    &#125;\n  ]\n&#125;'\n</code></pre>\n<p>4、检查企业微信结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240306211653486.png\" alt=\"image-20240306211653486\" /></p>\n<p>5、配置 AlertManager 对接 webhook_wechat</p>\n<pre><code>[root@prom-node01 ~]# cat /etc/alertmanager/alertmanager.yml\nglobal:\n  resolve_timeout: 2h    # 已经触发了告警的消息，在多长时间内没有收到该告警的消息，则会自动将该告警标记为已解决。\n  smtp_smarthost: 'smtp.qq.com:25'\n  smtp_from: '373370405@qq.com'  # 发件人邮件\n  smtp_auth_username: '373370405@qq.com'  # 发件人用户名\n  smtp_auth_password: 'jmtpwlkuijaybhic' # 发件人密码[授权码]\n  smtp_hello: 'qq.com'\n  smtp_require_tls: false\n\n# 加载模板文件\ntemplates:\n  - '/etc/alertmanager/template/email.tmpl'\n \n# 所有报警信息进入后的根路由，用来设置报警的分发策略\nroute:\n  group_by: ['alertname'] # 告警信息会根据告警名称分组，同名的告警消息会被归到一组，然后一起发送。（一个学校的一起搭⻋回家）\n  group_wait: 30s     # 当一组新告警产生时，系统会等待30秒，以便把这段时间内相同组的其他告警一起合并发送。（发车时间，保不齐在等待的30s内会有新的同校学生上车）\n  group_interval: 1m  # 已经发送了一个分组的告警通知之后，即使又有新的相同分组的告警到来，也需要等待至少1分钟后才会发送该分组的告警通知。（类似于发车间隔，没赶上就得等）\n  repeat_interval: 5m # 如果同一个组中的报警信息已经发送成功了，下一次这个组发送告警的时间间隔（重复发送相同告警的时间间隔）\n  receiver: webhook-wechat-ops   # 默认的receiver：如果一个报警没有被一个route匹配，则发送给默认的接收器\n  \nreceivers:\n- name: 'webhook-wechat-ops'\n  webhook_configs:\n  - url: 'http://prom-node01.oldxu.net:5001/alert?token=47ffbdd9-4308-4db0-aa08-f309546cc92d'  #http://&lt;你的服务器地址&gt;:5001/alert?token=&lt;企业微信机器人token&gt;'\n\n- name: 'default'\n  email_configs:\n  - to: '373370405@qq.com'\n    send_resolved: true # 接受告警恢复的通知\n    html: '&#123;&#123; template \"email.html\" . &#125;&#125;' # 发送邮件内容，调用该模板进行渲染\n</code></pre>\n<p>6、检查 AlertManager 的配置⽂件是否正确</p>\n<pre><code>[root@prom-node01 ~]# /etc/alertmanager/amtool check-config /etc/alertmanager/alertmanager.yml\nChecking '/etc/alertmanager/alertmanager.yml'  SUCCESS\nFound:\n - global config\n - route\n - 0 inhibit rules\n - 1 receivers\n - 1 templates\n  SUCCESS\n</code></pre>\n<p>7、重新加载 AlertManager</p>\n<pre><code>[root@prom-node01 ~]#  curl -X POST http://localhost:9093/-/reload\n</code></pre>\n<p>8、触发告警，验证是否能通过企业微信收到消息</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240306212303561.png\" alt=\"image-20240306212303561\" /></p>\n<h5 id=\"32-配置alert对接钉钉告警\"><a class=\"anchor\" href=\"#32-配置alert对接钉钉告警\">#</a> 3.2 配置 Alert 对接钉钉告警</h5>\n<p>钉钉告警可以是⽤ Prometheus-webhook-dingtalk ⼯具，github 地址 <a href=\"https://github.com/timonwong/prometheus-webhook-dingtalk\">https://github.com/timonwong/prometheus-webhook-dingtalk</a> 。但在此处，我们使⽤的是⾃⼰开发的 webhook 程序来对接钉钉， Prometheus--&gt;AlertManager--&gt; ⾃定义 Webhook 程序 --&gt; 钉钉机器⼈ --&gt; 通知给对应的群组</p>\n<ul>\n<li>1、访问钉钉开发者后台： <a href=\"https://open-dev.dingtalk.com/\">https://open-dev.dingtalk.com/</a></li>\n<li>2、点击应⽤开发，然后创建机器⼈（使⽤旧版），填写机器⼈名称，然后找到创建的机器⼈（版本管理与发布，点击上线），该机器⼈就可以添加到群组。</li>\n<li>3、发起群聊（添加两个⽤户），然后创建⼀个普通群，群归属为个⼈。</li>\n<li>4、紧接着找到对应的群，点击群类型，必须转为 “内部群”，然后在智能群助⼿中添加机器⼈，找到此前在钉钉开发者平台创建的机器⼈添加即可。</li>\n<li>5、最后点击机器⼈，获取对应的 Token 令牌。</li>\n</ul>\n<pre><code>https://oapi.dingtalk.com/robot/send?access_token=49989606592d7ff06ee4b83120bf5a81ed1e4c3860696dcd7e663be1c66ef43f\n</code></pre>\n<p>1、下载并运⾏ webhook_dingding</p>\n<pre><code>[root@prom-node01 ~]# wget http://file.oldxu.net/prometheus/Alert/webhook_dingding_oldxu\n[root@prom-node01 ~]# mv webhook_dingding_oldxu /usr/local/bin/\n[root@prom-node01 ~]# chmod +x /usr/local/bin/webhook_dingding_oldxu\n</code></pre>\n<p>2、编辑启动脚本⽂件</p>\n<pre><code>[root@prom-node01 ~]# cat /usr/lib/systemd/system/webhook_dingding.service\n[Unit]\nDescription=webhook_dingding\nDocumentation=https://prometheus.io/\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/webhook_dingding_oldxu --port 5002\nExecReload=/bin/kill -HUP\nTimeoutStopSec=20s\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n\n[root@prom-node01 ~]# systemctl daemon-reload\n[root@prom-node01 ~]# systemctl start webhook_dingding\n[root@prom-node01 ~]# systemctl enable webhook_dingding \n[root@prom-node01 ~]# netstat -lntp|grep 5002\ntcp6       0      0 :::5002                 :::*                    LISTEN      3141/webhook_dingdi \n</code></pre>\n<p>3、测试 webhook_wechat 能否正确发送消息到钉钉（注意端⼝是 5002）</p>\n<pre><code>[root@prom-node01 ~]# curl -X POST http://localhost:5001/alert?token=47ffbdd9-4308-4db0-aa08-f309546cc92d \\\n-H &quot;Content-Type: application/json&quot; \\\n-d '&#123;\n  &quot;alerts&quot;: [\n    &#123;\n      &quot;status&quot;: &quot;firing&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 down&quot;,\n        &quot;description&quot;: &quot;The instance example1 is down.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;0001-01-01T00:00:00Z&quot;\n    &#125;,\n   &#123;\n      &quot;status&quot;: &quot;resolved&quot;,\n      &quot;labels&quot;: &#123;\n        &quot;severity&quot;: &quot;critical&quot;,\n        &quot;alertname&quot;: &quot;InstanceDown&quot;,\n        &quot;instance&quot;: &quot;example1&quot;\n      &#125;,\n      &quot;annotations&quot;: &#123;\n        &quot;summary&quot;: &quot;Instance example1 is back up&quot;,\n        &quot;description&quot;: &quot;The instance example1 has recovered.&quot;\n      &#125;,\n      &quot;startsAt&quot;: &quot;2024-12-20T15:04:05Z&quot;,\n      &quot;endsAt&quot;: &quot;2024-12-20T16:04:05Z&quot;\n    &#125;\n  ]\n&#125;'\n</code></pre>\n<p>4、检查企业微信结果</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240306214425736.png\" alt=\"image-20240306214425736\" /></p>\n<p>5、配置 AlertManager 对接 webhook_dingding</p>\n<pre><code>[root@prom-node01 ~]# cat /etc/alertmanager/alertmanager.yml\nglobal:\n  resolve_timeout: 2h    # 已经触发了告警的消息，在多长时间内没有收到该告警的消息，则会自动将该告警标记为已解决。\n  smtp_smarthost: 'smtp.qq.com:25'\n  smtp_from: '373370405@qq.com'  # 发件人邮件\n  smtp_auth_username: '373370405@qq.com'  # 发件人用户名\n  smtp_auth_password: 'jmtpwlkuijaybhic' # 发件人密码[授权码]\n  smtp_hello: 'qq.com'\n  smtp_require_tls: false\n\n# 加载模板文件\ntemplates:\n  - '/etc/alertmanager/template/email.tmpl'\n \n# 所有报警信息进入后的根路由，用来设置报警的分发策略\nroute:\n  group_by: ['alertname'] # 告警信息会根据告警名称分组，同名的告警消息会被归到一组，然后一起发送。（一个学校的一起搭⻋回家）\n  group_wait: 30s     # 当一组新告警产生时，系统会等待30秒，以便把这段时间内相同组的其他告警一起合并发送。（发车时间，保不齐在等待的30s内会有新的同校学生上车）\n  group_interval: 1m  # 已经发送了一个分组的告警通知之后，即使又有新的相同分组的告警到来，也需要等待至少1分钟后才会发送该分组的告警通知。（类似于发车间隔，没赶上就得等）\n  repeat_interval: 5m # 如果同一个组中的报警信息已经发送成功了，下一次这个组发送告警的时间间隔（重复发送相同告警的时间间隔）\n  receiver: webhook-dingding-ops   # 默认的receiver：如果一个报警没有被一个route匹配，则发送给默认的接收器\n  \nreceivers:\n- name: 'webhook-wechat-ops'\n  webhook_configs:\n  - url: 'http://prom-node01.oldxu.net:5001/alert?token=47ffbdd9-4308-4db0-aa08-f309546cc92d'  #http://&lt;你的服务器地址&gt;:5001/alert?token=&lt;企业微信机器人token&gt;'\n\n- name: 'webhook-dingding-ops'\n  webhook_configs:\n  - url: 'http://prom-node01.oldxu.net:5002/alert?token=49989606592d7ff06ee4b83120bf5a81ed1e4c3860696dcd7e663be1c66ef43f'  #http://&lt;你的服务器地址&gt;:5002/alert?token=&lt;钉钉机器人access_token&gt;'\n\n- name: 'default'\n  email_configs:\n  - to: '373370405@qq.com'\n    send_resolved: true # 接受告警恢复的通知\n    html: '&#123;&#123; template \"email.html\" . &#125;&#125;' # 发送邮件内容，调用该模板进行渲染\n</code></pre>\n<p>6、检查 AlertManager 的配置⽂件是否正确</p>\n<pre><code>[root@prom-node01 ~]# /etc/alertmanager/amtool check-config /etc/alertmanager/alertmanager.yml\nChecking '/etc/alertmanager/alertmanager.yml'  SUCCESS\nFound:\n - global config\n - route\n - 0 inhibit rules\n - 3 receivers\n - 1 templates\n  SUCCESS\n</code></pre>\n<p>7、重新加载 AlertManager</p>\n<pre><code>[root@prom-node01 ~]#  curl -X POST http://localhost:9093/-/reload\n</code></pre>\n<p>8、触发告警，验证是否能通过企业微信收到消息</p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240306214829806.png\" alt=\"image-20240306214829806\" /></p>\n<h4 id=\"四-alertmanager告警路由\"><a class=\"anchor\" href=\"#四-alertmanager告警路由\">#</a> 四. AlertManager 告警路由</h4>\n<h5 id=\"41-告警路由介绍\"><a class=\"anchor\" href=\"#41-告警路由介绍\">#</a> 4.1 告警路由介绍</h5>\n<p>所谓的告警路由，就是将不同的告警消息转发给不同的接收⼈，以便故障能快速的被处理和解决。</p>\n<p>Alertmanager 的告警路由配置，使⽤的是树状结构来定义，以确保每条告警消息都能够按照定义好的路径进⾏处理。当⼀条告警消息进来后，会先进⼊根路由，然后逐级的去匹配每个⼦路由的规则，然后将消息通过媒介发送给对应的接收⼈。</p>\n<p>例如，我们可以设置⼀个规则，将标签 severity 级别为 critical 的告警发送到钉钉，⽽剩余其他的告警则全部发送给微信。</p>\n<p><strong>AlertManager 告警路由场景示例：</strong></p>\n<ul>\n<li>1、mysql_exporter 和 redis_exporter 的 Job 告警时，就将其发送给 “钉钉的 DBA 团队”。</li>\n<li>2、node_exporter 的 Job 告警时，则将告警路由到 “钉钉的 OPS 团队”。</li>\n<li>3、最后，如果告警消息不符合上述任何⼀个规则，它们将默认通过微信发送给 “企业微信运维团队”。</li>\n</ul>\n<h5 id=\"42-告警路由实践\"><a class=\"anchor\" href=\"#42-告警路由实践\">#</a> 4.2 告警路由实践</h5>\n<p>1、配置 AlertManager，添加⼦路由规则</p>\n<pre><code>[root@prom-node01 data]# cat  /etc/alertmanager/alertmanager.yml\nglobal:\n  resolve_timeout: 2h    # 已经触发了告警的消息，在多长时间内没有收到该告警的消息，则会自动将该告警标记为已解决。\n  smtp_smarthost: 'smtp.qq.com:25'\n  smtp_from: '373370405@qq.com'  # 发件人邮件\n  smtp_auth_username: '373370405@qq.com'  # 发件人用户名\n  smtp_auth_password: 'jmtpwlkuijaybhic' # 发件人密码[授权码]\n  smtp_hello: 'qq.com'\n  smtp_require_tls: false\n\n# 加载模板文件\ntemplates:\n  - '/etc/alertmanager/template/email.tmpl'\n \n# 所有报警信息进入后的根路由，用来设置报警的分发策略\nroute:\n  group_by: ['alertname'] # 告警信息会根据告警名称分组，同名的告警消息会被归到一组，然后一起发送。（一个学校的一起搭⻋回家）\n  group_wait: 30s     # 当一组新告警产生时，系统会等待30秒，以便把这段时间内相同组的其他告警一起合并发送。（发车时间，保不齐在等待的30s内会有新的同校学生上车）\n  group_interval: 1m  # 已经发送了一个分组的告警通知之后，即使又有新的相同分组的告警到来，也需要等待至少1分钟后才会发送该分组的告警通知。（类似于发车间隔，没赶上就得等）\n  repeat_interval: 5m # 如果同一个组中的报警信息已经发送成功了，下一次这个组发送告警的时间间隔（重复发送相同告警的时间间隔）\n  receiver: email   # 默认的receiver：如果一个报警没有被一个route匹配，则发送给默认的接收器\n\n  # 子路由匹配规则\n  routes:\n  - match_re:\n      job: '(mysql.*|redis.*)'\n    receiver: 'webhook-wechat-ops'\n    continue: true\n\n  - match_re:\n      job: 'node.*'\n    receiver: 'webhook-dingding-ops'\n    continue: true\n\nreceivers:\n- name: 'webhook-wechat-ops'\n  webhook_configs:\n  - url: 'http://prom-node01.oldxu.net:5001/alert?token=47ffbdd9-4308-4db0-aa08-f309546cc92d'  #http://&lt;你的服务器地址&gt;:5001/alert?token=&lt;企业微信机器人token&gt;'\n\n- name: 'webhook-dingding-ops'\n  webhook_configs:\n  - url: 'http://prom-node01.oldxu.net:5002/alert?token=49989606592d7ff06ee4b83120bf5a81ed1e4c3860696dcd7e663be1c66ef43f'  #http://&lt;你的服务器地址&gt;:5002/alert?token=&lt;钉钉机器人access_token&gt;'\n\n- name: 'email'\n  email_configs:\n  - to: '373370405@qq.com'\n    send_resolved: true # 接受告警恢复的通知\n    html: '&#123;&#123; template \"email.html\" . &#125;&#125;' # 发送邮件内容，调用该模板进行渲染\n</code></pre>\n<p>2、检查语法，并重新加载 AlertManager</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 data<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/alertmanager/amtool check-config /etc/alertmanager/alertmanager.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Checking <span class=\"token string\">'/etc/alertmanager/alertmanager.yml'</span>  SUCCESS</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Found:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> - global config</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> - route</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> - <span class=\"token number\">0</span> inhibit rules</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> - <span class=\"token number\">3</span> receivers</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> - <span class=\"token number\">1</span> templates</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  SUCCESS</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 data<span class=\"token punctuation\">]</span><span class=\"token comment\">#  curl -X POST http://localhost:9093/-/reload</span></pre></td></tr></table></figure><h5 id=\"43-告警路由验证\"><a class=\"anchor\" href=\"#43-告警路由验证\">#</a> 4.3 告警路由验证</h5>\n<p>1、触发 mysql 和 redis 的告警，验证钉钉 - DBA 团队是否能收到告警消息</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop mysqld_exporter.service redis_exporter.service</span></pre></td></tr></table></figure><p>2、触发 node 相关的告警，验证钉钉 - OPS 团队是否能收到告警消息</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node02 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop node_exporter.service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop node_exporter.service</span></pre></td></tr></table></figure><p>3、触发 nginx 相关的告警，验证微信运维团队是否能收到告警消息</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop nginx_exporter.service</span></pre></td></tr></table></figure>",
            "tags": [
                "Prometheus"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/4081185381.html",
            "url": "http://ixuyong.cn/posts/4081185381.html",
            "title": "Prometheus监控实战（三）",
            "date_published": "2025-06-28T14:17:01.000Z",
            "content_html": "<h3 id=\"prometheus监控实战三\"><a class=\"anchor\" href=\"#prometheus监控实战三\">#</a> Prometheus 监控实战（三）</h3>\n<h4 id=\"一-promtheus节点监控\"><a class=\"anchor\" href=\"#一-promtheus节点监控\">#</a> 一. Promtheus 节点监控</h4>\n<h5 id=\"11-配置prometheus\"><a class=\"anchor\" href=\"#11-配置prometheus\">#</a> 1.1  配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># rules 配置文件路径</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span>   <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    static_configs:          <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h5 id=\"12-创建rules目录并重载prometheus\"><a class=\"anchor\" href=\"#12-创建rules目录并重载prometheus\">#</a> 1.2 创建 rules 目录并重载 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir /etc/prometheus/rules</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"13-promtheus配置告警规则\"><a class=\"anchor\" href=\"#13-promtheus配置告警规则\">#</a> 1.3 Promtheus 配置告警规则</h5>\n<h6 id=\"131-配置cpu告警规则\"><a class=\"anchor\" href=\"#131-配置cpu告警规则\">#</a> 1.3.1 配置 CPU 告警规则</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 配置 CPU 告警规则</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/node_rules.yml </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: CPU告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: 节点CPU使率超过80%</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - avg<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"主机CPU利率过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\"该实例的CPU利用率低于20%，当前利用率：%。可能存在CPU资源浪费情况。\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  - alert: CPU饱和度过⾼</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      summary: <span class=\"token string\">\"CPU饱和度过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      description: <span class=\"token string\">\"该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：%。需要立即检查系统负载情况。\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h6 id=\"132-配置内存告警规则\"><a class=\"anchor\" href=\"#132-配置内存告警规则\">#</a> 1.3.2 配置内存告警规则</h6>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 配置内存告警规则</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/node_rules.yml </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: CPU告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: 节点CPU使率超过80%</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - avg<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"主机CPU利率过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\"该实例的CPU利用率低于20%，当前利用率：%。可能存在CPU资源浪费情况。\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  - alert: CPU饱和度过⾼</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      summary: <span class=\"token string\">\"CPU饱和度过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      description: <span class=\"token string\">\"该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：%。需要立即检查系统负载情况。\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>- name: 内存告警规则</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - alert: 主机内存不⾜</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes<span class=\"token punctuation\">)</span> / node_memory_MemTotal_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存使用率较高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      description: <span class=\"token string\">\"该实例的内存使用率持续2分钟高于80%，当前利用率：%\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  - alert: 内存饱和度⾼</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存内存饱和度高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      description: <span class=\"token string\">\"SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过⾼，当前SWAP使用率为：%。\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h6 id=\"133-配置磁盘告警规则\"><a class=\"anchor\" href=\"#133-配置磁盘告警规则\">#</a> 1.3.3 配置磁盘告警规则</h6>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/node_rules.yml </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: CPU告警规则</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  - alert: 节点CPU使率超过80%</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - avg<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"主机CPU利率过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\"该实例的CPU利用率低于20%，当前利用率：%。可能存在CPU资源浪费情况。\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: CPU饱和度过⾼</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">\"CPU饱和度过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">\"该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：%。需要立即检查系统负载情况。\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: 主机内存不⾜</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes<span class=\"token punctuation\">)</span> / node_memory_MemTotal_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存使用率较高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">\"该实例的内存使用率持续2分钟高于80%，当前利用率：%\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - alert: 内存饱和度⾼</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存内存饱和度高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      description: <span class=\"token string\">\"SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过⾼，当前SWAP使用率为：%。\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>- name: 磁盘告警规则</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  - alert: 磁盘空间告急</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span> / node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘 分区空间不足\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      description: <span class=\"token string\">\"实例  磁盘  分区空间使用率已超过 70%，当前使用率为 %，请及时处理。\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  - alert: 磁盘Inode空间告急</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_filesystem_files<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_files_free<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span> / node_filesystem_files<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘 分区Inode空间不足\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      description: <span class=\"token string\">\"实例  磁盘  分区的Inode空间使用率已超过 70%，，当前使用率为 %，请及时处理。\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  - alert: 磁盘IOPS写入较高</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\">#expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 >60</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">#round 函数可以对值进行四舍五入，磁盘最大 IOPS 为 120 次 /s</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_disk_writes_completed_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">120</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      summary: <span class=\"token string\">\"实例  IOPS每秒写入次数超过120次/s\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      description: </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        当前磁盘IOPS写入饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼41--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        当前磁盘IOPS每秒写入最大 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼42--<span class=\"token operator\">></span> 次/s</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  - alert: 磁盘IOPS读取较高</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_disk_reads_completed_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">120</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      summary: <span class=\"token string\">\"实例  IOPS每秒读取次数超过120次/s\"</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        当前磁盘IOPS读取饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼44--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        当前磁盘IOPS每秒读取最⼤ <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼45--<span class=\"token operator\">></span> 次/s</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  - alert: 磁盘IO写入吞吐较高</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_written_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">1024</span> /1024 / <span class=\"token number\">30</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘IO写入每秒超过最高30MB/s\"</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        当前磁盘IO写入吞吐量的饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼47--<span class=\"token operator\">></span>%。</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        当前磁盘IO写入吞吐量每秒最大是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼48--<span class=\"token operator\">></span>MB/s</pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  - alert: 磁盘IO读取吞吐较高</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_read_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">1024</span> /1024 /30 * <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘IO读取每秒超过最大30MB/s\"</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        当前磁盘IO读取吞吐量的饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼50--<span class=\"token operator\">></span>%。</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        当前磁盘IO读取吞吐量每秒最大是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼51--<span class=\"token operator\">></span>MB/s</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>.instance <span class=\"token variable\">$labels</span>.job <span class=\"token operator\">|</span> query <span class=\"token operator\">|</span> first <span class=\"token operator\">|</span> value <span class=\"token operator\">|</span> <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"%.2f\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>MB/s</pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\">#根据过去 24 小时磁盘使用情况，计算未来 30 天磁盘使用空间</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>predict_linear<span class=\"token punctuation\">(</span>node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!</span>~<span class=\"token string\">\"tmpfs|rootfs\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>24h<span class=\"token punctuation\">]</span>,60*60*24*30<span class=\"token punctuation\">)</span> /1024/1024/1024</pre></td></tr></table></figure><h6 id=\"134-配置网络告警规则\"><a class=\"anchor\" href=\"#134-配置网络告警规则\">#</a> 1.3.4 配置⽹络告警规则</h6>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/node_rules.yml </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: 节点告警规则</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  - alert: 节点CPU使率超过80%</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - avg<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"主机CPU利率过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\"该实例的CPU利用率低于20%，当前利用率：%。可能存在CPU资源浪费情况。\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: CPU饱和度过高</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">\"CPU饱和度过高，实例：, 任务:\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">\"该实例的1分钟平均CPU负载超过了核心数的两倍，已经持续2分钟，当前CPU饱和度：%。需要立即检查系统负载情况。\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: 主机内存不足</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes<span class=\"token punctuation\">)</span> / node_memory_MemTotal_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存使用率较高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">\"该实例的内存使用率持续2分钟高于80%，当前利用率：%\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - alert: 内存饱和度高</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> - node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    for: 2m</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      summary: <span class=\"token string\">\"主机内存内存饱和度高, 实例:, 任务:\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      description: <span class=\"token string\">\"SWAP内存使用率已连续2分钟超过10%，表明内存饱和度过高，当前SWAP使用率为：%。\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - alert: 磁盘空间告急</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span> node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span> / node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘 分区空间不足\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      description: <span class=\"token string\">\"实例  磁盘  分区空间使用率已超过 70%，当前使用率为 %，请及时处理。\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  - alert: 磁盘Inode空间告急</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>node_filesystem_files<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_files_free<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span> / node_filesystem_files<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"tmpfs\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘 分区Inode空间不足\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      description: <span class=\"token string\">\"实例  磁盘  分区的Inode空间使用率已超过 70%，，当前使用率为 %，请及时处理。\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  - alert: 磁盘IOPS写入较高</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">#expr: sum(rate(node_disk_writes_completed_total[1m])) by (instance,job) / 120 * 100 >60</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\">#round 函数可以对值进行四舍五入，磁盘最大 IOPS 为 120 次 /s</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_disk_writes_completed_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">120</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      summary: <span class=\"token string\">\"实例  IOPS每秒写入次数超过120次/s\"</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      description: </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        当前磁盘IOPS写入饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼75--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        当前磁盘IOPS每秒写入最大 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼76--<span class=\"token operator\">></span> 次/s</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  - alert: 磁盘IOPS读取较高</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_disk_reads_completed_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">120</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      summary: <span class=\"token string\">\"实例  IOPS每秒读取次数超过120次/s\"</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        当前磁盘IOPS读取饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼78--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        当前磁盘IOPS每秒读取最⼤ <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼79--<span class=\"token operator\">></span> 次/s</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  - alert: 磁盘IO写入吞吐较高</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_written_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">1024</span> /1024 / <span class=\"token number\">30</span> * <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘IO写入每秒超过最高30MB/s\"</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        当前磁盘IO写入吞吐量的饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼81--<span class=\"token operator\">></span>%。</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        当前磁盘IO写入吞吐量每秒最大是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼82--<span class=\"token operator\">></span>MB/s</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  - alert: 磁盘IO读取吞吐较高</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    expr: round<span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_read_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> / <span class=\"token number\">1024</span> /1024 /30 * <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      summary: <span class=\"token string\">\"实例  磁盘IO读取每秒超过最大30MB/s\"</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        当前磁盘IO读取吞吐量的饱和度是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼84--<span class=\"token operator\">></span>%。</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        当前磁盘IO读取吞吐量每秒最大是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼85--<span class=\"token operator\">></span>MB/s</pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  - alert: 网络下载带宽异常</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    expr: max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_network_receive_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> / <span class=\"token number\">1024</span> / <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job,device<span class=\"token punctuation\">)</span> / <span class=\"token number\">50</span> * <span class=\"token number\">100</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      summary: <span class=\"token string\">\"实例  的  接口下载流量已经超过公司实际50Mbps\"</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        当前下载带宽已经达到 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼88--<span class=\"token operator\">></span> Mbps/s</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        当前下载带宽使用率在 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼89--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  - alert: 网络上传带宽异常</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    expr: max<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>node_network_transmit_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> / <span class=\"token number\">1024</span> / <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job,device<span class=\"token punctuation\">)</span> / <span class=\"token number\">50</span> * <span class=\"token number\">100</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>      summary: <span class=\"token string\">\"实例  的  接口上传流量已经超过公司实际50Mbps\"</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        当前上传带宽已经达到 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼92--<span class=\"token operator\">></span> Mbps/s</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        当前上传带宽使用率在 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼93--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"14-检查告警规则文件\"><a class=\"anchor\" href=\"#14-检查告警规则文件\">#</a> 1.4 检查告警规则⽂件</h5>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/fAluZFK.jpeg\" alt=\"1.jpg\" /></p>\n<h5 id=\"15-导入-grafana-模板\"><a class=\"anchor\" href=\"#15-导入-grafana-模板\">#</a> 1.5 导入 Grafana 模板</h5>\n<p>在 Grafana 的官方插件库中，有很多 Node-exporter 模板。其中相对受欢的模板的 ID 是： ﻿11074、1860﻿。</p>\n<p>11074﻿：模板包括了 CPU、内存、磁盘、网络、温度传感器等指标（常用）。</p>\n<p>1860﻿：模板包括 CPU、内存、磁盘、网络等。这运行状况，及时发现潜在问题并进行调优。</p>\n<h4 id=\"二-prometheus监控rabbitmq\"><a class=\"anchor\" href=\"#二-prometheus监控rabbitmq\">#</a> 二. Prometheus 监控 RabbitmQ</h4>\n<h5 id=\"21-配置prometheus\"><a class=\"anchor\" href=\"#21-配置prometheus\">#</a> 2.1 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#2. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"22-rabbitmq告警规则文件\"><a class=\"anchor\" href=\"#22-rabbitmq告警规则文件\">#</a> 2.2 RabbitMQ 告警规则文件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 配置 rabbitmq 告警规则</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/rabbitmq_rules.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: rabbitmq告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: RabbitMQDown</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: up<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"rabbitmq\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: High</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"Rabbitmq Down,实例:\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\"Rabbitmq_exporter连不上RabbitMQ!\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: RabbitMQ队列已就绪的消息过多</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: avg_over_time<span class=\"token punctuation\">(</span>rabbitmq_queue_messages_ready<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">' RabbitMQ实例的队列消息准备过多'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">'实例中平均准备好待消费的消息数量超过500，当前平均值为。'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: RabbitMQ队列中已消费但未确认的消息过多</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: avg_over_time<span class=\"token punctuation\">(</span>rabbitmq_queue_messages_unacked<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">' RabbitMQ实例的队列消息确认存在延迟'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">' 实例中平均已被消费但未被确认的消息数量超过500，当前平均值为。'</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - alert: RabbitMQ磁盘空间预测不足</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    expr: predict_linear<span class=\"token punctuation\">(</span>rabbitmq_disk_space_available_bytes<span class=\"token punctuation\">[</span>24h<span class=\"token punctuation\">]</span>, <span class=\"token number\">60</span>*60*24*10<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> rabbitmq_disk_space_available_limit_bytes</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    for: 1h</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      summary: <span class=\"token string\">' RabbitMQ实例的磁盘空间预测不足。'</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      description: <span class=\"token string\">'基于过去24小时磁盘可用空间数据预测，未来10天内磁盘的可用空间可能低于默认配置的50MB。'</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - alert: RabbitMQ文件描述符使用率过高</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    expr: max_over_time<span class=\"token punctuation\">(</span>rabbitmq_process_open_fds<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> / rabbitmq_process_max_fds * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      summary: <span class=\"token string\">' RabbitMQ实例的文件描述符使用率过高'</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      description: <span class=\"token string\">' 实例打开的文件描述符数量最大值，占文件描述限制的比率超过80%，当前比率为%。'</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  - alert: RabbitMQ TCP套接字使用率过高</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    expr: max_over_time<span class=\"token punctuation\">(</span>rabbitmq_process_open_tcp_sockets<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> / rabbitmq_process_max_tcp_sockets * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      summary: <span class=\"token string\">' RabbitMQ实例的TCP套接字使用率过高'</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      description: <span class=\"token string\">' 实例打开的TCP套接字数量最大值，占操作系统允许的TCP连接数限制的比率超过80%，当前比率为%。'</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/rabbitmq_rules.yml </span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"23-导入-grafana-模板\"><a class=\"anchor\" href=\"#23-导入-grafana-模板\">#</a> 2.3 导入 Grafana 模板</h5>\n<p>导⼊ RabbitMQ 的 Grafana 模板。ID 为 10991</p>\n<h4 id=\"三-prometheus监控nginx\"><a class=\"anchor\" href=\"#三-prometheus监控nginx\">#</a> 三. Prometheus 监控 Nginx</h4>\n<h5 id=\"31-安装并配置nginx\"><a class=\"anchor\" href=\"#31-安装并配置nginx\">#</a> 3.1 安装并配置 Nginx</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 安装 Nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install nginx -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/nginx/conf.d/mointor.oldxu.net.conf</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>server <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t listen <span class=\"token number\">8888</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t server_name monitor.oldxu.net<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t location /nginx_status <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t stub_status on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> \t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># nginx -t</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable nginx &amp;&amp; systemctl start nginx</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#2. 检查 Nginx 的状态⻚⾯</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  curl http://localhost:8888/nginx_status</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Active connections: <span class=\"token number\">1</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>server accepts handled requests</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Reading: <span class=\"token number\">0</span> Writing: <span class=\"token number\">1</span> Waiting: <span class=\"token number\">0</span></pre></td></tr></table></figure><h5 id=\"32-安装并配置nginx-exporter\"><a class=\"anchor\" href=\"#32-安装并配置nginx-exporter\">#</a> 3.2 安装并配置 Nginx-exporter</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 下载 Nginx-exporter</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v1.1.0/nginx-prometheus-exporter_1.1.0_linux_amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#加速地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v1.1.0/nginx-prometheus-exporter_1.1.0_linux_amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#2. 将 Nginx_exporter 安装到指定的路径</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir /etc/nginx_exporter_1.1.0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf nginx-prometheus-exporter_1.1.0_linux_amd64.tar.gz -C /etc/nginx_exporter_1.1.0/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/nginx_exporter_1.1.0/ /etc/nginx_exporter</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 nginx_exporter<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./nginx-prometheus-exporter --web.listen-address=:9113 --nginx.scrape-uri=http://127.0.0.1:8888/nginx_status</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#3. 为 nginx_exporter 准备 system 启停⽂件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/nginx_exporter.service</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>nginx-exporter</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/nginx_exporter/nginx-prometheus-exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  --web.listen-address<span class=\"token operator\">=</span>:9113 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  --web.telemetry-path<span class=\"token operator\">=</span><span class=\"token string\">\"/metrics\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  --nginx.scrape-uri<span class=\"token operator\">=</span>http://127.0.0.1:8888/nginx_status</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>on-failure</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token assign-left variable\">RestartSec</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#4. 启动 nginx_exporter 服务，它默认监听在 9113 端⼝上</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  systemctl daemon-reload &amp;&amp; systemctl enable nginx_exporter &amp;&amp; systemctl start nginx_exporter</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9113</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9113                 :::*                    LISTEN      <span class=\"token number\">1829</span>/nginx-promethe </pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#5. 访问 nginx_exporter 暴露的 metrics，检查是否能获取到对应的指标数据</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 nginx_exporter<span class=\"token punctuation\">]</span><span class=\"token comment\">#  curl http://127.0.0.1:9113/metrics</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># TYPE go_gc_duration_seconds summary</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.25\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.5\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.75\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><h5 id=\"33-配置prometheus\"><a class=\"anchor\" href=\"#33-配置prometheus\">#</a> 3.3 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#2. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"34-nginx告警规则文件\"><a class=\"anchor\" href=\"#34-nginx告警规则文件\">#</a> 3.4 Nginx 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 具体的告警规则示例⽂件（需要根据公司实际情况进⾏调整）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/nginx_rules.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: nginx告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: Nginx Server Down</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: nginx_up <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"Nginx 服务不存活, 实例:\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\"nginx_exporter连不上Nginx了，当前状态为: \"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  - alert: Nginx活跃连接数过高</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    expr: avg_over_time<span class=\"token punctuation\">(</span>nginx_connections_active<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      summary: <span class=\"token string\">\"Nginx 活跃连接数过高, 实例:\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      description: <span class=\"token string\">\" Nginx 的平均活跃连接数超过了设定的500阈值，当前值为 。\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  - alert: Nginx等待连接数高</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    expr: max_over_time<span class=\"token punctuation\">(</span>nginx_connections_waiting<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      summary: <span class=\"token string\">\"Nginx 等待连接数过高, 实例:\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      description: <span class=\"token string\">\"Nginx 的等待连接数超过了设定的100阈值，当前最大值为 。可能后端服务存在瓶颈。\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  - alert: Nginx读写入率异常</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>nginx_connections_reading - nginx_connections_writing<span class=\"token punctuation\">)</span> / nginx_connections_reading * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      summary: <span class=\"token string\">\"Nginx 读写入率异常, 实例:\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      description: <span class=\"token string\">\"Nginx 读取请求的数量高于写请求的数量，当前读请求高于写请求比率是: \"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - alert: Nginx⼤量TCP连接处理失败</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    expr: nginx_connections_accepted - nginx_connections_handled <span class=\"token operator\">></span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      summary: <span class=\"token string\">\"Nginx 大量TCP连接处理失败, 实例:\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      description: <span class=\"token string\">\"Nginx 接受的连接数与处理成功的连接数之差超过了50，当前差值为\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"35-导入-grafana-模板\"><a class=\"anchor\" href=\"#35-导入-grafana-模板\">#</a> 3.5 导入 Grafana 模板</h5>\n<p>导⼊ nginx 的 Grafana 模板。ID 为 12708</p>\n<h4 id=\"四-prometheus监控tomcat\"><a class=\"anchor\" href=\"#四-prometheus监控tomcat\">#</a> 四. Prometheus 监控 Tomcat</h4>\n<h5 id=\"41-安装并配置tomcat\"><a class=\"anchor\" href=\"#41-安装并配置tomcat\">#</a> 4.1 安装并配置 Tomcat</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 安装 tomcat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 nginx_exporter<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install tomcat tomcat-webapps -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 下载所依赖的 jar 包</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient/0.12.0/simpleclient-0.12.0.jar</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_common/0.12.0/simpleclient_common-0.12.0.jar</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_hotspot/0.12.0/simpleclient_hotspot-0.12.0.jar</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_servlet/0.12.0/simpleclient_servlet-0.12.0.jar</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_servlet_common/0.12.0/simpleclient_servlet_common-0.12.0.jar</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=nl/nlighten/tomcat_exporter_client/0.0.15/tomcat_exporter_client-0.0.15.jar</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://search.maven.org/remotecontent?filepath=nl/nlighten/tomcat_exporter_servlet/0.0.15/tomcat_exporter_servlet-0.0.15.war</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 整合包的下载地址</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/Im-oldxu/tomcat-exporter/releases/download/tomcat_exporter-0.0.17/tomcat_exporter.tar.gz</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#3. 将 jar 包和 war 包分别拷⻉⾄对应的⽬录下</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp tomcat_exporter/*.jar /usr/share/tomcat/lib/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp tomcat_exporter/*.war /usr/share/tomcat/webapps/</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#4. 启动 Tomcat</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start tomcat &amp;&amp; systemctl enable tomcat</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#5. 访问 tomcat 的 metrics</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl http://localhost:8080/metrics/</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># TYPE process_cpu_seconds_total counter</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>process_cpu_seconds_total <span class=\"token number\">7.37</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># HELP process_start_time_seconds Start time of the process since unix epoch in seconds.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># TYPE process_start_time_seconds gauge</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>process_start_time_seconds <span class=\"token number\">1</span>.70921425481E9</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># HELP process_open_fds Number of open file descriptors.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># TYPE process_open_fds gauge</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>process_open_fds <span class=\"token number\">65.0</span></pre></td></tr></table></figure><h5 id=\"42-配置prometheus\"><a class=\"anchor\" href=\"#42-配置prometheus\">#</a> 4.2 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"43-tomcat告警规则文件\"><a class=\"anchor\" href=\"#43-tomcat告警规则文件\">#</a> 4.3 Tomcat 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 具体的告警规则示例⽂件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/tomcat_rules.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: tomcat告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: Tomcat活跃连接数过⾼</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: tomcat_connections_active_total / tomcat_connections_active_max* <span class=\"token number\">100</span> <span class=\"token operator\">>=</span><span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"Tomcat服务器活跃连接数过高, 实例:\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        Tomcat最大连接数是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼119--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        Tomcat目前连接数是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼120--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        Tomcat活跃连接数已超过最大活跃连接数的80%, 当前值为 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼121--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  - alert: Tomcat处理请求超过5秒</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    expr: rate<span class=\"token punctuation\">(</span>tomcat_requestprocessor_time_seconds<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      summary: <span class=\"token string\">\"Tomcat处理请求时间过长, 实例:\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      description: <span class=\"token string\">\"Tomcat在过去5分钟的平均处理请求时间超过5秒，当前值 。\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  - alert: <span class=\"token string\">\"Tomcat会话拒绝率超过20%\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>tomcat_session_rejected_total / <span class=\"token punctuation\">(</span>tomcat_session_created_total +tomcat_session_rejected_total<span class=\"token punctuation\">))</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      summary: <span class=\"token string\">\"Tomcat会话拒绝率过高, 实例:\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      description: <span class=\"token string\">\"Tomcat在Host: 的  的上下文中的会话拒绝率超过20%，当前值 。\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - alert: <span class=\"token string\">\"Tomcat线程使用率过高\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>tomcat_threads_active_total / tomcat_threads_max<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      summary: <span class=\"token string\">\"Tomcat线程使⽤率过⾼, 实例:\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      description:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        Tmcat最大线程数是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼129--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        Tomcat目前线程数是 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼130--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        Tomcat线程数已超过最大活跃连接数的80%, 当前值为 <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼131--<span class=\"token operator\">></span>%</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/node_rules.yml</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"44-导入-grafana-模板\"><a class=\"anchor\" href=\"#44-导入-grafana-模板\">#</a> 4.4 导入 Grafana 模板</h5>\n<p>1、下载对应的 dashboard</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://mirror.ghproxy.com/https://github.com/nlighten/tomcat_exporter/blob/master/dashboard/example.json</pre></td></tr></table></figure><h4 id=\"五-prometheus监控springboot\"><a class=\"anchor\" href=\"#五-prometheus监控springboot\">#</a> 五. Prometheus 监控 SpringBoot</h4>\n<h5 id=\"51-下载jmx-exporter\"><a class=\"anchor\" href=\"#51-下载jmx-exporter\">#</a> 5.1 下载 jmx-exporter</h5>\n<p>1、访问 github， <a href=\"https://github.com/prometheus/jmx_exporter/releases\">https://github.com/prometheus/jmx_exporter/releases</a> ，下载 java-expoter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir /etc/jmx_exporter</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/jmx_exporter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 springboot<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://repo.maven.apache.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.20.0/jmx_prometheus_javaagent-0.20.0.jar</span></pre></td></tr></table></figure><p>2、准备 config.yml 配置⽂件（规则⽂件可以定义要暴露哪些指标给 Prometheus）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/jmx_exporter/config.yaml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rules:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- pattern: <span class=\"token string\">\".*\"</span></pre></td></tr></table></figure><h5 id=\"52-运行springboot应用\"><a class=\"anchor\" href=\"#52-运行springboot应用\">#</a> 5.2 运⾏ SpringBoot 应⽤</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、安装 java 基础环境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  yum install java-11-openjdk maven -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget -O /etc/maven/settings.xml https://linux.oldxu.net/settings.xml</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#2、下载 java 应⽤然后进⾏编译</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget http://file.oldxu.net/jenkins/springboot-devops-myapp-java11-jar.tar.gz</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf springboot-devops-myapp-java11-jar.tar.gz</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd springboot-devops-myapp-jar/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 springboot-devops-myapp-jar<span class=\"token punctuation\">]</span><span class=\"token comment\"># mvn package</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#3、运⾏ java 应⽤，并加载 jmx 监控，监听 12345 端⼝， &lt;path_to_jmx_exporter.jar>=&lt;exporter_port>:&lt;path_to_config.yaml></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 springboot-devops-myapp-jar<span class=\"token punctuation\">]</span><span class=\"token comment\"># java \\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> -javaagent:/etc/jmx_exporter/jmx_prometheus_javaagent-0.20.0.jar<span class=\"token operator\">=</span><span class=\"token number\">12345</span>:/etc/jmx_exporter/config.yaml <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token parameter variable\">-jar</span> <span class=\"token parameter variable\">-Xms50m</span> <span class=\"token parameter variable\">-Xmx50m</span> target/devops-myapp-1.0.jar <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token parameter variable\">--server.port</span><span class=\"token operator\">=</span><span class=\"token number\">8081</span> <span class=\"token operator\">&amp;></span>/var/log/springboot.log <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token comment\">#4、检查对应的端⼝是否正常</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token punctuation\">[</span>root@prom-node03 springboot-devops-myapp-jar<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl http://localhost:12345/metrics</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># HELP jmx_scrape_error Non-zero if this scrape failed.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># TYPE jmx_scrape_error gauge</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>jmx_scrape_error <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># HELP jmx_scrape_cached_beans Number of beans with their matching rule cached</span></pre></td></tr></table></figure><h5 id=\"53-配置prometheus\"><a class=\"anchor\" href=\"#53-配置prometheus\">#</a> 5.3  配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#2. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"54-jmx告警规则文件\"><a class=\"anchor\" href=\"#54-jmx告警规则文件\">#</a> 5.4 JMX 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/jvm_rules.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: <span class=\"token string\">\"JVM告警规则\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  - alert: JVM堆内存使用率过高</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    expr: jvm_memory_bytes_used<span class=\"token punctuation\">&#123;</span>area<span class=\"token operator\">=</span><span class=\"token string\">\"heap\"</span>,<span class=\"token punctuation\">&#125;</span> / jvm_memory_bytes_max<span class=\"token punctuation\">&#123;</span>area<span class=\"token operator\">=</span><span class=\"token string\">\"heap\"</span>,<span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"JVM 堆内存使用率过高, 实例:, job: \"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\"JVM堆内存使用率超过80%, 当前值 %\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: JVMGC时间过长</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: <span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>jvm_gc_collection_seconds_sum<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> / rate<span class=\"token punctuation\">(</span>jvm_gc_collection_seconds_count<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>gc, instance, job<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">\"JVM GC时间过长, 实例:, job: \"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">\"JVM  的回收时间超过1s，当前值 s\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: JVM死锁线程过多</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: min_over_time<span class=\"token punctuation\">(</span>jvm_threads_deadlocked<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">\"JVM检测到死锁线程\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">\"在过去5分钟内JVM检测到存在死锁线程, 当前值 。\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/jvm_rules.yml </span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"55-导入-grafana-模板\"><a class=\"anchor\" href=\"#55-导入-grafana-模板\">#</a> 5.5 导入 Grafana 模板</h5>\n<p>导⼊⼀个 JVM 的 Grafana 模板。Dashboard ID 为 14845</p>\n<h4 id=\"安装并配置mysql_master\"><a class=\"anchor\" href=\"#安装并配置mysql_master\">#</a> 安装并配置 mysql_master</h4>\n<h5 id=\"61-安装并配置mysql_master\"><a class=\"anchor\" href=\"#61-安装并配置mysql_master\">#</a> 6.1 安装并配置 mysql_master</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、安装 Mysql5.7</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install -y mysql-community-server</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start mysqld &amp;&amp; systemctl enable mysqld</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mysql -uroot -p$(awk '/temporary password/&#123;print $NF&#125;' /var/log/mysqld.log)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mysql<span class=\"token operator\">></span>  ALTER <span class=\"token environment constant\">USER</span> <span class=\"token string\">'root'</span>@<span class=\"token string\">'localhost'</span> IDENTIFIED BY <span class=\"token string\">'Superman*2023'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#2、创建⼀个 mysql_exporter 专属的监控账户</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mysql<span class=\"token operator\">></span> create user <span class=\"token string\">'exporter'</span>@<span class=\"token string\">'localhost'</span> identified by <span class=\"token string\">'Superman*2023'</span> WITH MAX_USER_CONNECTIONS <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mysql<span class=\"token operator\">></span> grant process,replication client,select on *.* to <span class=\"token string\">'exporter'</span>@<span class=\"token string\">'localhost'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#3、创建 MySQL 从库复制的账户</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>mysql<span class=\"token operator\">></span> grant replication slave on *.* to <span class=\"token string\">'repl'</span>@<span class=\"token string\">'%'</span> identified by <span class=\"token string\">'Superman*2023'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mysql<span class=\"token operator\">></span> flush privileges<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#4. 配置主库</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/my.cnf</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>server-id<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>log-bin<span class=\"token operator\">=</span>mysql-bin</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>read-only<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl restart mysqld</span></pre></td></tr></table></figure><h5 id=\"62-安装并配置mysql_slave\"><a class=\"anchor\" href=\"#62-安装并配置mysql_slave\">#</a> 6.2 安装并配置 mysql_slave</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、从库配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install -y mysql-community-server</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@db02 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/my.cnf</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>server-id<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>read-only<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#2、创建⼀个 mysql_exporter 专属的监控账户</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>grant all on *.* to <span class=\"token string\">'exporter'</span>@<span class=\"token string\">'localhost'</span> identified by <span class=\"token string\">'Superman*2023'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#3、获取主库的信息，⽽后配置从库的 change master</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>mysql<span class=\"token operator\">></span> show master status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>+------------------+----------+--------------+------------------+-------------------+</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">|</span> File             <span class=\"token operator\">|</span> Position <span class=\"token operator\">|</span> Binlog_Do_DB <span class=\"token operator\">|</span> Binlog_Ignore_DB <span class=\"token operator\">|</span> Executed_Gtid_Set <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>+------------------+----------+--------------+------------------+-------------------+</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span> mysql-bin.000007 <span class=\"token operator\">|</span>      <span class=\"token number\">154</span> <span class=\"token operator\">|</span>              <span class=\"token operator\">|</span>                  <span class=\"token operator\">|</span>                   <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+------------------+----------+--------------+------------------+-------------------+</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">1</span> row <span class=\"token keyword\">in</span> <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#4、配置从服务器，连接主服务器</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>mysql<span class=\"token operator\">></span> change master to <span class=\"token assign-left variable\">master_host</span><span class=\"token operator\">=</span><span class=\"token string\">'192.168.40.223'</span>,master_user<span class=\"token operator\">=</span><span class=\"token string\">'repl'</span>,master_password<span class=\"token operator\">=</span><span class=\"token string\">'Superman*2023'</span>,master_log_file<span class=\"token operator\">=</span><span class=\"token string\">'mysql-bin.000007'</span>,master_log_pos<span class=\"token operator\">=</span><span class=\"token number\">154</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#5. 开启从库</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>mysql<span class=\"token operator\">></span> start slave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#6. 检查主从复制状态</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mysql<span class=\"token operator\">></span> show slave status<span class=\"token punctuation\">\\</span>G</pre></td></tr></table></figure><h5 id=\"63-安装并配置mysqld_exporter\"><a class=\"anchor\" href=\"#63-安装并配置mysqld_exporter\">#</a> 6.3 安装并配置 mysqld_exporter</h5>\n<p>1、访问 mysqld_exporter 的 github 地址， <a href=\"https://github.com/prometheus/mysqld_exporter/releases\">https://github.com/prometheus/mysqld_exporter/releases</a> 下载 mysqld-exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、下载 mysqld_expor</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.15.0/mysqld_exporter-0.15.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 加速地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/prometheus/mysqld_exporter/releases/download/v0.15.0/mysqld_exporter-0.15.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#2、解压 mysqld_expor</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf mysqld_exporter-0.15.0.linux-amd64.tar.gz -C /etc/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/mysqld_exporter-0.15.0.linux-amd64/ /etc/mysqld_exporter</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#3、启动 mysqld_expor</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># export MYSQLD_EXPORTER_PASSWORD=Superman*2023</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/mysqld_exporter/mysqld_exporter --mysqld.address=localhost:3306 --mysqld.username=exporter</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#4、编写 mysqld_exporter 启动⽂件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/mysqld_exporter.service</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>mysqld_exporter</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span><span class=\"token string\">'MYSQLD_EXPORTER_PASSWORD=Superman*2023'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/mysqld_exporter/mysqld_exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token parameter variable\">--mysqld.address</span><span class=\"token operator\">=</span>localhost:3306 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token parameter variable\">--mysqld.username</span><span class=\"token operator\">=</span>exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        --web.listen-address<span class=\"token operator\">=</span>:9104 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        --web.telemetry-path<span class=\"token operator\">=</span><span class=\"token string\">\"/metrics\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token parameter variable\">--collect.info_schema.processlist</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token parameter variable\">--collect.info_schema.innodb_tablespaces</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token parameter variable\">--collect.info_schema.innodb_metrics</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token parameter variable\">--collect.info_schema.query_response_time</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token parameter variable\">--collect.info_schema.userstats</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token parameter variable\">--collect.info_schema.tables</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token parameter variable\">--collect.global_status</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token parameter variable\">--collect.global_variables</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token parameter variable\">--collect.slave_status</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token parameter variable\">--collect.binlog_size</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token parameter variable\">--collect.engine_innodb_status</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span> <span class=\"token variable\">$MAINPID</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#4、启动 mysqld_exporter，并检查服务</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start mysqld_exporter</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">#5、测试 mysqld_exporter 能否获取到对应的指标</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp |grep 9104</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9104                 :::*                    LISTEN      <span class=\"token number\">2863</span>/mysqld_exporte </pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  curl http://localhost:9104/metrics</span></pre></td></tr></table></figure><h5 id=\"64-配置prometheus\"><a class=\"anchor\" href=\"#64-配置prometheus\">#</a> 6.4 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">#2. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"65-mysql告警规则文件\"><a class=\"anchor\" href=\"#65-mysql告警规则文件\">#</a> 6.5 MySQL 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、编写 MySQL 告警规则⽂件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/mysql_rules.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: mysql告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: MySQL主库实例宕机</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: mysql_up<span class=\"token punctuation\">&#123;</span>role<span class=\"token operator\">=</span><span class=\"token string\">\"master\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 0m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL实例宕机, 实例: \"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\"服务: ⻆⾊:  已经宕机。\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  - alert: MySQL从库实例宕机</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    expr: mysql_up<span class=\"token punctuation\">&#123;</span>role<span class=\"token operator\">=</span><span class=\"token string\">\"slave\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    for: 0m</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL实例宕机, 实例: \"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      description: <span class=\"token string\">\"服务: ⻆⾊:  已经宕机。\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  - alert: MySQL实例重启</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>mysql_global_status_uptime<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job,service,role<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    for: 0m</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL实例重启, 实例 \"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      description: <span class=\"token string\">\"服务: ⻆⾊:  运行时间小于60s。当前值 \"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  - alert: MySQL连接数使用率超过80%</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    expr: max_over_time<span class=\"token punctuation\">(</span>mysql_global_status_threads_connected<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> / mysql_global_variables_max_connections * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL连接数过高, 实例 ,服务: ⻆⾊: \"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      description: <span class=\"token string\">\"该实例MySQL的连接数在过去5分钟内超过了最大连接数的80%, 当前值 %。\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  - alert: MySQL活跃线程数高</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    expr: avg_over_time<span class=\"token punctuation\">(</span>mysql_global_status_threads_running<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> / mysql_global_variables_max_connections * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL活跃线程数过高, 实例 ,服务: 角色: \"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      description: <span class=\"token string\">\"该实例MySQL的活跃线程数在过去5分钟内持续超过了最大连接数的60%, 当前值 %。\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - alert: MySQL查询率<span class=\"token punctuation\">(</span>QPS<span class=\"token punctuation\">)</span>过高</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    expr: irate<span class=\"token punctuation\">(</span>mysql_global_status_queries<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL查询率(QPS)超标, 实例 ,服务: 角色: \"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      description: <span class=\"token string\">\"该实例MySQL的查询率(QPS)在过去5分钟内超过1000, 当前值 。\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  - alert: MySQL事务率<span class=\"token punctuation\">(</span>TPS<span class=\"token punctuation\">)</span>过高</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>mysql_global_status_commands_total<span class=\"token punctuation\">&#123;</span>command<span class=\"token operator\">=~</span><span class=\"token string\">\"(commit|rollback)\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> without <span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL事务率(TPS)超标, 实例 ,服务: 角色: \"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      description: <span class=\"token string\">\"该实例MySQL的事务率(TPS)在过去5分钟内超过100, 当前值 。\"</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  - alert: MySQL文件描述符使用率过高</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    expr: mysql_global_status_open_files / mysql_global_variables_open_files_limit * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL活跃线程数过高, 实例 ,服务: 角色: \"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      description: <span class=\"token string\">\"该实例MySQL的文件描述符使用率超过80%，当前值 %可能需要增加文件描述符限制。\"</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  - alert: Mysql从库IO线程未运行</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    expr: mysql_slave_status_slave_io_running <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL从库IO线程已停止, 实例 \"</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      description: <span class=\"token string\">\"该MySQL实例IO线程已停止，当前值 \"</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  - alert: Mysql从库SQL线程未运行</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    expr: mysql_slave_status_slave_sql_running <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL从库SQL线程已停止, 实例 \"</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>      description: <span class=\"token string\">\"该MySQL实例SQL线程已停止，当前值 \"</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  - alert: Mysql从库复制延迟过高</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    expr: mysql_slave_status_seconds_behind_master - mysql_slave_status_sql_delay <span class=\"token operator\">></span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      summary: <span class=\"token string\">\"MySQL从库复制延迟过高, 实例 \"</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      description: <span class=\"token string\">\"该实例MySQL的复制延迟超过5s，当前值 s\"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/mysql_rules.yml </span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>Checking /etc/prometheus/rules/mysql_rules.yml</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  SUCCESS: <span class=\"token number\">11</span> rules found</pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"66-导入-grafana-模板\"><a class=\"anchor\" href=\"#66-导入-grafana-模板\">#</a> 6.6 导入 Grafana 模板</h5>\n<p>导⼊⼀个 MySQL 的 Grafana 模板。Dashboard ID 为 7362、9625 ，⽽监控 MySQL 主从的 Dashboard 可以使⽤ 11323</p>\n<h4 id=\"七-prometheus监控redis\"><a class=\"anchor\" href=\"#七-prometheus监控redis\">#</a> 七. Prometheus 监控 Redis</h4>\n<h5 id=\"71-安装并配置redis\"><a class=\"anchor\" href=\"#71-安装并配置redis\">#</a> 7.1 安装并配置 Redis</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install redis -y</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/redis.conf </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>maxmemory 200mb</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start redis &amp;&amp; systemctl enable redis</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep redis</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">127.0</span>.0.1:6379          <span class=\"token number\">0.0</span>.0.0:*               LISTEN      <span class=\"token number\">2532</span>/redis-server <span class=\"token number\">1</span></pre></td></tr></table></figure><h5 id=\"72-安装并配置redis_exporter\"><a class=\"anchor\" href=\"#72-安装并配置redis_exporter\">#</a> 7.2 安装并配置 redis_exporter</h5>\n<p>1、访问 redis_exporter 的 github 地址， <a href=\"https://github.com/oliver006/redis_exporter/releases\">https://github.com/oliver006/redis_exporter/releases</a> ，下载 redis_exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、下载 redis_exporter</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/oliver006/redis_exporter/releases/download/v1.57.0/redis_exporter-v1.57.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#加速地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/oliver006/redis_exporter/releases/download/v1.57.0/redis_exporter-v1.57.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#2、解压 redis_exporter</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf redis_exporter-v1.57.0.linux-amd64.tar.gz -C /etc</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/redis_exporter-v1.57.0.linux-amd64/ /etc/redis_exporter</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#3、配置 redis_exporter 启动⽂件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/redis_exporter.service</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>redis_exporter</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/redis_exporter/redis_exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token parameter variable\">-redis.addr</span><span class=\"token operator\">=</span><span class=\"token string\">\"redis://localhost:6379\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token parameter variable\">-redis.password</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  -web.listen-address<span class=\"token operator\">=</span><span class=\"token string\">\":9121\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  -web.telemetry-path<span class=\"token operator\">=</span><span class=\"token string\">\"/metrics\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span> <span class=\"token variable\">$MAINPID</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#4、启动 redis_exporter</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start redis_exporter</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable redis_exporter</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9121</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9121                 :::*                    LISTEN      <span class=\"token number\">2600</span>/redis_exporter </pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#5、访问 redis 的 metrics</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl http://localhost:9121/metrics</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># TYPE go_gc_duration_seconds summary</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">4</span>.7772e-05</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.25\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">4</span>.7772e-05</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.5\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">9</span>.3206e-05</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.75\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">9</span>.3206e-05</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">9</span>.3206e-05</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>go_gc_duration_seconds_sum <span class=\"token number\">0.000140978</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>go_gc_duration_seconds_count <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># HELP go_goroutines Number of goroutines that currently exist.</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># TYPE go_goroutines gauge</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>go_goroutines <span class=\"token number\">8</span></pre></td></tr></table></figure><h5 id=\"73-配置prometheus\"><a class=\"anchor\" href=\"#73-配置prometheus\">#</a> 7.3 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、修改 Prometheus 配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#2. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"74-redis告警规则文件\"><a class=\"anchor\" href=\"#74-redis告警规则文件\">#</a> 7.4 Redis 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、编写 Redis 告警规则⽂件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/redis_rules.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: redis告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: Redis实例宕机</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>redis_up<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance, job<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例宕机,  \"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  在过去1分钟内无法连接。\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  - alert: Redis实例重启</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>redis_uptime_in_seconds<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance, job<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    for: 0m</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  重启\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  出现重启。当前运行时间: 秒。\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  - alert: Redis连接数过高</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    expr: redis_connected_clients / redis_config_maxclients * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  连接数超过80%\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  当前连接数占最大连接数的比率超过80%。当前比率: %。\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  - alert: Redis连接被拒绝</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    expr: increase<span class=\"token punctuation\">(</span>redis_rejected_connections_total<span class=\"token punctuation\">[</span>1h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  有连接被拒绝\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  在过去1小时内有连接被拒绝。当前被拒绝的连接数: 。\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  - alert: Redis内存使用率过高</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    expr: redis_memory_used_bytes / redis_memory_max_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  内存使用率超过80%\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  当前内存使用率超过配置的最大内存值的80%。当前内存使用率: %。\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - alert: Redis缓存命中率低</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    expr: <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      irate<span class=\"token punctuation\">(</span>redis_keyspace_hits_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> /</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>redis_keyspace_hits_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> + irate<span class=\"token punctuation\">(</span>redis_keyspace_misses_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> * <span class=\"token number\">100</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">90</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    for: 10m</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  缓存命中率低于90%\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  最近5分钟内的缓存命中率低于90%。当前命中率: %。\"</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  - alert: Redis即将过期的Key数量过多</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    expr: <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>redis_db_keys_expiring<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance, job, db<span class=\"token punctuation\">)</span> /</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>redis_db_keys<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance, job, db<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  中的数据库  有过多即将过期的Key\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  中的数据库  有超过50%的Key即将过期。当前比率: %。\"</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  - alert: RedisRDB备份失败</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    expr: redis_rdb_last_bgsave_status <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  RDB备份失败\"</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  最近的RDB备份尝试失败。\"</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  - alert: RedisRDB备份时间过长</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    expr: redis_rdb_last_bgsave_duration_sec <span class=\"token operator\">></span> <span class=\"token number\">3</span> and redis_rdb_last_bgsave_status <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>       severity: warning</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  RDB备份成功但耗时超过3秒\"</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  RDB备份成功，但备份耗时超过了3秒。持续时间: 秒。\"</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  - alert: RedisRDB备份过期</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> - redis_rdb_last_save_timestamp_seconds<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">36000</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  超过10小时未进行RDB备份\"</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  已超过10小时没有生成新的RDB备份文件。\"</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  - alert: Redis命令拒绝率过高</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    expr: <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>redis_commands_rejected_calls_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance, job<span class=\"token punctuation\">)</span> /</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>irate<span class=\"token punctuation\">(</span>redis_commands_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance, job<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">25</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  命令拒绝率超过25%\"</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  的命令拒绝率超过了25%。当前拒绝率: %。\"</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>  - alert: Redis命令平均响应时间过长</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    expr: <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>redis_commands_duration_seconds_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> /</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>redis_commands_processed_total<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance, job<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token number\">0.250</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      summary: <span class=\"token string\">\"Redis实例  命令平均响应时间超过250ms\"</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>      description: <span class=\"token string\">\"Redis实例  的执⾏命令平均响应时间超过了250毫秒。当前平均响应时间: 秒。\"</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/redis_rules.yml </span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>Checking /etc/prometheus/rules/redis_rules.yml</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  SUCCESS: <span class=\"token number\">12</span> rules found</pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"75-导入-grafana-模板\"><a class=\"anchor\" href=\"#75-导入-grafana-模板\">#</a> 7.5 导入 Grafana 模板</h5>\n<p>导⼊⼀个 Redis 的 Grafana 模板。Dashboard ID 为 763</p>\n<h4 id=\"八-prometheus监控docker\"><a class=\"anchor\" href=\"#八-prometheus监控docker\">#</a> 八. Prometheus 监控 Docker</h4>\n<p>Docker 的监控，可以使⽤ Docker ⾃带的 stats 命令来获取当前主机上运⾏中的容器的资源使⽤情况。例如：容器的 CPU 使⽤率、内存占⽤、⽹络 IO 以及磁盘 IO 等指标。</p>\n<h5 id=\"81-安装docker\"><a class=\"anchor\" href=\"#81-安装docker\">#</a> 8.1 安装 Docker</h5>\n<p>1、添加 yum 源</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum remove docker* -y &amp;&amp; yum install -y yum-utils</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install docker-ce -y</span></pre></td></tr></table></figure><p>2、安装并 docker</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sudo mkdir -p /etc/docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t  <span class=\"token string\">\"https://docker.credclouds.com\"</span>,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t  <span class=\"token string\">\"https://k8s.credclouds.com\"</span>,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t  <span class=\"token string\">\"https://quay.credclouds.com\"</span>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t  <span class=\"token string\">\"https://gcr.credclouds.com\"</span>,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t  <span class=\"token string\">\"https://k8s-gcr.credclouds.com\"</span>,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t  <span class=\"token string\">\"https://ghcr.credclouds.com\"</span>,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t  <span class=\"token string\">\"https://do.nark.eu.org\"</span>,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t  <span class=\"token string\">\"https://docker.m.daocloud.io\"</span>,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t  <span class=\"token string\">\"https://docker.nju.edu.cn\"</span>,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t  <span class=\"token string\">\"https://docker.mirrors.sjtug.sjtu.edu.cn\"</span>,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t  <span class=\"token string\">\"https://docker.1panel.live\"</span>,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t  <span class=\"token string\">\"https://docker.rainbond.cc\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">]</span>, </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token string\">\"exec-opts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"native.cgroupdriver=systemd\"</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>EOF</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable docker --now</span></pre></td></tr></table></figure><p>4、运⾏两个容器应⽤</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run -d -p3811:80 --name demoapp --memory=\"100m\" oldxu3957/demoapp:v1.0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run -d -p3812:80 --name nginx --memory=\"50m\" nginx:1.16</span></pre></td></tr></table></figure><h5 id=\"82-运行cadvisor\"><a class=\"anchor\" href=\"#82-运行cadvisor\">#</a> 8.2 运⾏ Cadvisor</h5>\n<p>1、启动 Cadvisor 容器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node03 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run -d --name=cadvisor \\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8082</span>:8080 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> /:/rootfs:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-v</span> /var/run:/var/run:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-v</span> /sys:/sys:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-v</span> /dev/disk/:/dev/disk:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-v</span> /sys/fs/cgroup:/sys/fs/cgroup:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-v</span> /var/lib/docker/:/var/lib/docker:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">--privileged</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uhub.service.ucloud.cn/oldxu/cadvisor:v0.47.2</pre></td></tr></table></figure><p>2、Cadvisor 提供的 metrics 地址为 <a href=\"http://IP:8082/metrics\">http://IP:8082/metrics</a></p>\n<h5 id=\"83-配置prometheus\"><a class=\"anchor\" href=\"#83-配置prometheus\">#</a> 8.3 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  - job_name: <span class=\"token string\">\"docker\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8082\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/jT1DDkm.jpeg\" alt=\"1.jpg\" /></p>\n<h5 id=\"84-docker告警规则文件\"><a class=\"anchor\" href=\"#84-docker告警规则文件\">#</a> 8.4 Docker 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、编写 Docker 告警规则⽂件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/docker_rules.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- name: Docker的告警规则</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: 容器CPU利用率高</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>container_cpu_usage_seconds_total<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,name<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"实例的容器CPU利用率高\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\"容器的CPU利用率当前为%，超过了80%的阈值。\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  - alert: 容器内存利用率高</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    expr: <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>container_memory_working_set_bytes<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,name<span class=\"token punctuation\">)</span> /</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      sum<span class=\"token punctuation\">(</span>container_spec_memory_limit_bytes<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,name<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      summary: <span class=\"token string\">\"实例的容器内存利用率高\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      description: 容器<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼217--<span class=\"token operator\">></span>的内存最大限制是<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼218--<span class=\"token operator\">></span>MB , 目前利用率已达<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼219--<span class=\"token operator\">></span>%，超过限制的80%。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - alert: 容器整体内存利用率过高</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>container_memory_working_set_bytes<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> / sum<span class=\"token punctuation\">(</span>machine_memory_bytes<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      summary: <span class=\"token string\">\"所有容器的总内存利用率过高\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      description: <span class=\"token string\">\"当前所有容器占用物理内存的总量为%，超过了物理内存的80%阈值。\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  - alert: 容器网络发送速率过高</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>container_network_transmit_bytes_total<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span>by <span class=\"token punctuation\">(</span>instance,job,name<span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> / <span class=\"token number\">1024</span> / <span class=\"token number\">1024</span> <span class=\"token operator\">></span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      summary: <span class=\"token string\">\"实例的容器网络发送速率过高\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      description: <span class=\"token string\">\"容器的网络发送速率达到Mbps，超过了50Mbps的阈值。\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  - alert: 容器网络接收速率过高</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>container_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job,name<span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> / <span class=\"token number\">1024</span> / <span class=\"token number\">1024</span> <span class=\"token operator\">></span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      summary: <span class=\"token string\">\"实例的容器网络接收速率过高\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      description: <span class=\"token string\">\"容器的网络接收速率达到Mbps，超过了50Mbps的阈值。\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  - alert: 容器停止时间过长</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> - container_last_seen<span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,name<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      summary: <span class=\"token string\">\"实例的容器已停止\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      description: <span class=\"token string\">\"容器已停止运行超过60秒。当前停止时长 s\"</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  /etc/prometheus/promtool check rules /etc/prometheus/rules/docker_rules.yml </span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>Checking /etc/prometheus/rules/docker_rules.yml</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  SUCCESS: <span class=\"token number\">6</span> rules found</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"85-导入-grafana-模板\"><a class=\"anchor\" href=\"#85-导入-grafana-模板\">#</a> 8.5 导入 Grafana 模板</h5>\n<p>导⼊⼀个 Docker Container 的 Grafana 模板。Dashboard ID 为 11600</p>\n<h4 id=\"九-blackbox_exporter黑盒监控\"><a class=\"anchor\" href=\"#九-blackbox_exporter黑盒监控\">#</a> 九. Blackbox_exporter ⿊盒监控</h4>\n<p>Blackbox_exporter 是⼀个专⻔⽤于⿊盒监控的⼯具，它⽀持多种⽹络协议对⽬标对象进⾏检测，⽐如 HTTP、HTTPS、TCP 和 ICMP。这意味着我们可以⽤它来监控⽹站响应状态和响应时间、以及通过端⼝来判断服务是否正常运⾏。此外⽤户还可以通过设置不同的检查模块来定制 blackbox_exporter，以便它能够适应不同的检测需求。</p>\n<h5 id=\"91-安装blackbox_exporter\"><a class=\"anchor\" href=\"#91-安装blackbox_exporter\">#</a> 9.1 安装 Blackbox_exporter</h5>\n<p>1、访问 blackbox_exporter 的 github 地址， <a href=\"https://github.com/prometheus/blackbox_exporter/releases\">https://github.com/prometheus/blackbox_exporter/releases</a> ，下载 blackbox_exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 下载 blackbox_exporter</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#加速地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#2、解压 blackbox_exporter</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf blackbox_exporter-0.24.0.linux-amd64.tar.gz -C /etc</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/blackbox_exporter-0.24.0.linux-amd64/ /etc/blackbox_exporter</span></pre></td></tr></table></figure><p>2、编辑 /etc/blackbox_exporter/blackbox.yml 默认配置⽂件，可以⾃⾏定义对应的模块，blackbox_exporter/example.yml</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/blackbox_exporter/blackbox.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>modules:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># http 检查模块</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  http_2xx:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    prober: http</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    http:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      preferred_ip_protocol: <span class=\"token string\">\"ip4\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      valid_http_versions: <span class=\"token punctuation\">[</span> <span class=\"token string\">\"HTTP/1.1\"</span>, <span class=\"token string\">\"HTTP/2.0\"</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># Http Post 检查模块</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  http_post_2xx:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    prober: http</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    http:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      method: POST</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      preferred_ip_protocol: <span class=\"token string\">\"ip4\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      valid_http_versions: <span class=\"token punctuation\">[</span> <span class=\"token string\">\"HTTP/1.1\"</span>, <span class=\"token string\">\"HTTP/2.0\"</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\"># TCP 检查模块</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  tcp_connect:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    prober: tcp</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    timeout: 5s</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\"># ICMP 检查模块</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  icmp:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    prober: icmp</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    timeout: 5s</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    icmp:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      preferred_ip_protocol: <span class=\"token string\">\"ip4\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\"># DNS 检查模块</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  dns_tcp: </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    prober: dns</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    dns:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      transport_protocol: <span class=\"token string\">\"tcp\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      preferred_ip_protocol: <span class=\"token string\">\"ip4\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      query_name: <span class=\"token string\">\"www.oldxu.net\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\"># SSH 检查模块</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  ssh_banner:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    prober: tcp</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    tcp:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      query_response:</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      - expect: <span class=\"token string\">\"^SSH-2.0-\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      - send: <span class=\"token string\">\"SSH-2.0-blackbox-ssh-check\"</span></pre></td></tr></table></figure><p>3、配置 blackbox_exporter 启动⽂件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/blackbox_exporter.service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>blackbox_exporter</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/blackbox_exporter/blackbox_exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token parameter variable\">--config.file</span><span class=\"token operator\">=</span>/etc/blackbox_exporter/blackbox.yml <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  --web.listen-address<span class=\"token operator\">=</span>:9115</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span> <span class=\"token variable\">$MAINPID</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr></table></figure><p>4、启动 blackbox_exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start blackbox_exporter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable blackbox_exporter</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9115</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9115                 :::*                    LISTEN      <span class=\"token number\">1879</span>/blackbox_expor</pre></td></tr></table></figure><p>5、访问 Blackbox_exporter</p>\n<p>1、访问 Blackbox_exporter，通过 <a href=\"http://IP:9115\">http://IP:9115</a></p>\n<p>2、使⽤ blackbox_exporter 监控站点，需要传递⽬标 target ，以及检测⽅法 module</p>\n<p>具体的 Url 地址：<a href=\"http://192.168.40.224:9115/probe?target=https://www.baidu.com&amp;module=http_2xx&amp;debug=true\">http://192.168.40.224:9115/probe?target=https://www.baidu.com&amp;module=http_2xx&amp;debug=true</a></p>\n<p>3、针对 blackbox_exporter 的探测过程进⾏解读</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Logs <span class=\"token keyword\">for</span> the probe:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.422589861Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>main.go:181 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Beginning probe\"</span> <span class=\"token assign-left variable\">probe</span><span class=\"token operator\">=</span>http <span class=\"token assign-left variable\">timeout_seconds</span><span class=\"token operator\">=</span><span class=\"token number\">119.5</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.422705868Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>http.go:328 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Resolving target address\"</span> <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>www.baidu.com <span class=\"token assign-left variable\">ip_protocol</span><span class=\"token operator\">=</span>ip4</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.45404596Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>http.go:328 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Resolved target address\"</span> <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>www.baidu.com <span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token number\">183.2</span>.172.17</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.454537363Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>client.go:252 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Making HTTP request\"</span> <span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>https://183.2.172.17 <span class=\"token assign-left variable\">host</span><span class=\"token operator\">=</span>www.baidu.com</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.604504723Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>handler.go:120 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Received HTTP response\"</span> <span class=\"token assign-left variable\">status_code</span><span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.658174121Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>handler.go:120 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Response timings for roundtrip\"</span> <span class=\"token assign-left variable\">roundtrip</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">start</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.454597016+08:00 <span class=\"token assign-left variable\">dnsDone</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.454597016+08:00 <span class=\"token assign-left variable\">connectDone</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.47947711+08:00 <span class=\"token assign-left variable\">gotConn</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.587945635+08:00 <span class=\"token assign-left variable\">responseStart</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.604420439+08:00 <span class=\"token assign-left variable\">tlsStart</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.479503968+08:00 <span class=\"token assign-left variable\">tlsDone</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.58792749+08:00 <span class=\"token assign-left variable\">end</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T21:00:22.658024376+08:00</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2025</span>-07-10T13:00:22.658287803Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>main.go:181 <span class=\"token assign-left variable\">module</span><span class=\"token operator\">=</span>http_2xx <span class=\"token assign-left variable\">target</span><span class=\"token operator\">=</span>https://www.baidu.com <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Probe succeeded\"</span> <span class=\"token assign-left variable\">duration_seconds</span><span class=\"token operator\">=</span><span class=\"token number\">0.23567288</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 1、开始探测（msg=\"Beginning probe\"） 使⽤的是 http_2xx 模块，超时设置为 119.5 秒。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 2、解析⽬标地址（msg=\"Resolving target address\"） 正在尝试解析⽬标 www..com 的 IP 地址，使⽤的是 IPv4 协议。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 3、已解析⽬标地址（msg=\"Resolved target address\"） 成功解析为 183.2.172.17。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 4、发出 HTTP 请求（msg=\"Making HTTP request\"） 向 http://183.2.172.17 发出 HTTP 请求，请求中的 host 头设置为 www.baidu.com。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 5、收到 HTTP 响应（msg=\"Received HTTP response\"） 已收到状态码为 200 的 HTTP 响应，这意味着⽹⻚正常，服务器成功处理了请求。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 6、响应时间（msg=\"Response timings for roundtrip\"） 提供了对于整个请求 - 响应周期中每个步骤的具体时间点，包括 DNS 解析完成、TLS 握⼿开始和完成、连接建⽴、获得连接、响应开始等时间点。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 7、探测成功（msg=\"Probe succeeded\"） 探测操作成功完成，总耗时为 0.23567288 秒。</span></pre></td></tr></table></figure><h5 id=\"92-配置prometheus\"><a class=\"anchor\" href=\"#92-配置prometheus\">#</a> 9.2 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_http'</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 这次不是 /metrics，⽽是 /probe</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    params: <span class=\"token comment\"># 传递参数</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>http_2xx<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 调⽤哪个模块进⾏探测</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.xuliangwei.com\"</span>,<span class=\"token string\">\"http://www.oldxu.net\"</span>,<span class=\"token string\">\"https://www.baidu.com\"</span>,<span class=\"token string\">\"http://httpbin.org/status/400\"</span>,<span class=\"token string\">\"https://httpstat.us/500\"</span>,<span class=\"token string\">\"https://httpstat.us/502\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># relabel_configs 是标签重写的配置，这⾥进⾏了三次操作：</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># 1、将⽬标地址（__address__）赋予给__param_target，这是 Blackbox Exporter 需要的⽬标 target 参数。</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\"># 2、将__param_target 的内容复制到 instance 标签，这样 Prometheus UI 中显示的 instance 实例名称会是⽬标站点地址，⽽不是 Blackbox 的地址。</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\"># 3、最后，将实际发送探测请求的地址（__address__）设置为运⾏ Blackbox Exporter 的节点地址和端⼝（prom-node04.oldxu.net:9115），这样 Prometheus 就会向这个地址发送探测请求。</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\">#. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"93-配置tcp-ssh-icmp监控\"><a class=\"anchor\" href=\"#93-配置tcp-ssh-icmp监控\">#</a> 9.3 配置 tcp、ssh、icmp 监控</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1、修改 Prometheus 配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_http'</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 这次不是 /metrics，是 /probe</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    params: <span class=\"token comment\"># 传递参数</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>http_2xx<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 调哪个模块进探测</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.xuliangwei.com\"</span>,<span class=\"token string\">\"http://www.oldxu.net\"</span>,<span class=\"token string\">\"https://www.baidu.com\"</span>,<span class=\"token string\">\"http://httpbin.org/status/400\"</span>,<span class=\"token string\">\"https://httpstat.us/500\"</span>,<span class=\"token string\">\"https://httpstat.us/502\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_tcp'</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>tcp_connect<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 tcp_connect 模块</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:3306\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:6379\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_icmp'</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>icmp<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 icmp 模块</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_ssh'</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>ssh_banner<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使⽤ ssh_banner 模块</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:22\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">#2. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"94-blackbox告警规则文件\"><a class=\"anchor\" href=\"#94-blackbox告警规则文件\">#</a> 9.4 Blackbox 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/blackbox_rules.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: Blackbox告警规则文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  - alert: 探测失败</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>probe_success <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance, job<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"实例  探测失败\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\"探测目标  在 job  中失败。\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: 站点整体平均请求时间过长</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>avg_over_time<span class=\"token punctuation\">(</span>probe_http_duration_seconds<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">\"实例  请求时间过长\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">\"实例  最近1分钟的平均请求时间超过3秒。当前平均请求时间：秒。\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: 重定向次数过多</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: probe_http_redirects <span class=\"token operator\">></span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">\"实例  重定向次数过多\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">\"实例  在最近的探测中重定向次数超过5次。当前次数：次。\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  - alert: 站点阶段耗时过⻓</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    expr: <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        probe_http_duration_seconds<span class=\"token punctuation\">&#123;</span>phase<span class=\"token operator\">=</span><span class=\"token string\">\"connect\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> or</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        probe_http_duration_seconds<span class=\"token punctuation\">&#123;</span>phase<span class=\"token operator\">=</span><span class=\"token string\">\"processing\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> or</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        probe_http_duration_seconds<span class=\"token punctuation\">&#123;</span>phase<span class=\"token operator\">=</span><span class=\"token string\">\"resolve\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> or</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        probe_http_duration_seconds<span class=\"token punctuation\">&#123;</span>phase<span class=\"token operator\">=</span><span class=\"token string\">\"tls\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> or</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        probe_http_duration_seconds<span class=\"token punctuation\">&#123;</span>phase<span class=\"token operator\">=</span><span class=\"token string\">\"transfer\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>          <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      summary: <span class=\"token string\">\"实例  阶段 '' 耗时过长\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      description: <span class=\"token string\">\"实例  在阶段 '' 的耗时超过0.5秒。当前耗时：秒。\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  - alert: 站点响应状态码异常</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    expr: probe_http_status_code <span class=\"token operator\">&lt;=</span> <span class=\"token number\">199</span> or probe_http_status_code <span class=\"token operator\">>=</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      summary: <span class=\"token string\">\"实例  返回异常状态码\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      description: <span class=\"token string\">\"实例  返回的状态码为 ，表明请求可能存在问题。\"</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  - alert: 证书即将过期<span class=\"token operator\">&lt;</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>probe_ssl_earliest_cert_expiry - time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> /86400 <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    for: 24h</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      summary: <span class=\"token string\">\"实例  的 SSL 证书即将过期\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      description: <span class=\"token string\">\"实例  的 SSL 证书将在  天内过期。\"</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  - alert: 证书即将过期<span class=\"token operator\">&lt;</span><span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    expr: <span class=\"token punctuation\">(</span>probe_ssl_earliest_cert_expiry - time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> /86400 <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    for: 24h</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      summary: <span class=\"token string\">\"实例  的 SSL 证书即将过期\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      description: <span class=\"token string\">\"实例  的 SSL 证书将在  天内过期.\"</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/blackbox_rules.yml </span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>Checking /etc/prometheus/rules/blackbox_rules.yml</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  SUCCESS: <span class=\"token number\">7</span> rules found</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"95-导入blackbox图形\"><a class=\"anchor\" href=\"#95-导入blackbox图形\">#</a> 9.5 导⼊ Blackbox 图形</h5>\n<p>1、专⽤于针对 HTTP 的图形，导⼊ ID13659 ；</p>\n<p>2、也可以使⽤ ID 为 7587 的图形；</p>\n<p>3、以及 ID 为 9965 的图形；</p>\n<h4 id=\"十-domain_exporter域名监控\"><a class=\"anchor\" href=\"#十-domain_exporter域名监控\">#</a> 十. domain_exporter 域名监控</h4>\n<p>domain_exporter 主要⽤来监控⽹站域名的过期时间。这对于企业和个⼈都是⽐较重要的，因为域名过期可能会导致⽹站⽆法访问，进⽽影响业务的正常运⾏。因此监控 “域名的过期时间” 就显得⽐较重要了。</p>\n<p>domain_exporter 的⼯作逻辑有如下⼏步：</p>\n<ul>\n<li>1、收集域名信息：通过 WHOIS 协议收集 “target 参数定义的域名” 信息。</li>\n<li>2、解析域名信息：从收集到的数据中解析出域名的过期时间。</li>\n<li>3、导出指标：将解析出的域名过期时间等信息格式化为 Prometheus 兼容的格式，⽽后通过 /probe 接⼝输出指标。</li>\n</ul>\n<h5 id=\"101-安装domain_exporter\"><a class=\"anchor\" href=\"#101-安装domain_exporter\">#</a> 10.1 安装 domain_exporter</h5>\n<p>1、访问 domain_exporter 的 github 地址， <a href=\"https://github.com/caarlos0/domain_exporter/releases\">https://github.com/caarlos0/domain_exporter/releases</a> ，下载 domain_exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 下载 domain_exporte</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/caarlos0/domain_exporter/releases/download/v1.23.0/domain_exporter_1.23.0_linux_amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#2. 加速地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/caarlos0/domain_exporter/releases/download/v1.23.0/domain_exporter_1.23.0_linux_amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#3. 解压 domain_exporter</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir /etc/domain_exporter_1.23.0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf domain_exporter_1.23.0_linux_amd64.tar.gz -C /etc/domain_exporter_1.23.0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/domain_exporter_1.23.0/ /etc/domain_exporter</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#4. 配置 domain_exporter 启动⽂件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 domain_exporter<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/domain_exporter.service</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>domain_exporter</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/domain_exporter/domain_exporter </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span> <span class=\"token variable\">$MAINPID</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#5. 动 domain_exporter</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start domain_exporter.service</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable domain_exporter.service</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Created symlink from /etc/systemd/system/multi-user.target.wants/domain_exporter.service to /usr/lib/systemd/system/domain_exporter.service.</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9222</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9222                 :::*                    LISTEN      <span class=\"token number\">1880</span>/domain_exporte</pre></td></tr></table></figure><p>2、通过 domain_exporter 获取域名过期时间，访问 URL <a href=\"http://localhost:9222/probe?target=oldxu.net\">http://localhost:9222/probe?target=oldxu.net</a> 来获取特定域名（如 <a href=\"http://oldxu.net\">oldxu.net</a>）的过期时间。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  curl http://localhost:9222/probe?target=hmallleasing.com</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># HELP domain_expiry_days time in days until the domain expires</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># TYPE domain_expiry_days gauge</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>domain_expiry_days<span class=\"token punctuation\">&#123;</span>domain<span class=\"token operator\">=</span><span class=\"token string\">\"hmallleasing.com\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">741</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># HELP domain_probe_duration_seconds returns how long the probe took to complete in seconds</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># TYPE domain_probe_duration_seconds gauge</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>domain_probe_duration_seconds<span class=\"token punctuation\">&#123;</span>domain<span class=\"token operator\">=</span><span class=\"token string\">\"hmallleasing.com\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1.036303946</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># HELP domain_probe_success whether the probe was successful or not</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># TYPE domain_probe_success gauge</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>domain_probe_success<span class=\"token punctuation\">&#123;</span>domain<span class=\"token operator\">=</span><span class=\"token string\">\"hmallleasing.com\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><h5 id=\"102-配置prometheus\"><a class=\"anchor\" href=\"#102-配置prometheus\">#</a> 10.2 配置 Prometheus</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_http'</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 这次不是 /metrics，是 /probe</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    params: <span class=\"token comment\"># 传递参数</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>http_2xx<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 调哪个模块进探测</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.xuliangwei.com\"</span>,<span class=\"token string\">\"http://www.oldxu.net\"</span>,<span class=\"token string\">\"https://www.baidu.com\"</span>,<span class=\"token string\">\"http://httpbin.org/status/400\"</span>,<span class=\"token string\">\"https://httpstat.us/500\"</span>,<span class=\"token string\">\"https://httpstat.us/502\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_tcp'</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>tcp_connect<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 tcp_connect 模块</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:3306\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:6379\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_icmp'</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>icmp<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 icmp 模块</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_ssh'</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>ssh_banner<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使⽤ ssh_banner 模块</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:22\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  - job_name: <span class=\"token string\">'domain_exporter'</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 不是 /metrics，⽽是 /probe</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"nf-leasing.com\"</span>,<span class=\"token string\">\"ixuyong.cn\"</span>,<span class=\"token string\">\"hmallleasing.com\"</span>,<span class=\"token string\">\"jd.com\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>      replacement: prom-node04.oldxu.net:9222</pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token comment\">#. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"103-domain告警规则文件\"><a class=\"anchor\" href=\"#103-domain告警规则文件\">#</a> 10.3 domain 告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/domain_rules.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: domain告警规则文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  - alert: 域名即将过期 <span class=\"token operator\">&lt;</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    expr: domain_expiry_days <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      summary: <span class=\"token string\">\"域名即将过期 (实例 )\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      description: <span class=\"token string\">\"域名  还有少于100天即将过期。当前剩余天数：。\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  - alert: 域名即将过期<span class=\"token operator\">&lt;</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    expr: domain_expiry_days <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      summary: <span class=\"token string\">\"域名即将过期 (实例 )\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      description: <span class=\"token string\">\"域名  还有少于30天即将过期。当前剩余天数：。\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  - alert: 域名检测失败</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    expr: sum<span class=\"token punctuation\">(</span>domain_probe_success<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>domain, instance, job<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    for: 5m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      summary: <span class=\"token string\">\"域名检测失败 (实例 )\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      description: <span class=\"token string\">\"域名  在  上的检测失败。当前值：。\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/domain_rules.yml </span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>Checking /etc/prometheus/rules/domain_rules.yml</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  SUCCESS: <span class=\"token number\">3</span> rules found</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"104-导入domain_exporter图形\"><a class=\"anchor\" href=\"#104-导入domain_exporter图形\">#</a> 10.4 导⼊ domain_exporter 图形</h5>\n<p>查看域名的状态，以及连通性和过期时间，导⼊ ID 13924</p>\n<h4 id=\"十一-pushgateway推送网关服务\"><a class=\"anchor\" href=\"#十一-pushgateway推送网关服务\">#</a> 十一. PushGateway 推送⽹关服务</h4>\n<p>Pushgateway 允许脚本通过 Push 的⽅式来推送指标数据，但它不会像 Prometheus 那样主动去抓取指标数据。</p>\n<p>Pushgateway 作为中间存储，仅负责接收数据，等待 Prometheus Server 进⾏数据抓取，它⾃身并不具备抓取功能。默认情况下，数据保存在内存中，但可以通过 --persistence.file 参数持久化数据⾄⽂件中，同时通过 --persistence.interval=5m 设置数据持久化间隔。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/WUzZt2R.jpeg\" alt=\"1.jpg\" /></p>\n<p>使⽤ Pushgateway 时需要注意以下⼏点：</p>\n<ul>\n<li>1、若使⽤单个 Pushgateway 接收多个不同实例、或者是脚本推送的数据，它会成为单点。</li>\n<li>2、Pushgateway 不会⾃动删除已推送的数据，⼀旦数据推送到 Pushgateway， Prometheus 会持续从中抓取数据。</li>\n<li>3、删除 Pushgateway 中的数据不会影响 Prometheus 已经抓取的历史数据，但之后 Prometheus 将不会有新的数据更新，直到有新的数据被推送到 Pushgateway。</li>\n</ul>\n<h5 id=\"111-安装pushgateway\"><a class=\"anchor\" href=\"#111-安装pushgateway\">#</a> 11.1 安装 pushGateway</h5>\n<p>1、访问 PushGateway 官⽹ <a href=\"https://github.com/prometheus/pushgateway\">https://github.com/prometheus/pushgateway</a> ，下载 PushGateway</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 下载 Pushgateway </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/prometheus/pushgateway/releases/download/v1.7.0/pushgateway-1.7.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 加速地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/prometheus/pushgateway/releases/download/v1.7.0/pushgateway-1.7.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#2. 解压 PushGateway</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf pushgateway-1.7.0.linux-amd64.tar.gz -C /etc/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/pushgateway-1.7.0.linux-amd64/ /etc/pushgateway</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#3. 编写 pushgateway 启动⽂件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/pushgateway.service </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>pushgateway</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/pushgateway/pushgateway <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> --web.listen-address<span class=\"token operator\">=</span>:9091 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> --web.telemetry-path<span class=\"token operator\">=</span>/metrics <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> --web.enable-lifecycle</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#4. 启动 PushGateway</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start pushgateway</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable pushgateway</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9091</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9091                 :::*                    LISTEN      <span class=\"token number\">2421</span>/pushgateway</pre></td></tr></table></figure><p>2、是⽤ Curl 给 pushgateway 推送⼀个 some_metric 的指标，值为 3.14</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"some_metric 3.14\" | curl --data-binary @- http://localhost:9091/metrics/job/some_job</span></pre></td></tr></table></figure><p>3、访问 pushgateway 的 web ⻚⾯，通过 <a href=\"http://IP:9091\">http://IP:9091</a></p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/RwuXAZe.png\" alt=\"2.png\" /></p>\n<h5 id=\"112-配置promethues\"><a class=\"anchor\" href=\"#112-配置promethues\">#</a> 11.2 配置 Promethues</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rule_files:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - <span class=\"token string\">\"/etc/prometheus/rules/*.yml\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather_exporter\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  - job_name: <span class=\"token string\">\"rabbitmq\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node02.oldxu.net:15692\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  - job_name: <span class=\"token string\">\"nginx\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9113\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  - job_name: <span class=\"token string\">\"tomcat\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  - job_name: <span class=\"token string\">\"jmx_exporter\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:12345\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  - job_name: <span class=\"token string\">\"mysqld_exporter\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        role: master</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9104\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      labels:</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        service: database</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        role: slave</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  - job_name: <span class=\"token string\">\"redis_exporter\"</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:9121\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_http'</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 这次不是 /metrics，是 /probe</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    params: <span class=\"token comment\"># 传递参数</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>http_2xx<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 调哪个模块进探测</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.xuliangwei.com\"</span>,<span class=\"token string\">\"http://www.oldxu.net\"</span>,<span class=\"token string\">\"https://www.baidu.com\"</span>,<span class=\"token string\">\"http://httpbin.org/status/400\"</span>,<span class=\"token string\">\"https://httpstat.us/500\"</span>,<span class=\"token string\">\"https://httpstat.us/502\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_tcp'</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>tcp_connect<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 tcp_connect 模块</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node03.oldxu.net:3306\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:6379\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_icmp'</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>icmp<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使 icmp 模块</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  - job_name: <span class=\"token string\">'blackbox_ssh'</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    metrics_path: /probe</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    params:</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      module: <span class=\"token punctuation\">[</span>ssh_banner<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 使⽤ ssh_banner 模块</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:22\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:22\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>      replacement: prom-node04.oldxu.net:9115</pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  - job_name: <span class=\"token string\">'domain_exporter'</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    metrics_path: /probe <span class=\"token comment\"># metrics 的 path 不是 /metrics，⽽是 /probe</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"nf-leasing.com\"</span>,<span class=\"token string\">\"hmallleasing.com\"</span>,<span class=\"token string\">\"jd.com\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    relabel_configs:</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__address__<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>      target_label: __param_target</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    - source_labels: <span class=\"token punctuation\">[</span>__param_target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      target_label: instance</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    - target_label: __address__</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>      replacement: prom-node04.oldxu.net:9222</pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>  - job_name: <span class=\"token string\">\"pushgateway\"</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node04.oldxu.net:9091\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token comment\">#. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"113-编写脚本并推送指标\"><a class=\"anchor\" href=\"#113-编写脚本并推送指标\">#</a> 11.3 编写脚本并推送指标</h5>\n<p>假设我们有⼀个备份脚本，它每天执⾏⼀次并且很快就完成了。但是我们需要知道它是否每次都成功执⾏了，以及每次执⾏花了多少时间。为了捕获这些信息，我们可以在脚本执⾏完成之后，将其成功状态和执⾏时间推送到 PushGateway。之后 Prometheus 就会定期从 PushGateway 中拉取这些数据，以此来监控这个脚本的状态。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat pushgateway_backup.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"给定一个备份的应用名称\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># PushGateway 地址</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">PUSH_ADDR</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node04.oldxu.net\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 应用名称</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">APP_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 备份脚本示例</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">START_TIME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%s<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 模拟备份任务，随机睡眠时间 1-10 秒</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">SLEEP_TIME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> RANDOM <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token variable\">))</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">sleep</span> <span class=\"token variable\">$SLEEP_TIME</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 随机决定备份操作是否成功</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$((</span>RANDOM <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token variable\">))</span></span> <span class=\"token parameter variable\">-lt</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token assign-left variable\">STATUS</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token comment\"># 成功</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token assign-left variable\">STATUS</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\"># 失败</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token assign-left variable\">END_TIME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%s<span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">DURATION</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>END_TIME <span class=\"token operator\">-</span> START_TIME<span class=\"token variable\">))</span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 推送指标至 PushGateway</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> <span class=\"token function\">curl</span> --data-binary @- http://<span class=\"token variable\">$PUSH_ADDR</span>:9091/metrics/job/backup/instance/<span class=\"token variable\">$APP_NAME</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre># HELP backup_duration_seconds The duration of the last backup in seconds.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre># TYPE backup_duration_seconds gauge</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>backup_duration_seconds&#123;application=\"<span class=\"token variable\">$APP_NAME</span>\"&#125; <span class=\"token variable\">$DURATION</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre># HELP backup_success Last backup was success(1) or ERROR(0).</pre></td></tr><tr><td data-num=\"34\"></td><td><pre># TYPE backup_success gauge</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>backup_success&#123;application=\"<span class=\"token variable\">$APP_NAME</span>\"&#125; <span class=\"token variable\">$STATUS</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>EOF</span></pre></td></tr></table></figure><p>1、执⾏脚本，需要传递⼀个应⽤的名称</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh pushgateway_backup.sh shop</span></pre></td></tr></table></figure><p>2、在 Prometheus UI 中检查 backup_duration_seconds 和 backup_success 指标</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/wKv8ybJ.png\" alt=\"1.png\" /></p>\n<h5 id=\"114-配置告警规则文件\"><a class=\"anchor\" href=\"#114-配置告警规则文件\">#</a> 11.4 配置告警规则⽂件</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/rules/backup_rules.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- name: backup_alerts</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># 警告：在备份成功情况在，如果备份任务耗时超过了 9 秒则触发告警</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  - alert: 备份告警超时</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    expr: backup_duration_seconds <span class=\"token operator\">></span> <span class=\"token number\">6</span> and backup_success <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      severity: warning</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      summary: <span class=\"token string\">\"备份任务耗时过长\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      description: <span class=\"token string\">\" 应⽤备份任务成功完成，但耗时超过了6秒。实际耗时:  秒。\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\"># 严重警告：备份任务失败，并且不考虑耗时</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  - alert: 备份任务失败</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    expr: backup_success <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    for: 1m</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    annotations:</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      summary: <span class=\"token string\">\"备份失败\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      description: <span class=\"token string\">\" 任务中  应用备份失败。\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#2. 检查告警规则语法</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check rules /etc/prometheus/rules/backup_rules.yml </span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Checking /etc/prometheus/rules/backup_rules.yml</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  SUCCESS: <span class=\"token number\">2</span> rules found</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#3. 重载 Prometheus</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"115-清理pushgateway\"><a class=\"anchor\" href=\"#115-清理pushgateway\">#</a> 11.5 清理 pushGateway</h5>\n<p>清理 PushGateway 中的数据，有两种⽅式，⼀种⼿动清理、⼀种⾃动清理</p>\n<p>1、⼿动清理：访问 PushGateway 的 web 界⾯，找到你要清理的指标，然后点击 “Delete Group” 进⾏删除。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/vu55T71.jpeg\" alt=\"2.jpg\" /></p>\n<p>2、⾃动清理：设置⼀个定时任务（如 cron job），定期通过 API 调⽤删除过时的指标。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat clear_pushgateway_job.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"给定要清理的 [Job_name名称]和 [instance名称]\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">JOB_NAME</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">INSTANCE_NAME</span><span class=\"token operator\">=</span><span class=\"token variable\">$2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 清理特定 job 名称的指标</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> DELETE http://prom-node04.oldxu.net:9091/metrics/job/<span class=\"token variable\">$&#123;JOB_NAME&#125;</span>/instance/<span class=\"token variable\">$&#123;INSTANCE_NAME&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 设定 crontab</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node04 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># crontab -e</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">59</span> <span class=\"token number\">23</span> * * * /bin/bash /root/clear_pushgateway_job.sh backup shop</pre></td></tr></table></figure>",
            "tags": [
                "Prometheus"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/3386060324.html",
            "url": "http://ixuyong.cn/posts/3386060324.html",
            "title": "PromQL快速入门（二）",
            "date_published": "2025-06-28T14:16:53.000Z",
            "content_html": "<h3 id=\"promql快速入门二\"><a class=\"anchor\" href=\"#promql快速入门二\">#</a> PromQL 快速入门（二）</h3>\n<h4 id=\"一-promql基础概念\"><a class=\"anchor\" href=\"#一-promql基础概念\">#</a> 一. PromQL 基础概念</h4>\n<h5 id=\"11-什么是promeql\"><a class=\"anchor\" href=\"#11-什么是promeql\">#</a> 1.1 什么是 PromeQL</h5>\n<p>Prometheus 内置了⼀种强⼤的查询语⾔：PromQL，即 PrometheusQuery Language。PromQL 允许⽤户实时查询监控数据，并对这些数据执⾏复杂的聚合和计算操作。</p>\n<p>在 PromQL 中，查询的结果被称为 “向量（vector）”，分为两种类型：</p>\n<p>1、即时向量（Instant vector）：即时向量查询返回的是⼀组时间序列数据，但每个时间序列中只包含单个的最新数据点。例如：查询当前时刻服务器 1 分钟的负载，所得到的结果就是⼀个即时向量。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/M18NeIk.jpeg\" alt=\"1.jpg\" /></p>\n<p>2、范围向量（Range vector）：范围向量查询的结果包含了⼀个时间范围内的所有数据点。例如：查询过去 1 分钟内服务器负载的变化情况，返回的数据集就是⼀个范围向量。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/VlsLPMD.jpeg\" alt=\"2.jpg\" /></p>\n<p>在 PromQL 中，除了有向量类型的数据，还有其他的数据类型，具体有：</p>\n<p>标量（Scalar）：标量仅代表⼀个单⼀的浮点数值。可以将向量的某⼀个值通过 scalar () 函数转为标量，然后进⾏数值运算，但使⽤较少。</p>\n<p>字符串（String）：在 PromQL 查询结果中，每个时间序列都伴随着⼀组标签，这些标签和标签值，就是使⽤字符串类型来定义。这些标签为时间序列提供了元数据信息，例如 {job=&quot;nginx&quot;,instance=&quot;<a href=\"http://prom-node01.oldxu.net\">prom-node01.oldxu.net</a>&quot;, method=&quot;get&quot;, url=&quot;/api&quot;} ，通过标签能很好的对数据进⾏分类和识别。</p>\n<h5 id=\"12-promql应用场景\"><a class=\"anchor\" href=\"#12-promql应用场景\">#</a> 1.2 PromQL 应⽤场景</h5>\n<p>Prometheus 的核⼼就是 PromQL，PromQL 在⽇常的数据可视化，查询、定义告警规则都会是⽤到，因此掌握 PromQL 基本上就掌握了 Prometheus；</p>\n<p>1、临时查询：使⽤ PromQL，你可以实时地查询监控数据，这对于调试和诊断问题⾮常有帮助。通常，我们通过 Prometheus ⾃带的表达式浏览器来执⾏这些查询。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/AJVZFdO.jpeg\" alt=\"3.jpg\" /></p>\n<p>2、数据可视化，PromQL 可以帮助我们创建数据的可视化展示，这些可视化通常是通过集成⼯具如 Grafana 来实现的，可以将我们 PromQL 查询的结果展示得更直观。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/oqN9oVU.jpeg\" alt=\"2.jpg\" /></p>\n<p>3、监控告警：Prometheus 可以直接使⽤ PromQL 对指标的查询结果来设置告警。⼀旦查询结果满⾜指定的条件，就会触发告警，⼀个完整的报警规则如下所示：</p>\n<p>⼀个告警规则包括了告警的名称、条件、持续时间等信息。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>groups:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- name: 告警组</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  rules:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  - alert: 节点宕机   <span class=\"token comment\"># 告警名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    expr: up <span class=\"token operator\">==</span> <span class=\"token number\">0</span>   <span class=\"token comment\"># 告警条件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    for: 1m         <span class=\"token comment\"># 持续时间</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    labels:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      severity: critical</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    annotations: <span class=\"token comment\"># 定义邮件中收到的告警详细内容</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      summary: <span class=\"token string\">\"节点宕机警告 - 实例：\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      description: <span class=\"token string\">\"作业  的节点⽆法访问，已经持续超过1分钟。\"</span></pre></td></tr></table></figure><h4 id=\"二-promql基础使用\"><a class=\"anchor\" href=\"#二-promql基础使用\">#</a> 二. PromQL 基础使⽤</h4>\n<h5 id=\"21-指标查询\"><a class=\"anchor\" href=\"#21-指标查询\">#</a> 2.1 指标查询</h5>\n<p>1、查询指标的最直接⽅式是输⼊ “指标的名称”。⽐如，你想知道系统的⼀分钟负载（node_load1）情况：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查询结果（结果展示了所有被监控节点的⼀分钟负载。）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.02</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.13</span></pre></td></tr></table></figure><p>2、但是，在实际监控时，我们通常只需要关注 “特定节点” 的指标数据。例如，如果我只想查看 <a href=\"http://prom-node01.oldxu.net\">prom-node01.oldxu.net</a> 这个节点的⼀分钟负载情况，那么就可需要是⽤ “标签匹配器” 来筛选出所需的指标。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查询结果（由于指定了过滤条件，因此只会展示 node01 节点的 1 分钟负载）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.35</span></pre></td></tr></table></figure><p>3、因此，标签匹配器就是通过标签和标签值，来筛选出我们所需要的指标数据。使⽤标签匹配器时，可以按照以下语法构造查询表达式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>metric_name<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">&lt;</span>label_name<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>label_value<span class=\"token operator\">></span>, <span class=\"token operator\">&lt;</span>label_name<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token operator\">=~</span><span class=\"token operator\">&lt;</span>regex<span class=\"token operator\">></span>, <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>其中各个部分的含义如下：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># = 表示⼀个标签必须严格等于⼀个给定的值。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># != 表示排除等于特定值的标签。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># =~ 表示标签的值必须匹配⼀个正则表达式。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># !~ 表示标签的值不应匹配⼀个正则表达式。</span></pre></td></tr></table></figure><p>实例 1：查询所有实例，CPU 的第 0 个核⼼，中的 user ⽤户空间所占⽤ CPU 的时间，指标名称：node_cpu_seconds_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>,mode<span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>实例 2：查询所有实例，eth0 ⽹卡发送总⼤⼩，指标名称：node_network_transmit_bytes_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_network_transmit_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 转为 GB</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>node_network_transmit_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span> / <span class=\"token number\">1024</span> /1024 /1024</pre></td></tr></table></figure><p>实例 3：查询所有实例的⽹卡接收字节数，排除 lo 接⼝，指标名称：node_network_receive_bytes_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"lo\"</span>,device<span class=\"token operator\">!=</span><span class=\"token string\">\"docker0\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!</span>~<span class=\"token string\">\"lo|docker0\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 转为 GB</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!=</span><span class=\"token string\">\"lo\"</span>,device<span class=\"token operator\">!=</span><span class=\"token string\">\"docker0\"</span><span class=\"token punctuation\">&#125;</span> /1024 /102</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">4</span> /1024</pre></td></tr></table></figure><p>实例 4：查询：挂载点以 /run 开头的⽂件系统可⽤字节数，指标名称 node_filesystem_avail_bytes</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=~</span><span class=\"token string\">\"^/run.*\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 字节转 MB</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=~</span><span class=\"token string\">\"^/run.*\"</span><span class=\"token punctuation\">&#125;</span> /1024/1024</pre></td></tr></table></figure><p>实例 5：块设备名字不包含 vda 和 sr0 的读字节数，指标名称 node_disk_read_bytes_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_disk_read_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">!</span>~<span class=\"token string\">\".*sr0.*\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"22-时间范围查询\"><a class=\"anchor\" href=\"#22-时间范围查询\">#</a> 2.2 时间范围查询</h5>\n<p>在 Prometheus 中，范围向量选择器使我们能够提取时间序列中⼀段时间范围内的数据点。要定义⼀个范围向量选择器，你只需要在指标名称后⾯加上⽅括号 []，并在其中指定⼀个时间⻓度。时间⻓度有：s 秒，m 分钟，h ⼩时，d 天，w 周，y 年。使⽤范围向量选择器，你可以灵活查询从最近⼏分钟到⼏年的数据，便于分析和监控指标随时间的变化。</p>\n<p>1、例如，我们想查询 prom-node01.oldxu.net 这个实例，在过去 2 分钟，负载所有数据点。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>2m<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span> @1751165619.66</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0</span> @1751165634.66</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0</span> @1751165649.66</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">0</span> @1751165664.66</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0</span> @1751165679.66</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">0</span> @1751165694.66</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0</span> @1751165709.66</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">0</span> @1751165724.66</pre></td></tr></table></figure><p>2、在 Prometheus 中，通常使⽤相对时间（如过去⼏分钟、⼩时或天）来查询数据。但是，如果你需要查询⼀个绝对时间点的数据，您可以直接使⽤ UNIX 时间戳来指定查询的具体时间。（在 Prometheus 中通常是以毫秒为单位的）</p>\n<p>例如，查询 2025 年 6 ⽉ 29 ⽇上午 10:58:10 的 <a href=\"http://prom-node01.oldxu.net\">prom-node01.oldxu.net</a> 实例的负载状态。需要先将时间转为 UNIX 时间戳，然后执⾏如下查询语句。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#指定时间查询表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> @ <span class=\"token number\">1751165890</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查询结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span>  <span class=\"token number\">0.27</span></pre></td></tr></table></figure><h5 id=\"23-时间偏移查询\"><a class=\"anchor\" href=\"#23-时间偏移查询\">#</a> 2.3 时间偏移查询</h5>\n<p>除了能够查询过去⼏分钟或⼏⼩时的数据，以及查询指定时间点的数据，同时 Prometheus 也允许您通过 offset 修饰符来指定查询从当前时间往回推某个具体的时间段。这种⽅式常⽤于⽐较，例如：今天 QPS 是 10000，昨天这个时间是 5000，我们就可以计算它们的增⻓率之类的。</p>\n<p>1、如果您想要查看昨天整天的数据，可以使⽤以下查询表达式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 假设是⽤如下表达式查询的结果是 2023-12-26 17:20</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_load1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 那么如下表达式查询的数据将返回：(2023-12-24 17:20 - 2023-12-25 17:20)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_load1<span class=\"token punctuation\">[</span>1d<span class=\"token punctuation\">]</span> offset 1d</pre></td></tr></table></figure><p>2、如果想要查看⼀周前的 “时间范围内” 的数据，可以使⽤如下查询：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_load1<span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span> offset 1w</pre></td></tr></table></figure><p>这个查询会返回当前时间往回推⼀周，并从那个时间点开始，持续 5 分钟的数据范围内的 node_load1 指标。例如，如果现在是 12 ⽉ 26 ⽇星期⼀下午 17:30，那么该查询将返回 12 ⽉ 19 ⽇星期⼀下午 17:25 到 17:30 这 5 分钟范围内的所有数据点。</p>\n<p>3、对⽐分析实战：对⽐ “当前时间点接收的⽹络流量” 与 “1 ⼩时前的流量” 进⾏⽐对分析，以判断流量是增⻓还是减少。</p>\n<ul>\n<li>计算同环⽐的增⻓率或减少率的公式：同环⽐率 =(当前流量−过去 1 ⼩时的流量) / 过去 1 ⼩时的流量 ×100</li>\n<li>例如，如果当前总接收流量是 6000MB，⽽ 1 ⼩时前接收的总流量是 5000MB，</li>\n<li>那么计算公式为： （6000 - 5000） / 5000 * 100 = 20% （意味着相⽐ 1 ⼩时前，当前流量增⻓了 20%）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span> - node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span> offset 1h<span class=\"token punctuation\">)</span> / node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span> offset 1h * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-87.68874820331817</span> <span class=\"token comment\"># 负增⻓ 80%</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">4231.893284128109</span>  <span class=\"token comment\"># 增⻓ 4231%</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">24.658781604740295</span> <span class=\"token comment\"># 增⻓ 24%</span></pre></td></tr></table></figure><h4 id=\"三-promql常用函数\"><a class=\"anchor\" href=\"#三-promql常用函数\">#</a> 三. PromQL 常⽤函数</h4>\n<h5 id=\"31-count类型常用函数\"><a class=\"anchor\" href=\"#31-count类型常用函数\">#</a> 3.1 Count 类型常⽤函数</h5>\n<p>前⾯我们讲过，Counter 类型的监控指标只增不减，因此其样本值应该是不断增⼤的。因此单纯的 Counter 总数并没有直接作⽤，⽽是需要借助于 rate、irate、increase 和等函数来计算样本数据的变化状况（增⻓率）；</p>\n<p>1、rate ⽤于计算平均增⻓速率：计算公式：通过指定时间范围内的样本，使⽤最后⼀个样本的值减去第⼀个样本的值，⽽后除以这两个样本之间的间隔时⻓。</p>\n<p>例如： rate (nginx_http_requests_total [1m]) ，表示要获取 1 分钟内，该指标上的 http 总请求数的平均增⻓速率；</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/luPGWpV.jpeg\" alt=\"1.jpg\" /></p>\n<p>2、irate ⽤于计算瞬时的增⻓速率（灵敏度较⾼）：计算公式：通过指定时间范围内的样本最后⼀个样本的值减去前⼀个样本的值，⽽后除以这两个样本之间的间隔时⻓。</p>\n<p>例如： irate (nginx_http_requests_total [1m]) ，表示要获取 1 分钟内，该指标上的 http 总请求数的瞬时增⻓速率；</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/yCfZc4S.jpeg\" alt=\"4.jpg\" /></p>\n<p>3、increase ⽤于计算指定时间范围内样本值的增加量：计算公式：通过指定时间范围内的样本最后⼀个样本的值减去第⼀个样本的值。注意：increase 可能会引⽤时间范围边界之前的样本值，以便于计算能覆盖到指定的整个时间范围。</p>\n<p>例如： increase (nginx_http_requests_total [1m]) ，表示要获取 1 分钟内，http 请求的增量；</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/lwmN3vP.jpeg\" alt=\"2.jpg\" /></p>\n<h5 id=\"32-gauge类型常用函数\"><a class=\"anchor\" href=\"#32-gauge类型常用函数\">#</a> 3.2 Gauge 类型常⽤函数</h5>\n<p>Gauge 类型的指标，存储的值是随着时间会变发⽣变化的，它常⽤求和、取平均值、最⼩值、最⼤值等；也会结合 PromQL 的 predict_linear 和 delta 函数使⽤；</p>\n<p>1、predict_linear (v range-vector, t, scalar)：预测时间序列 v 在 t 秒后的值，它通过线性回归的⽅式来预测样本数据的变化趋势；</p>\n<p>例如： predict_linear (node_filesystem_avail_bytes [4h], 60*60*24*30) ，使⽤过去 4 ⼩时的数据来预测接下来 30 天（60*60*24*30）</p>\n<p>的磁盘空间趋势。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>predict_linear<span class=\"token punctuation\">(</span>node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>4h<span class=\"token punctuation\">]</span>, <span class=\"token number\">60</span>*60*24*30<span class=\"token punctuation\">)</span> /1024 /1024 /1024</pre></td></tr></table></figure><p>2、delta (v range-vector)：计算范围向量中每个时间序列上的第⼀个样本值与最后⼀个样本值之差；其计算结果与 increase 函数相同；但 delta 更适⽤于没有重置的场景，或者⽤来监控那些可能上升或下降的指标，例如温度、磁盘空间等。</p>\n<p>例如： delta (cpu_temp_celsius {host=&quot;<a href=\"http://prom01.oldxu.net\">prom01.oldxu.net</a>&quot;}[2h]) ，返回该服务器上的 CPU 温度与 2 ⼩时之前的差异；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>delta<span class=\"token punctuation\">(</span>cpu_temp_celsius<span class=\"token punctuation\">&#123;</span>host<span class=\"token operator\">=</span><span class=\"token string\">\"prom01.oldxu.net\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>2h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>例如： delta (node_filesystem_avail_bytes [10m]) /1024 /1024 ，返回服务器上磁盘可⽤空间与 10 分钟之前的差异；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>delta<span class=\"token punctuation\">(</span>node_filesystem_avail_bytes<span class=\"token punctuation\">[</span>10m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> /1024 /1024</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#创建大文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># dd if=/dev/zero of=/bigdata count=1 bs=200M</span></pre></td></tr></table></figure><p>3、changes () ：计算监控时间范围内某个时间序列的数据变化的次数。它只关⼼变化的次数，⽽不关⼼具体变化的值是什么。</p>\n<p>例如： changes (nginx_up [10m]) 监控 Nginx 服务在给定时间内变化的次数，如果停⽌了变化次数 + 1，启动了变化次数 + 1。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>changes<span class=\"token punctuation\">(</span>up<span class=\"token punctuation\">[</span>10m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#模式测试</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node02 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop node_exporter</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node02 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start node_exporter</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"grafana\"</span><span class=\"token punctuation\">&#125;</span>         <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"prometheus\"</span><span class=\"token punctuation\">&#125;</span>      <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span>   <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span>   <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span>   <span class=\"token number\">0</span></pre></td></tr></table></figure><h4 id=\"四-promql二元运算符\"><a class=\"anchor\" href=\"#四-promql二元运算符\">#</a> 四. PromQL ⼆元运算符</h4>\n<p>PromQL 提供了⼀系列⼆元运算符，包括算术运算 (+ - * /)、⽐较运算 ( == &lt;= &gt;=)、以及集合运算 ( and or unless)。在 PromQL 中，⽤户可以执⾏以下类型的运算：</p>\n<ul>\n<li>\n<p>1、标量与标量之间的运算</p>\n</li>\n<li>\n<p>2、即时向量与标量之间的运算</p>\n</li>\n<li>\n<p>3、两个即时向量之间的运算。（当涉及到两个即时向量的运算时标签必须一致，PromQL 遵循向量匹配机制（Vector Matching），定义其运算逻辑）</p>\n</li>\n</ul>\n<h5 id=\"41-算术运算符介绍\"><a class=\"anchor\" href=\"#41-算术运算符介绍\">#</a> 4.1 算术运算符介绍</h5>\n<p>在 PromQL 中算术运算符，是⽤来对指标数据执⾏基本的数学运算。⽀持的运算符有：+（加）、-（减）、*（乘）、/（除）、%（取模）和 ^（幂运算）</p>\n<p>1、标量与标量之间进⾏数学运算，其最终得到的也是标量（使⽤较少）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 标量与标量算数运算表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">5</span> + <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>scalar <span class=\"token number\">10</span></pre></td></tr></table></figure><p>2、即时向量与标量进⾏运算，例如将 node_memory_MemTotal_bytes （节点内存总⼤⼩）的默认 bytes 单位转为 MB</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 即时向量与标量算数运算表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_memory_MemTotal_bytes / <span class=\"token number\">1024</span> /1024</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1970.05859375</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1970.05859375</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1970.05859375</span></pre></td></tr></table></figure><p>3、即时向量与即时向量进⾏运算，它们需要遵循向量的匹配逻辑，也就是向量与向量的标签必须完全匹配⼀致才可以进⾏运算，如果它们的标签不⼀致，则不会执⾏这个运算。例如：我们想计算内存的可⽤百分⽐，计算公式为 “（内存可⽤空间 / 内存总空间 * 100）= 内存可⽤百分⽐” 这两个向量的标签是完全⼀致的，因此可以直接进⾏运算，否则⽆法正常进⾏运算，除⾮进⾏向量匹配特殊的处理。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 即时向量与即时向量算数运算表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">52.0608325815</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">18234</span> <span class=\"token comment\"># 可⽤内存还有 52%</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">70.7339367682</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1954</span> <span class=\"token comment\"># 可⽤内存还有 70%</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">41.0098446469</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">1128</span> <span class=\"token comment\"># 可⽤内存还有 41%</span></pre></td></tr></table></figure><h5 id=\"42-算术运算符实践\"><a class=\"anchor\" href=\"#42-算术运算符实践\">#</a> 4.2 算术运算符实践</h5>\n<p>实例 1：计算所有实例节点的 eth0 ⽹卡，接收的总流量和发送的总流量之和（以 GB 显示）</p>\n<ul>\n<li>node_network_receive_bytes_total ：节点⽹络接收的总⼤⼩（以字节为单位）</li>\n<li>node_network_transmit_bytes_total ：节点⽹络发送的总⼤⼩（以字节为单位）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式（ 计算公式：(eth0 接收的总流量 + eth0 发送的总流量) /1024 / 1024 /1024 ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>node_network_receive_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span> + node_network_transmit_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> /1024 /1024 /1024</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">65.10437232814729</span> <span class=\"token comment\"># 65GB</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">19.22064190544188</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">35.516745982691646</span></pre></td></tr></table></figure><p>实例 2：计算所有实例节点的 / 分区 已经使⽤了，多少空间（以 GB 显示）</p>\n<ul>\n<li>node_filesystem_size_bytes ：⽂件系统总⼤⼩（以字节为单位）</li>\n<li>node_filesystem_avail_bytes ：⽂件系统可⽤空间（以字节为单位）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式（ 计算公式：(总空间 - 剩余空间) /1024 / 1024 /1024 ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> /1024 /1024 /1024</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">7.806545257568359</span>  <span class=\"token comment\"># 已使⽤ 7.8G</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3.9103240966796875</span> <span class=\"token comment\"># 已使⽤ 3.9G</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">5.496803283691406</span>  <span class=\"token comment\"># 已使⽤ 5.4G</span></pre></td></tr></table></figure><p>实例 3：计算所有实例节点的 / 分区 &quot;已⽤空间百分⽐&quot;</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式（ 计算公式：(总空间 - 可⽤的空间) / 总空间 * 100 ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> - node_filesystem_avail_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> / node_filesystem_size_bytes<span class=\"token punctuation\">&#123;</span>mountpoint<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3.965885742336228</span>  <span class=\"token comment\"># 已⽤空间占⽐百分之 3.96G</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1.9864746546908878</span> <span class=\"token comment\"># 已⽤空间占⽐百分之 1.98G</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">2.792465443218097</span>  <span class=\"token comment\"># 已⽤空间占⽐百分之 2.79G</span></pre></td></tr></table></figure><p>实例 4：计算所有节点内存的 “已⽤百分⽐”</p>\n<ul>\n<li>node_memory_MemTotal_bytes ：总内存⼤⼩（单位字节）</li>\n<li>node_memory_MemAvailable_bytes ：内存可⽤⼤⼩（单位字节）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式（ 计算公式：(总内存 - 可⽤内存) / 总内存 * 100 ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes<span class=\"token punctuation\">)</span> / node_memory_MemTotal_bytes * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">48.12356865972023</span>  <span class=\"token comment\"># 已⽤ 48% 内存</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">29.767713920310907</span> <span class=\"token comment\"># 已⽤ 29% 内存</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">58.8624624505537</span>   <span class=\"token comment\"># 已⽤ 58% 内存</span></pre></td></tr></table></figure><h5 id=\"43-比较运算符介绍\"><a class=\"anchor\" href=\"#43-比较运算符介绍\">#</a> 4.3 ⽐较运算符介绍</h5>\n<p>在 PromQL 中⽐较运算符，是⽤来对指标的数据进⾏条件判断，⼀般在告警规则中定义何时应该触发告警。PromQL ⽀持的⽐较运算符有如下⼏个：</p>\n<ul>\n<li>== ：等于，当两边的数值相等时为真。</li>\n<li>!= ：不等于，当两边的数值不相等时为真。</li>\n<li>&gt; ：⼤于，当左边的数值⼤于右边时为真。</li>\n<li>&lt; ：⼩于，当左边的数值⼩于右边时为真。</li>\n<li>&gt;= ：⼤于等于，当左边的数值⼤于或等于右边时为真。</li>\n<li>&lt;= ：⼩于等于，当左边的数值⼩于或等于右边时为真。</li>\n</ul>\n<p><em>在 PromQL 中，使⽤⽐较运算符时，默认情况下，如果⽐较结果为假（即条件不满⾜），则相关的时间序列不会出现在结果中。但是，如果在测试时，想要明确地看到哪些时间序列满⾜条件（为真）和哪些不满⾜（为假），可以使⽤ bool 修饰符，这个修饰符会将所有的时间序列都显示在结果中，满⾜条件的序列会有⼀个值为 1（true），不满⾜的序列会有⼀个值为 0（false）。</em></p>\n<p>1、标量与标量之间进⾏⽐较运算</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 标量与标量⽐较表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">5</span> <span class=\"token operator\">==</span> bool <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>scalar <span class=\"token number\">1</span> <span class=\"token comment\"># 说明条件成⽴</span></pre></td></tr></table></figure><p>2、即时向量与标量进⾏⽐较运算，例如判断服务器 1 分钟的负载，是否有⼤于 0 以上的节点</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 即时向量与标量进⾏⽐较表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_load1 <span class=\"token operator\">></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.01</span></pre></td></tr></table></figure><p>3、即时向量与即时向量进⾏⽐较运算，它们需要遵循向量的匹配逻辑，也就是向量与向量的标签必须完全匹配⼀致才可以进⾏运算，如果它们的标签不⼀致，则不会执⾏这个运算。例如：我们可以⽐较 “可⽤内存” 是否⼤于 “空闲内存”，如果满⾜该条件，那么会显示左侧的指标名称和指标当前的值。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 即时向量与即时向量⽐较表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_memory_MemAvailable_bytes <span class=\"token operator\">></span> node_memory_MemFree_bytes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_memory_MemAvailable_bytes<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1092820992</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>node_memory_MemAvailable_bytes<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1456451584</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>node_memory_MemAvailable_bytes<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">867491840</span></pre></td></tr></table></figure><h5 id=\"44-比较运算符实践\"><a class=\"anchor\" href=\"#44-比较运算符实践\">#</a> 4.4 ⽐较运算符实践</h5>\n<p>实例 1：查询 node_exporter 这个 job 中，⽬前不存活实例有哪些（1 为存活、0 为不存活）。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>up<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>up<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 0 表</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>示该节点⽬前不存活</pre></td></tr></table></figure><p>实例 2：查询所有实例 “已使⽤内存” 超过 30%</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式：（计算公式：（总内存 - 可⽤内存）/ 总内存 * 100 ⼤于 30 ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes<span class=\"token punctuation\">)</span> / node_memory_MemTotal_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">48.04405801699267</span> <span class=\"token comment\"># 该节点已使⽤内存达到 48%</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">58.090753170015965</span> <span class=\"token comment\"># 该节点已使⽤内存达到 58%</span></pre></td></tr></table></figure><p>实例 3：查询所有的实例 “磁盘可⽤空间” 不⾜ 30% 的实例</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式：（计算公式：（可⽤空间 / 总磁盘空间） * 100 ⼩于 30 ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_filesystem_avail_bytes / node_filesystem_size_bytes * <span class=\"token number\">100</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"/dev/mapper/rl-root\"</span>, <span class=\"token assign-left variable\">fstype</span><span class=\"token operator\">=</span><span class=\"token string\">\"xfs\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mountpoint</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">26.02939746145283</span> <span class=\"token comment\"># 剩余空间仅剩 26%，意味着磁盘空间快⽤完了</span></pre></td></tr></table></figure><p>实例 4：查询所有实例中 eth0 设备的⽹络带宽，每秒发送速率超过 200Mb/s 兆 的实例</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1、在两个测试的节点上安装：yum install iperf -y</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 2、服务端运⾏并指定端⼝：iperf -s -p 9999</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 3、客户端模拟带宽发送命令，-b 指定发送⼤⼩，-t 指定发送持续时⻓：iperf -c &lt;ip> -p 9999 -b 300M -t 60</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 表达式（计算公式：rate (总的传输 [1m]) * 8 /1024/1024) > 200） ⽹络速度或带宽通常以位每秒（如 Mbps, Gbps）为单位。因此需要将字节乘以 8，能够将字节转换为位，这样可以更准确地描述传输速率</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rate<span class=\"token punctuation\">(</span>node_network_transmit_bytes_total<span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> * <span class=\"token number\">8</span> /1024 /1024 <span class=\"token operator\">></span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">286.0319371541341</span> <span class=\"token comment\"># 该节点每秒达到了 286Mb/s 的带宽（如果不乘以 8 则单位是 MB/s）</span></pre></td></tr></table></figure><p>实例 5：查询所有 https 的域名，检查域名证书的过期时间，将还剩不到 90 天的域名列出来（需要借助后⾯的 blackbox ⿊盒监控，才能获取到对应的指标）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式，计算公式（ (过期时间 - 当前时间) / 天 (24*60*60) ）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>probe_ssl_earliest_cert_expiry - time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> / <span class=\"token number\">86400</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">90</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"http://hmallleasing.com\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">43.74673421296256</span>       <span class=\"token comment\"># 还剩 43 天过期</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"https://ixuyong.cn\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">87.74673421296256</span>            <span class=\"token comment\"># 还剩 87 天过期</span></pre></td></tr></table></figure><h5 id=\"45-集合运算符介绍\"><a class=\"anchor\" href=\"#45-集合运算符介绍\">#</a> 4.5 集合运算符介绍</h5>\n<p>在 Prometheus 的查询语⾔中，集合运算符主要⽤到的运算符包括 and（并且）、or（或者）和 unless（排除）</p>\n<p>例如：我们有两个关键指标：backup_duration_seconds ⽤于记录每次备份操作的持续时间，⽽ backup_success 则指示备份操作是否成功（1 表示成功，0 表示失败）</p>\n<p><strong>场景 1：备份成功但时间超过 9s</strong></p>\n<p>当备份操作成功完成（backup_success == 1），并且执⾏时间超过 9 秒（backup_duration_seconds &gt; 9）时，我们需要发出告警通知 “备份成功但备份时间过⻓”。这就需要使⽤ and 运算符来确保只有当这两个条件都满⾜时，才触发告警。对应的表达式为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>backup_duration_seconds <span class=\"token operator\">></span> <span class=\"token number\">9</span> and backup_success <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><p><strong>场景 2：备份失败或时间超过 9s</strong></p>\n<p>如果备份时⻓超过了 9 秒（backup_duration_seconds &gt; 9），或者备份操作失败（backup_success == 0），则同样需要发出告警通知 “备份失败或时间过⻓”。在这种情况下，是⽤ or 运算符可以帮助我们在任⼀条件满⾜时触发告警。对应的表达式为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>backup_duration_seconds <span class=\"token operator\">></span> <span class=\"token number\">9</span> or backup_success <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p><strong>场景 3：查询成功的备份，但排除耗时超过 9s</strong></p>\n<p>查询所有成功的备份任务，同时排除那些执⾏时间超过 9 秒的任务，这样我们就可以只关注于那些成功备份的任务，并且备份效率较⾼的。我们可以利⽤ unless 运算符来实现，对应的表达式为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>backup_success <span class=\"token operator\">==</span> <span class=\"token number\">1</span> unless backup_duration_seconds <span class=\"token operator\">></span> <span class=\"token number\">9</span></pre></td></tr></table></figure><p>1、and 运算符示例，查询当前实例 “1 分钟负载⼤于 2，并且 5 分钟负载⼩于</p>\n<p>2、如果满⾜条件说明当前发了了突增的负载压⼒。注意：and 运算需要遵循向量的匹配逻辑，也就是向量与向量的标签必须完全匹配⼀致才可以进⾏匹配，如果它们的标签不⼀致，则不会执⾏匹配逻辑，除⾮使⽤ ignore 忽略不⼀致的标签来进⾏匹配。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟负载⾼命令 stress --cpu 8 --timeout 60</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>node_load1 <span class=\"token operator\">></span> <span class=\"token number\">2</span> and</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>node_load5 <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>node_load1<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">4.19</span> <span class=\"token comment\"># 说明当前 node03 节点 1 分钟负载⽐较⾼，⽽ 5 分钟负载并不⾼</span></pre></td></tr></table></figure><p>2、or 示例，查询 <a href=\"http://prom-node01.oldxu.net:9100\">prom-node01.oldxu.net:9100</a> 上 CPU 编号为 0 的 idle 时间或 user 时间</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span>,cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> or</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,mode<span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span>,cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">6429449.35</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">26207.44</span></pre></td></tr></table></figure><p>3、unless 示例，查询 node_cpu_seconds_total 指标上 CPU 编号为 0 的，但要排除 node02 和 node03 节点，同时还要排除模式为 idle|user|system|steal|nice</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> unless</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> unless</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> unless</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=~</span><span class=\"token string\">\"idle|user|system|steal|nice\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token string\">\"iowait\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3243.97</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token string\">\"irq\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">7236.66</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>cpu<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token string\">\"softirq\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">4117.61</span></pre></td></tr></table></figure><h5 id=\"46-集合运算符实践\"><a class=\"anchor\" href=\"#46-集合运算符实践\">#</a> 4.6 集合运算符实践</h5>\n<p>实例 1：查询实例的⽹络接收流量 “并且” ⽹络发送流量，每秒传输超过 200Mb/s</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#模拟接收和发送流量⽐较⾼：\"需要在同⼀节点\" 模拟服务端和客户端，执⾏如下命令</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1、模拟服务端：iperf -s -p 9999</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 2、模拟客户端：iperf -c prom-node01.oldxu.net -p 9999 -b 300M -t 60</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rate<span class=\"token punctuation\">(</span>node_network_receive_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> *8 /1024 /1024 <span class=\"token operator\">></span><span class=\"token number\">200</span> and</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rate<span class=\"token punctuation\">(</span>node_network_transmit_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> *8 /1024 /1024 <span class=\"token operator\">></span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>device<span class=\"token operator\">=</span><span class=\"token string\">\"lo\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">300.4421537611219</span> <span class=\"token comment\"># 这个实例发送和接收同时达到了 300Mb/s</span></pre></td></tr></table></figure><p>实例 2：查询当前磁盘，可⽤空间不⾜ 20GB “或者” 当前磁盘可⽤空间不⾜ 30%</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式，计算公式： 可⽤空间 / 1024/1024/1024 &lt;= 20 OR （可⽤空间 / 总磁盘空间） *100 &lt; 30 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_filesystem_avail_bytes /1024 /1024 /1024 <span class=\"token operator\">&lt;=</span><span class=\"token number\">20</span> or </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span> node_filesystem_avail_bytes / node_filesystem_size_bytes<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr></table></figure><p>实例 3：通过 probe_http_status_code 指标获取当前监控的⽹站返回的状态码，并从中筛选出⼩于 200 的状态码 “或者” ⼤于 400 的状态码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>probe_http_status_code <span class=\"token operator\">&lt;=</span> <span class=\"token number\">199</span> or</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>probe_http_status_code <span class=\"token operator\">>=</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>probe_http_status_code<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"https://httpstat.us/102\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>probe_http_status_code<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"http://httpbin.org/status/400\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>probe_http_status_code<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"https://httpstat.us/421\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">421</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>probe_http_status_code<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"https://httpstat.us/500\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>probe_http_status_code<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"https://httpstat.us/502\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">502</span></pre></td></tr></table></figure><h4 id=\"五-promql聚合操作\"><a class=\"anchor\" href=\"#五-promql聚合操作\">#</a> 五. PromQL 聚合操作</h4>\n<h5 id=\"51-promql聚合介绍\"><a class=\"anchor\" href=\"#51-promql聚合介绍\">#</a> 5.1 PromQL 聚合介绍</h5>\n<p>聚合运算，是数据处理中的⽐较常⻅操作，例如统计公司所有⼈员的年龄，求公司整体的平均年龄，最⼤年龄，或最⼩年龄等。因此聚合操作它是从⼀组数据值中，计算出⼀个单⼀的值。</p>\n<p>Prometheus 的聚合操作与此前刚才所描述的常规聚合在本质上是相似的，只不过它⽀持多种聚合运算函数，包括:</p>\n<ul>\n<li>\n<p>max ：计算⼀组时间序列中的最⼤值。</p>\n</li>\n<li>\n<p>min ：计算⼀组时间序列中的最⼩值。</p>\n</li>\n<li>\n<p>avg ：计算时间序列的平均值。</p>\n</li>\n<li>\n<p>sum ：计算时间序列值的总和。</p>\n</li>\n<li>\n<p>count ：它不考虑时间序列的具体值，仅⽤来统计时间序列的数量。例如统计不同 OS 的数量，或者统计有多少个正在运⾏的 Pod 等等。</p>\n</li>\n<li>\n<p>count_vaules ：对每个样本的值进⾏数量统计，例如：http 请求的状</p>\n</li>\n<li>\n<p>态码，200 出现了多少次，404 出现了多少次，500 出现了多少次；</p>\n</li>\n<li>\n<p>topk ：</p>\n</li>\n<li>\n<p>bottomk ：</p>\n</li>\n</ul>\n<p>除了这些基本聚合功能外，Prometheus 也提供了分组聚合的功能，它是基于时间序列的标签进⾏分组聚合：</p>\n<ul>\n<li>by ：通过 by 关键字，明确指定保留哪些标签进⾏聚合，其他的标签将被忽略。</li>\n<li>without ：与 by 相反， without 关键字⽤于指定要排除的标签，⽽剩下的标签则⽤于聚合和分组。</li>\n</ul>\n<h5 id=\"52-promql聚合示例\"><a class=\"anchor\" href=\"#52-promql聚合示例\">#</a> 5.2 PromQL 聚合示例</h5>\n<p>为了加深 PromQL 聚合操作的理解，我们使⽤前⾯提到的城市天⽓温度数据，并通过聚合操作来展示如何获取整体的最⾼温度、最低温度以及按城市维度进⾏分组求取平均温度等。</p>\n<p>1、下载并运⾏程序，提供天⽓温度相关的指标数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget http://file.oldxu.net/prometheus/exporter/weather_exporter_oldxu</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mv weather_exporter_oldxu /usr/local/bin/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod +x /usr/local/bin/weather_exporter_oldxu</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 启动脚本</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /usr/lib/systemd/system/weather_exporter.service</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>weather_exporter</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/local/bin/weather_exporter_oldxu <span class=\"token parameter variable\">--port</span> <span class=\"token number\">7001</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start weather_exporter.service</span></pre></td></tr></table></figure><p>2、编辑 Prometheus 配置⽂件，抓取对应的指标数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  - job_name: <span class=\"token string\">\"weather-exporter\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    scrape_interval: 1m <span class=\"token comment\"># 抓取指标频率</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 重新加载 prometheus</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><p>示例 1：获取所有城市的整体温度总和</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sum<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">210</span></pre></td></tr></table></figure><p>示例 2：分别展示不同城市的最⼤温度</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>max<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">25</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">29</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><p>示例 3：分别展示不同城市的最⼩温度</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>min<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-3</span></pre></td></tr></table></figure><p>示例 4：仅展示 “武汉” 城市的平均温度</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>avg<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">22.666666666666664</span></pre></td></tr></table></figure><p>示例 5：是⽤ topk 获取前三个的⾼温城市。topk 的结果按温度值从⾼到低排序</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>topk<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,weather_oldxu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"浦东新区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">27</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"越秀区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">15</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"天河区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">14</span></pre></td></tr></table></figure><p>示例 6：使⽤ bottomk 获取排名靠前三的低温城市。bottomk 的结果按温度值从低到⾼排列</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bottomk<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,weather_oldxu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-6</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"汉⼝区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-5</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"海淀区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7001\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><p>示例 7：统计天⽓温度的数量，按城市进⾏区分</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>count<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span></pre></td></tr></table></figure><p>示例 8：统计各温度值出现的频次，按城市进⾏区分</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式 count_values (\"value_count\", &lt;metrics_name>) by (&lt;label>)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>count_values<span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span>,weather_oldxu<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"12\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"13\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"上海\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"14\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"-3\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"6\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"北京\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"-10\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"24\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"⼴州\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"17\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token string\">\"17\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 17 度出现了 2 次，这意味着武汉城市有 2 个不同地域报告了 17 度的温度。</span></pre></td></tr></table></figure><h5 id=\"53-promql聚合实践\"><a class=\"anchor\" href=\"#53-promql聚合实践\">#</a> 5.3 PromQL 聚合实践</h5>\n<p>实例 1：查询所有节点，最近 1 分钟的负载，是否⾼于 cpu 核⼼的 2 倍</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟 cpu 使⽤率⾼于核⼼数：stress --cpu 6</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 获取每个节点的负载表达式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># CPU 核⼼的 2 倍表达式 [核⼼数 * 2]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 整体表达式</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sum<span class=\"token punctuation\">(</span>node_load1<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> count<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span> * <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">4.06</span> <span class=\"token comment\"># 该节点的使⽤率超过核⼼数的 2 倍了</span></pre></td></tr></table></figure><p>实例 2：查询每个节点的 CPU 的使⽤率，指标名称： node_cpu_seconds_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟 cpu 使⽤率达到 50%：stress --cpu 1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 表达式: (1 - CPU 整体空闲使⽤率) * 100 = CPU 使⽤率</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> - avg<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">&#123;</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">))</span> *100</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1.1555555555484487</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">51.144444444459324</span> <span class=\"token comment\"># 使⽤率在 50% 左右</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">2.3333333333236395</span></pre></td></tr></table></figure><p>实例 3：查询所有节点，最近 1 分钟磁盘的最⼤写⼊速率，以 MB/s 为单位，指标名称： node_disk_written_bytes_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟数据写⼊，复制 2G 的数据，控制每秒 20M 左右的速度写</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># yum install pv -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># dd if=/dev/zero bs=1M count=2000 | pv -L 20M > /tmp/bigdata</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 表达式： 获取每分钟的磁盘速率，然后提取最⼤的值，最后 / 1024/1024 得到 MB/s</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_written_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span> /1024 /1024</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.007052951388888888</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">19.724283854166664</span> <span class=\"token comment\">#每秒写⼊速度在 19MB/s</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.011946614583333333</span></pre></td></tr></table></figure><p>实例 4：查询所有节点，最近 1 分钟磁盘的读取写⼊速率，以 MB/s 为单位，指标名称： node_disk_read_bytes_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟数据读取，读取 /tmp/bigdata ⽂件，然后以每秒 15MB 的速度读取</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># yum install pv -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pv -L 15M /tmp/bigdata > /dev/null</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>max<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">(</span>node_disk_read_bytes_total<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> by <span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span> /1024 /1024</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">15.006076388888888</span> <span class=\"token comment\">#每秒读取速度在 15MB/s</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>实例 5：计算 Prometheus 服务器的 HTTP 请求成功率，指标名称： prometheus_http_requests_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 计算公式： 请求成功的 (2xx|3xx) / 总的请求 * 100 = 请求成功率</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>prometheus_http_requests_total<span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=~</span><span class=\"token string\">\"2.*|3.*\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> / sum<span class=\"token punctuation\">(</span>prometheus_http_requests_total<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">99.59027974003956</span> <span class=\"token comment\"># ⽹站整体请求成功率在 99.5%</span></pre></td></tr></table></figure><p>实例 6：查询请求排名前三的 URL，指标名称： prometheus_http_requests_total</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>topk<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,prometheus_http_requests_total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,handler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>handler<span class=\"token operator\">=</span><span class=\"token string\">\"/metrics\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">5483</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>handler<span class=\"token operator\">=</span><span class=\"token string\">\"/api/v1/query\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1576</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>handler<span class=\"token operator\">=</span><span class=\"token string\">\"/api/v1/metadata\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">113</span></pre></td></tr></table></figure><h4 id=\"六-promql时间聚合操作\"><a class=\"anchor\" href=\"#六-promql时间聚合操作\">#</a> 六. PromQL 时间聚合操作</h4>\n<h5 id=\"61-promql时间聚合介绍\"><a class=\"anchor\" href=\"#61-promql时间聚合介绍\">#</a> 6.1 PromQL 时间聚合介绍</h5>\n<p>在 Prometheus 中，除了可以 “纵向的聚合” 以外，还可以基于时间聚合也就是 “横向聚合”。</p>\n<p>时间聚合不是在不同的序列上进⾏聚合操作，⽽是在 “单个序列” 的不同时间点之间进⾏聚合，这意味着，对于单个序列，我们可以计算过去⼀段时间内的最⼤值，最⼩值，以及平均值等。</p>\n<ul>\n<li>avg_over_time (range-vector) ：区间向量内每个指标的平均值。</li>\n<li>min_over_time (range-vector) ：区间向量内每个指标的最⼩值。</li>\n<li>max_over_time (range-vector) ：区间向量内每个指标的最⼤值。</li>\n<li>sum_over_time (range-vector) ：区间向量内每个指标的求和。</li>\n<li>count_over_time (range-vector) ：区间向量内指标样本的总个数。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/qAuRqKU.jpeg\" alt=\"3.jpg\" /></p>\n<h5 id=\"62-promql时间聚合示例\"><a class=\"anchor\" href=\"#62-promql时间聚合示例\">#</a> 6.2 PromQL 时间聚合示例</h5>\n<p>1、获取武汉城市中武昌区，最近 5 分钟的温度数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>,dist<span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:5000\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">12</span> @1704269783.3</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">22</span> @1704269843.3</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">17</span> @1704269903.3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">17</span> @1704269963.3</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">5</span>  @1704270023.3</pre></td></tr></table></figure><p>2、获取武汉城市中武昌区，最近 5 分钟温度的最⼤值</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>max_over_time<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>,dist<span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:5000\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">22</span></pre></td></tr></table></figure><p>3、获取武汉城市中武昌区，最近 5 分钟温度的最⼩值</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>min_over_time<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>,dist<span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:5000\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">5</span></pre></td></tr></table></figure><p>4、获取武汉城市中武昌区，最近 5 分钟温度的平均值</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>min_over_time<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>,dist<span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:5000\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">14.6</span></pre></td></tr></table></figure><p>5、获取武汉城市中武昌区，当前数据总共来⾃多少个样本</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>count_over_time<span class=\"token punctuation\">(</span>weather_oldxu<span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>,dist<span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>5m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>city<span class=\"token operator\">=</span><span class=\"token string\">\"武汉\"</span>, <span class=\"token assign-left variable\">dist</span><span class=\"token operator\">=</span><span class=\"token string\">\"武昌区\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:5000\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"weather-exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">5</span> <span class=\"token comment\"># 说明 5 分钟的样本数有 5 个</span></pre></td></tr></table></figure><h5 id=\"63-promql时间聚合实践\"><a class=\"anchor\" href=\"#63-promql时间聚合实践\">#</a> 6.3 PromQL 时间聚合实践</h5>\n<p state=\"time_wait\">实例 1：查询最近 1 分钟内 tcp_timewait 连接数的最⼤值，并检查是否超过 1000 个，指标名称： node_tcp_connection_states</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟⼤量 tcp_timewait：ab -n 1000 -c 2 http://localhost:9090/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>max_over_time<span class=\"token punctuation\">(</span>node_tcp_connection_states<span class=\"token punctuation\">&#123;</span>state<span class=\"token operator\">=</span><span class=\"token string\">\"time_wait\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">state</span><span class=\"token operator\">=</span><span class=\"token string\">\"time_wait\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">1769</span> <span class=\"token comment\"># 最近 1 分钟最⼤的值是 1769</span></pre></td></tr></table></figure><p state=\"established\">实例 2：查询最近 1 分钟内 tcp_established 连接数的最⼤值，并检查是否超过 100 个，指标名称： node_tcp_connection_states</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟 established：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 服务端（node01）：nc -lk 2345</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 客户端（node02）：for i in &#123;1..1000&#125;; do nc prom-node01.oldxu.net 2345 >/dev/null 2>&amp;1 &amp; done</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>max_over_time<span class=\"token punctuation\">(</span>node_tcp_connection_states<span class=\"token punctuation\">&#123;</span>state<span class=\"token operator\">=</span><span class=\"token string\">\"established\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">state</span><span class=\"token operator\">=</span><span class=\"token string\">\"established\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">133</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"node_exporter\"</span>, <span class=\"token assign-left variable\">state</span><span class=\"token operator\">=</span><span class=\"token string\">\"established\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">106</span></pre></td></tr></table></figure><p>实例 3：查询⽹站平均请求延迟 1 分钟⼤于 3s 的站点，指标名称： probe_duration_seconds（需要 blackbox)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>avg_over_time<span class=\"token punctuation\">(</span>probe_duration_seconds<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"https://httpstat.us/102\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"blackbox_http\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">14.501046884666668</span></pre></td></tr></table></figure><p>实例 4：查询 MySQL 服务器在最近 1 分钟内平均运⾏线程数超过 50 的。指标名称： mysql_global_status_threads_running</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟 MySQL 线程数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">120</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   mysql <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"SELECT SLEEP(60);\"</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>avg_over_time<span class=\"token punctuation\">(</span>mysql_global_status_threads_running<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"mysqld_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">62</span> <span class=\"token comment\"># 平均线程数在 62，超过阈值定义的 50</span></pre></td></tr></table></figure><p>实例 5：查询以监控 MySQL 服务器过去 1 分钟内的线程当前打开的最⼤连接数。如果这个数值超过了服务器配置的最⼤连接数的 80% 则触发告警。指标名称</p>\n<ul>\n<li>mysql_global_status_threads_connected （表示当前打开的连接数）</li>\n<li>mysql_global_variables_max_connections （表示配置允许的最⼤连接数）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 模拟 MySQL 连接数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">120</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mysql <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"SELECT SLEEP(60);\"</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>max_over_time<span class=\"token punctuation\">(</span>mysql_global_status_threads_connected<span class=\"token punctuation\">[</span>1m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> / mysql_global_variables_max_connections * <span class=\"token number\">100</span> <span class=\"token operator\">></span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node03.oldxu.net:9104\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"mysqld_exporter\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">80.79470198675497</span> <span class=\"token comment\"># 当前最⼤连接数已经超过了 80%</span></pre></td></tr></table></figure><h4 id=\"七-promql向量匹配\"><a class=\"anchor\" href=\"#七-promql向量匹配\">#</a> 七. PromQL 向量匹配</h4>\n<h5 id=\"71-promql向量匹配介绍\"><a class=\"anchor\" href=\"#71-promql向量匹配介绍\">#</a> 7.1 PromQL 向量匹配介绍</h5>\n<p>在 Prometheus 中，执⾏ “向量与向量之间的运算” 时，需要遵循向量匹配的规则。这意味着两个向量必须具有 “相同的标签”，且对应的 “标签值也必须完全相同”，这才能进⾏运算。如果有任何⼀个标签或标签值不匹配，那么此次的运算将不会执⾏。这种匹配规则也被称为 “向量的⼀对⼀匹配”。例如，下⾯两个时间序列可以成功进⾏⼀对⼀匹配，⽽后可以正常执⾏各种运算：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>http_requests_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom\u0002node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>http_requests_duration_seconds<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>,instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为它们的标签以及标签值完全⼀致，所以它们可以直接进⾏运算操作。</p>\n<h5 id=\"72-promql一对一向量匹配\"><a class=\"anchor\" href=\"#72-promql一对一向量匹配\">#</a> 7.2 PromQL ⼀对⼀向量匹配</h5>\n<p>但是在实际监控场景中，我们会经常遇到 “标签不完全相同” 的两个向量，但它们任然需要进⾏运算。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>oldxu_requests_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3200</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#表示该实例的 HTTP 请求总数。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>oldxu_requests_status_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">500</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#表示该实例中使⽤ GET ⽅法的 HTTP 请求总数。</span></pre></td></tr></table></figure><p>假设我们想要计算使⽤ GET ⽅法的请求总数，占总请求数的⽐例是多少。理想的计算公式是： GET ⽅法的请求总数 / 总的请求数 * 100 = GET 请求所占的⽐例。 但由于两个向量的标签不完全相同（⼀个有 method 标签，⼀个没有），因此⽆法进⾏直接进⾏计算。</p>\n<p>为了解决这个问题，我们可以借助 PromQL 的向量匹配选项：</p>\n<ul>\n<li>基于标签的匹配（on）：指定基于哪些标签进⾏匹配。只有当指定的 ” 标签及其值 “ 在两个向量中都相同，向量之间才能进⾏运算。</li>\n<li>忽略标签的匹配（ignoring）：指定忽略某些标签，也就是在运算时不考虑这些标签，只要其他标签以及标签的值相同，向量之间就可以进⾏运算。</li>\n</ul>\n<p>⽅式 1：使⽤ on 关键字匹配特定标签，明明确指定仅基于 job 和 instance 标签进⾏匹配</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>oldxu_requests_status_total<span class=\"token punctuation\">&#123;</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">&#125;</span> / on <span class=\"token punctuation\">(</span>job, instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>oldxu_requests_total * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">15.625</span> <span class=\"token comment\"># GET ⽅法占⽐总请求 15%</span></pre></td></tr></table></figure><p>⽅式 2：使⽤ ignoring 关键字忽略特定标签，忽略不希望参与匹配的 method 标签</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>oldxu_requests_status_total<span class=\"token punctuation\">&#123;</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">&#125;</span> / ignoring <span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>oldxu_requests_total * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">15.625</span> <span class=\"token comment\"># GET ⽅法占⽐总请求 15%</span></pre></td></tr></table></figure><h5 id=\"73-promql一对多向量匹配\"><a class=\"anchor\" href=\"#73-promql一对多向量匹配\">#</a> 7.3 PromQL ⼀对多向量匹配</h5>\n<p>在实际监控中，我们还会遇到需要进⾏ “⼀对多向量匹配” 的情况，即 “⼀个时间序列中的数据点” 需要与 “另⼀个时间序列中的多个数据点” 进⾏匹配运算。</p>\n<p>举个例⼦：假设我们有如下两个指标：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 第⼀个时间序列：记录了不同 HTTP ⽅法和状态码的错误请求总数。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>oldxu_requests_error_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span>,code<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">220</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>oldxu_requests_error_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span>,code<span class=\"token operator\">=</span><span class=\"token string\">\"404\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">130</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>oldxu_requests_error_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"PUT\"</span>,code<span class=\"token operator\">=</span><span class=\"token string\">\"501\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>oldxu_requests_error_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"POST\"</span>,code<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">34</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>oldxu_requests_error_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"POST\"</span>,code<span class=\"token operator\">=</span><span class=\"token string\">\"502\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 第⼆个时间序列：记录了每种 HTTP ⽅法的请求总数。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>oldxu_requests_instance_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>,method<span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">600</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>oldxu_requests_instance_total<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>,<span class=\"token string\">\"method\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">120</span></pre></td></tr></table></figure><p>我们的⽬标是计算每种 HTTP ⽅法（GET 和 POST）对应不同状态码（404 和 500）的请求占该⽅法总请求的⽐例。⼤体计算公式如下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1、GET ⽅法为 500 的请求总数 / GET 的总请求数 * 100 = GET 500 错误⽐例。 (220 /600 * 100 = 21.666666666666668)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 2、GET ⽅法为 404 的请求总数 / GET 的总请求数 * 100 = GET 404 错误⽐例。 (130 /600 * 100 = 36.666666666666664)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 3、POST ⽅法为 500 的请求总数 / POST 的总请求数 * 100 = POST 500 错误⽐例。 (34 / 120 * 100 = 28.333333333333332)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 4、POST ⽅法为 502 的请求总数 / POST 的总请求数 * 100 = POST 502 错误⽐例。 (48 / 120 * 100 = 40)</span></pre></td></tr></table></figure><p>为了实现这⼀⽬标，我们有两个问题需要解决：</p>\n<p>1、标签不⼀致：</p>\n<ul>\n<li>具体问题：两个时间序列的标签集合不完全⼀致， oldxu_requests_error_total 包含 code 标签，⽽ oldxu_requests_instance_total 不包含。</li>\n<li>解决⽅法：使⽤ ignoring (code) 来忽略 code 标签，从⽽使得两个时间序列在没有 code 标签的情况下可以匹配。</li>\n</ul>\n<p>2、⼀对多匹配：</p>\n<ul>\n<li>具体问题： oldxu_requests_error_total 中的每个数据点，都需要与 oldxu_requests_instance_total 中的总请求数相除。</li>\n<li>解决办法：必须明确左侧还是右侧为多的⼀边，因此我们可以使⽤ group_left 或 group_right 来指明哪个是 “多”，然后进⾏匹配。</li>\n</ul>\n<p>因此完整的 PromQL 查询如下：</p>\n<ul>\n<li>1、使⽤ ignoring (code) 忽略左侧查询（ oldxu_requests_error_total ）中的 code 标签。</li>\n<li>2、使⽤ group_left 修饰符来确保它能够与标签较少的右侧进⾏匹配。</li>\n<li>3、将匹配后的结果相除，并乘以 100 得到百分⽐。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>oldxu_requests_error_total</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> / ignoring <span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   group_left</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>oldxu_requests_instance_total * <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"404\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7002\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">21.666666666666668</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7002\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">36.666666666666664</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7002\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">28.333333333333332</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"502\"</span>, <span class=\"token assign-left variable\">instance</span><span class=\"token operator\">=</span><span class=\"token string\">\"prom-node01.oldxu.net:7002\"</span>, <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span><span class=\"token string\">\"webserver\"</span>, <span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">40</span></pre></td></tr></table></figure><h5 id=\"74-promql向量匹配示例\"><a class=\"anchor\" href=\"#74-promql向量匹配示例\">#</a> 7.4 PromQL 向量匹配示例</h5>\n<p>1、下载并运⾏程序，该程序⽤于模拟 “向量匹配相关的” 指标数据；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget http://file.oldxu.net/prometheus/exporter/vectormatch_exporter_oldxu</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mv vectormatch_exporter_oldxu /usr/local/bin</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod +x /usr/local/bin/vectormatch_exporter_oldxu</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 启动脚本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /usr/lib/systemd/system/vectormatch_exporter.service</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>vectormatch_exporter</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/local/bin/vectormatch_exporter_oldxu <span class=\"token parameter variable\">--port</span> <span class=\"token number\">7002</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start vectormatch_exporter.service</span></pre></td></tr></table></figure><p>2、编辑 Prometheus 配置⽂件，抓取对应的指标数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  - job_name: <span class=\"token string\">\"webserver\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:7002\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 重新加载 prometheus</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><p>示例 1：⼀对⼀向量匹配</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/kxSPXou.jpeg\" alt=\"1.jpg\" /></p>\n<p>示例 2：⼀对多向量匹配</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/sEj96xP.jpeg\" alt=\"2.jpg\" /></p>\n<h5 id=\"75-promql向量匹配实践\"><a class=\"anchor\" href=\"#75-promql向量匹配实践\">#</a> 7.5 PromQL 向量匹配实践</h5>\n<p>实例 1：查询每个实例 CPU 的各个模式使⽤的时间占 “总 CPU 的时间” ⽐例是多少，也是就占多少百分⽐。</p>\n<ul>\n<li>1、获取每个实例各个模式占⽤ CPU 的时间，按照（instance、mode）进⾏分组并求和；</li>\n<li>2、获取每个实例总占⽤ CPU 时间，按照（instance）进⾏分组求和；</li>\n<li>3、将每种模式所使⽤的 CPU 时间 / CPU 总的时间 * 100 = 每种模式占总 CPU 时间的百分⽐；</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job,mode<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/ ignoring <span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  group_left</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,job<span class=\"token punctuation\">)</span> * <span class=\"token number\">100</span></pre></td></tr></table></figure><p>实例 2：查询 “每个 CPU 核⼼” 上不同模式的时间，占总 CPU 时间的⽐率是多少，也就是占多少百分⽐。</p>\n<ul>\n<li>1、计算 “每个 CPU 核⼼” 在 “各个模式下” 的累计 CPU 使⽤时间，按照（instance、cpu、mode）进⾏分组并求和；</li>\n<li>2、计算 “每个 CPU 核⼼的总 CPU 时间” 不区分模式。按照（instance、cpu）进⾏分组并求和；</li>\n<li>3、每个 CPU 核⼼的各个模式 / CPU 核⼼的总时间 * 100 = 每个 CPU 核⼼的各个模式时间占⽤百分⽐</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 表达式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,cpu,mode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> / on <span class=\"token punctuation\">(</span>instance,cpu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   group_left</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sum</span> <span class=\"token punctuation\">(</span>node_cpu_seconds_total<span class=\"token punctuation\">)</span> by <span class=\"token punctuation\">(</span>instance,cpu<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "Prometheus"
            ]
        },
        {
            "id": "http://ixuyong.cn/posts/1595025559.html",
            "url": "http://ixuyong.cn/posts/1595025559.html",
            "title": "Prometheus监控实战（一）",
            "date_published": "2025-06-26T02:33:41.000Z",
            "content_html": "<h3 id=\"prometheus监控实战一\"><a class=\"anchor\" href=\"#prometheus监控实战一\">#</a> Prometheus 监控实战（一）</h3>\n<h4 id=\"一-prometheus介绍\"><a class=\"anchor\" href=\"#一-prometheus介绍\">#</a> 一、Prometheus 介绍</h4>\n<h5 id=\"11-prometheus是什么\"><a class=\"anchor\" href=\"#11-prometheus是什么\">#</a> 1.1 Prometheus 是什么</h5>\n<p>Prometheus 是由 SoundCloud 使⽤ Go 语⾔开发的时序数据库（简称 TSDB）但它的功能并⾮局限于 TSDB，因为它还⽀持对⽬标（如服务器、应⽤程序等）进⾏监控；</p>\n<p>因此，我们也可以理解 Prometheus 是⼀款开源的 “监控系统”，但仅仅依托 Prometheus 不⾜以⽀撑整个监控系统，它需要结合⽣态内其他的组件来构建⼀个完整的 IT 监控系统。例如： AleartManager、Grafana、PushGateway 等等。</p>\n<h5 id=\"12-什么是时序数据\"><a class=\"anchor\" href=\"#12-什么是时序数据\">#</a> 1.2 什么是时序数据</h5>\n<p>所谓时序数据，指的是，按照固定时间周期对 “某个或某些指标” 进⾏ “反复测量” 从⽽得到测量的 “数据集合”。这些数据随着时间的推移，会形成⼀个连续的序列，因此被称为时序数据。如果我们将这些数据绘制在图形上，通常会有⼀个 数据轴（Y 轴） 表示数据值，⼀个 时间轴（X 轴） 表示测量的时间点。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/ciCCOaR.jpeg\" alt=\"3.jpg\" /></p>\n<h5 id=\"13-prometheus时序数据\"><a class=\"anchor\" href=\"#13-prometheus时序数据\">#</a> 1.3 Prometheus 时序数据</h5>\n<p>在 Prometheus 中，时序数据主要包括三个部分：指标名称、标签集、时序数据（时间戳、数据）。</p>\n<p>1、指标名称</p>\n<p>例如，监控服务器的 CPU 使⽤率，对应的指标名称可以是 cpu_usage、memory_MemTotal 等指标名称是被监控端提供的。</p>\n<p>2、标签集</p>\n<p>标签集⽤于区分不同的数据源或实例。</p>\n<p>假设我们有两台服务器，⼀台是 Web 服务器，另⼀台是 db 数据库服务器。为了区分这两台服务器的 CPU 使⽤率数据，我们可以为它们添加不同的标签，例如： cpu_usage {type=&quot;web&quot;} 和 cpu_usage {type=&quot;db&quot;} 。</p>\n<p>3、时序数据</p>\n<p>指按照按固定时间间隔，采集对应指标名称，从⽽获取到对应指标的数据。例如，每分钟采集⼀次 CPU 使⽤率（ cpu_usage ）。每个数据点包括采集 CPU 使⽤率的时间戳（ 2023.03.30 10:00:01 ），以及该时间点采集到的样本值（ 50% ）。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/SRYErXu.jpeg\" alt=\"4.jpg\" /></p>\n<p>PS：每⼀个 “指标名称和标签组合” 都会形成⼀条独⽴的时间序列。这就表示，即使我们只探测了⼀个指标 cpu_usage ，但是它具有不同的标签值，就会产⽣两条分别代表不同实例的时间序列。在这些时间序列中，每⼀个特定的数据点被称为⼀个 ' 样本 '。每个样本都包含指标名称、标签、时间戳以及对应的指标值。</p>\n<h5 id=\"14-prometheus数据采集三种方式\"><a class=\"anchor\" href=\"#14-prometheus数据采集三种方式\">#</a> 1.4 Prometheus 数据采集三种方式</h5>\n<p>在传统的 Zabbix 监控系统中，通常是需要在被监控的节点上安装 Agent 代理程序。由 Agent 代理程序定期收集指标数据，并将其发送到监控服务器，完成数据采集。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/GrKq3KY.jpeg\" alt=\"1.jpg\" /></p>\n<p>在 Prometheus 中，被监控端⽆需安装专⻔的 Agent。它只需要 “被监控端通过 HTTP 协议开放出符合 Prometheus 规范的指标数据”，Prometheus 就能够顺利完成数据抓取。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/8qTrLX7.jpeg\" alt=\"5.jpg\" /></p>\n<p>但，并不是所有的应⽤或服务都能直接⽀持 HTTP 协议并提供符合 Prometheus 所兼容的指标格式。因此，Prometheus 设计了三种主要的数据抓取机制，即 Instrumentation、Exporter 和 PushGateway。</p>\n<ol>\n<li>Instrumentation ：被监控端通过 HTTP 暴露出 Prometheus 格式的数据，Prometheus 就可以直接采集，这就是所谓的 Instrumentation。像 Kubernetes、Haproxy、Zookeeper、RabbitMQ、Etcd 等应⽤程序原⽣就⽀持暴露指标，可以直接被 Prometheus 所监控。对于 Python、Java、Go 这些开发语⾔编写的业务应⽤，开发⼈员可以直接引⽤ Prometheus 客户端库来编写代码，让应⽤程序原⽣就能⽀持暴露需要监控的指标数据，这些指标数据可以直接被 Prometheus 采集。这就相当于应⽤程序本身具备了与 Prometheus 通信的能⼒，⽆需额外的中间件来转换数据。</li>\n<li>Exporter（导出器） ：有些应⽤程序并不原⽣⽀持通过 HTTP 协议暴露指标数据。对于这类应⽤，我们可以使⽤ Exporter 来代为采集指标。Exporter 是⼀个独⽴的运⾏程序，负责从⽬标应⽤中采集原始格式的数据，并将其转换为 Prometheus 可以理解的格式，然后通过 HTTP 协议暴露出来，供 Prometheus 抓取指标。简单来说，Exporter 就像⼀个翻译官，将⽬标应⽤程序的数据翻译成 Prometheus 可以读懂的语⾔。</li>\n<li>PushGateway（推送⽹关） ：对于那些⽣命周期较短或者不⽅便被 Prometheus 主动拉取数据的应⽤程序（如短暂运⾏的脚本任务）可以使⽤ PushGateway。让这些短暂运⾏的脚本程序，将对应的指标数据主动推送到 PushGateway，然后 Prometheus 从 PushGateway 中抓取这些数据。PushGateway 就像⼀个中间站，存储这些短暂任务产⽣的指标数据，等待 Prometheus 来抓取。</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/vCHt9SX.jpeg\" alt=\"6.jpg\" /></p>\n<h5 id=\"15-prometheus作业与实例\"><a class=\"anchor\" href=\"#15-prometheus作业与实例\">#</a> 1.5 Prometheus 作业与实例</h5>\n<p>在 Prometheus 中，被监控的每⼀个对象都称为实例（Instance） 实例代表着⼀个独⽴的监控⽬标，它由 IP 地址加端⼝号组合⽽成，</p>\n<p>如 localhost:9090 。在 Prometheus 的配置中，这些实例也可以被称为” ⽬标（Target）“或者 “端点（Endpoint）”。</p>\n<p>为了⽅便管理这些⽬标实例，我们通常会将功能相似或者类型相同的（实例 Instance）归纳到⼀个 “作业（Job）” 中。</p>\n<ul>\n<li>实例（Instances）：实例指的是⼀个被监控的端点。它通常是指向⼀个运⾏的服务或应⽤程序的进程，每个实例都以 host:port 进⾏标识。例如，⼀个 MySQL 数据库服务运⾏在 10.0.0.51:3306 上，那么它就是⼀个实例。</li>\n<li>作业（Jobs）：作业是⼀组具有相同类型的实例集合。例如，多个分布在不同服务器上 MySQL 应⽤，你可以将这些实例归类为同⼀个 mysql 的 Job 作业，⽽后按照 Job 分组后的维度进⾏分析。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/cFCOs3e.jpeg\" alt=\"2.jpg\" /></p>\n<p>在 Prometheus 的数据模型中，job 和 instance 是两个核⼼的标签，它们会⾃动附加到所有收集的时间序列数据上。如下所示：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cpu_usage</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"node-exporter\"</span>,instance<span class=\"token operator\">=</span><span class=\"token string\">\"10.0.0.7\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">14.04</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"node-exporter\"</span>,instance<span class=\"token operator\">=</span><span class=\"token string\">\"10.0.0.8\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">12.04</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>job<span class=\"token operator\">=</span><span class=\"token string\">\"node-exporter\"</span>,instance<span class=\"token operator\">=</span><span class=\"token string\">\"10.0.0.9\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">16.04</span></pre></td></tr></table></figure><h5 id=\"16-prometheus架构\"><a class=\"anchor\" href=\"#16-prometheus架构\">#</a> 1.6 Prometheus 架构</h5>\n<p>Prometheus 最为核⼼的功能就是 “数据采集” 和 “数据存储”。但是，仅有这两项功能并不能构成⼀个完整的监控系统。因此，Prometheus 需要与其他的组件进⾏结合，从⽽实现数据的分析、展示和告警，因此⼀个完整意义上的监控系统⼤体需要如下 5 个组成部分：</p>\n<ul>\n<li>1、数据采集：Prometheus 采⽤ Pull 模式主动向被监控端抓取指标数据。被监控端可以是直接暴露出的应⽤程序指标数据，也可以是通过安装 Exporter 来抓取和暴露应⽤程序的数据。只要是以 Prometheus 格式提供的指标数据，都可以被 Prometheus 抓取。</li>\n<li>2、数据存储：Prometheus 会将抓取到的数据，存储在本地的时间序列数据库中，以防⽌数据丢失。</li>\n<li>3、数据查询和分析：Prometheus 内置了强⼤的查询语⾔ PromQL，⽤户可以通过 PromQL 查询存储在 Prometheus 上的时序数据，进⾏实时查询和分析。同时 PromQL ⽀持多种聚合操作和数学运算，可以对数据进⾏深⼊分析。</li>\n<li>4、告警系统：Prometheus 的告警分为了两个部分组成，告警规则和 Alertmanager。告警规则定义在 Prometheus 服务器中，根据⽤户指定的条件触发告警。当告警触发时，Prometheus 服务器会将告警信息发送给 Alertmanager。Alertmanager 会对告警信息进⾏去重、分组，然后将告警消息通过媒介发送给接收者（如邮件、钉钉等）。</li>\n<li>5、数据可视化：Prometheus 内置了⼀个简单的图形界⾯，⽤户可以在 Web 浏览器中使⽤ PromQL 查询时序数据，并将查询结果以图形的形式展示出来。此外，Prometheus 还可以与第三⽅可视化⼯具（如 Grafana）集成，提供更丰富的可视化功能。</li>\n</ul>\n<p>了解 Prometheus ⽣态中的各个组件后，我们可以概括其⼯作流程：⽬标发现、数据抓取、存储、分析、告警和展示。这些步骤共同构成了 Prometheus 强⼤的监控和告警系统。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/cZ48728.jpeg\" alt=\"4.jpg\" /></p>\n<ul>\n<li>1、⽬标发现：在开始监控之前，Prometheus 需要确定监控⽬标。它可以通过静态的配置⽂件指定，或者利⽤服务发现机制动态地发现需要监控的服务。例如，在 Kubernetes 环境中，Prometheus 能够⾃动识别并监控集群中的服务，确保随着集群的变化，监控⽬标始终是最新的。</li>\n<li>2、数据抓取：有了明确的监控⽬标后，Prometheus 通过 HTTP 协议定期从这些⽬标的 /metrics 端点抓取指标数据。这些端点暴露了各种监控指标。</li>\n<li>3、数据存储：数据抓取后会存储在本地的时间序列数据库中。</li>\n<li>4、数据分析：数据⼀旦被存储，就可以⽤ PromQL 查询语⾔，对其进⾏分析。⽆论是实时监控还是历史数据分析，PromQL 都能提供丰富的数据聚合功能，以洞察系统的状况。</li>\n<li>5、告警：Prometheus 根据预定义的规则进⾏评估。当监控的指标达到告警阈值时，Prometheus 会将告警信息发送给 Alertmanager，由 Alertmanager 进⾏告警处理并通知。</li>\n<li>6、数据可视化：Prometheus ⾃带了简单的 UI。但对于更⾼级的数据可视化需求，通常会整合 Grafana 这样的⼯具来为⽤户提供直观的数据展现⽅式。</li>\n</ul>\n<h5 id=\"17-prometheus数据模型\"><a class=\"anchor\" href=\"#17-prometheus数据模型\">#</a> 1.7 Prometheus 数据模型</h5>\n<p>Prometheus 中最为重要的是，对指标进⾏抓取和存储，这些存储下来的数据可以帮助我们分析趋势，或预测未来。为了更有⾼效的存储和查询这些数据，Prometheus 使⽤了⼀种叫 &quot;时间序列&quot; 的数据格式进⾏存储，所谓时间序列就是按照时间顺序记录所采集到的指标以及指标数据。⽽每个时间序列都是由 “⼀个指标名称加⼀堆标签” 所组成的⼀条唯⼀序列标识，其格式 &quot;&lt;metric_name&gt;{&lt;label_name&gt;=&lt;label_value&gt;, &lt;label_name&gt;=&lt;label_value&gt;, ...} @<timestamp> <value>&quot;</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询 node01 节点的各 CPU 核⼼使⽤率</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"node01.oldxu.net\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"node01.oldxu.net\"</span>,core<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">7.535</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"node01.oldxu.net\"</span>,core<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">7.535</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 查询 node02 节点，核⼼为 0 的 CPU 使⽤率</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"node02.oldxu.net\"</span>,core<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 结果</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cpu_usage<span class=\"token punctuation\">&#123;</span>instance<span class=\"token operator\">=</span><span class=\"token string\">\"node01.oldxu.net\"</span>,core<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">8.025</span></pre></td></tr></table></figure><h4 id=\"二-prometheus安装\"><a class=\"anchor\" href=\"#二-prometheus安装\">#</a> 二、Prometheus 安装</h4>\n<p>Prometheus 支持多种安装方式，为了便于理解，我们先使用二进制方式进行部署，后期在使用 Kubernetes 方式进行部署。</p>\n<h5 id=\"21-环境准备\"><a class=\"anchor\" href=\"#21-环境准备\">#</a> 2.1 环境准备</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP 地址</th>\n<th style=\"text-align:center\">主机名名称</th>\n<th style=\"text-align:center\">系统版本</th>\n<th style=\"text-align:center\">内核版本</th>\n<th style=\"text-align:center\">CPU</th>\n<th style=\"text-align:center\">内存</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.40.221</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node01.oldxu.net\">prom-node01.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.40.222</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node02.oldxu.net\">prom-node02.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.40.223</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node03.oldxu.net\">prom-node03.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.40.224</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node04.oldxu.net\">prom-node04.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.40.225</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node05.oldxu.net\">prom-node05.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"22-配置host解析\"><a class=\"anchor\" href=\"#22-配置host解析\">#</a> 2.2 配置 Host 解析</h5>\n<p>1、配置 hosts 解析</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"192.168.40.221 prom-node01.oldxu.net\"</span> <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"192.168.40.222 prom-node02.oldxu.net\"</span> <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"192.168.40.223 prom-node03.oldxu.net\"</span> <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"192.168.40.224 prom-node04.oldxu.net\"</span> <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"192.168.40.225 prom-node05.oldxu.net\"</span> <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr></table></figure><p>2、推送 hosts 解析文件，确保每个节点都能正常通过主机名进行访问</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">222</span><span class=\"token punctuation\">..</span><span class=\"token number\">225</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">scp</span> /etc/hosts root@192.168.40.<span class=\"token variable\">$i</span>:/etc/hosts</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h5 id=\"23-下载prometheus\"><a class=\"anchor\" href=\"#23-下载prometheus\">#</a> 2.3 下载 Prometheus</h5>\n<p>1、访问 Prometheus 官网 ﻿https://prometheus.io/download/﻿下载 Prometheus</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/prometheus/prometheus/releases/download/v2.49.1/prometheus-2.49.1.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 加速地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/prometheus/prometheus/releases/download/v2.49.1/prometheus-2.49.1.linux-amd64.tar.gz</span></pre></td></tr></table></figure><p>2、解压 Prometheus 至指定目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf prometheus-2.49.1.linux-amd64.tar.gz -C /etc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/prometheus-2.49.1.linux-amd64/ /etc/prometheus</span></pre></td></tr></table></figure><p>3、执行 ﻿prometheus --version﻿ 查看命令是否正常</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/prometheus --version</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>prometheus, version <span class=\"token number\">2.49</span>.1 <span class=\"token punctuation\">(</span>branch: HEAD, revision: 43e14844a33b65e2a396e3944272af8b3a494071<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  build user:       root@6d5f4c649d25</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  build date:       <span class=\"token number\">20240115</span>-16:58:43</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  go version:       go1.21.6</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  platform:         linux/amd64</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  tags:             netgo,builtinassets,stringlabels</pre></td></tr></table></figure><h5 id=\"24-配置prometheus\"><a class=\"anchor\" href=\"#24-配置prometheus\">#</a> 2.4 配置 Prometheus</h5>\n<p>1、在启动 Prometheus 之前，我们需要准备一个 Prometheus 的配置文件，监控目标服务。由于 Prometheus 服务本身对外暴露了 Metrics 指标接口，所以我们可以配置 Prometheus 监控自身，保存一个名为 prometheus.yml 的文件，替换掉默认的配置文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp /etc/prometheus/prometheus.yml /etc/prometheus/prometheus.yml_bak</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>2、启动可以直接通过命令启动，但直接这么启动不是很方便，因此我们可以准备一个专属的启动文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/prometheus --config.file=/etc/prometheus/prometheus.yml</span></pre></td></tr></table></figure><h5 id=\"25-启动prometheus\"><a class=\"anchor\" href=\"#25-启动prometheus\">#</a> 2.5 启动 Prometheus</h5>\n<p>1、配置 system 管理 Prometheus 启动和停止</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/prometheus.service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Prometheus server</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/prometheus/prometheus <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token parameter variable\">--config.file</span><span class=\"token operator\">=</span>/etc/prometheus/prometheus.yml <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token parameter variable\">--storage.tsdb.path</span><span class=\"token operator\">=</span>/etc/prometheus/data <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token parameter variable\">--storage.tsdb.retention.time</span><span class=\"token operator\">=</span>60d <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>--web.enable-lifecycle</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span> <span class=\"token variable\">$MAINPID</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>on-failure</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">RestartSec</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">SendSIGKILL</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">LimitNOFILE</span><span class=\"token operator\">=</span><span class=\"token number\">8192</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr></table></figure><p>2、在启动 Prometheus 服务时通过参数传递了一些配置选项，它们定义了 Prometheus 服务的一些关键行为。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token parameter variable\">--config.file</span><span class=\"token operator\">=</span>/etc/prometheus/prometheus.yml <span class=\"token comment\"># 指定 Prometheus 的配置文件路径。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">--storage.tsdb.path</span><span class=\"token operator\">=</span>/etc/prometheus/data <span class=\"token comment\"># 设置 Prometheus 存储时间序列数据库（TSDB）的路径。用于存放 Prometheus 抓取到的指标数据。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">--storage.tsdb.retention.time</span><span class=\"token operator\">=</span>60d <span class=\"token comment\"># 配置 Prometheus 的数据保留期限。超过这个时间范围的旧数据将被删除。这个可以根据存储资源和监控需求进行调整。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>--web.enable-lifecycle <span class=\"token comment\"># 允许通过 HTTP 请求的方式来更新 Prometheus 的配置。</span></pre></td></tr></table></figure><p>3、启动 Prometheus 服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start prometheus</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp |grep 9090</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9090                 :::*                    LISTEN      <span class=\"token number\">2057</span>/prometheus</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#通过 HTTP 请求的方式来热更新 Prometheus 的配置文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><h5 id=\"26-访问prometheus\"><a class=\"anchor\" href=\"#26-访问prometheus\">#</a> 2.6 访问 Prometheus</h5>\n<p>1、通过访问对应服务的 IP:9090 端口，访问 Prometheus 的 UI 界面</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/V68yeDl.jpeg\" alt=\"1.jpg\" /></p>\n<h5 id=\"27-prometheus的webui\"><a class=\"anchor\" href=\"#27-prometheus的webui\">#</a> 2.7 Prometheus 的 WebUI</h5>\n<p>Prometheus 的 Web UI 提供了多个页面，以便用户可以查询指标、查看配置和状态，以及管理告警等。以下是 Prometheus Web UI 中常见的几个页面及其描述：</p>\n<ul>\n<li>\n<p>Graph: 允许用户通过 Prometheus 的查询语言 PromQL 来查询数据，并将结果以图形的形式展示。</p>\n</li>\n<li>\n<p>Alerts：允许用户查看当前配置的告警规则以及每个告警的状态。</p>\n</li>\n<li>\n<p>Status：页面包含了几个子页面，它们提供了关于 Prometheus 服务器本身的各种信息：</p>\n<ul>\n<li>\n<p>Command-Line Flags: 显示了 Prometheus 启动时使用的命令行参数。这有助于了解 Prometheus 的配置和运行状态。</p>\n</li>\n<li>\n<p>Configuration: 展示了 Prometheus 当前加载的配置文件内容，可以用来确认 Prometheus 正在使用的配置，有助于调试问题。</p>\n</li>\n<li>\n<p>Targets: 显示了 Prometheus 监控的采集目标列表，包括每个目标的健康状态。如果某个目标无法抓取，这里也会显示相关的错误信息。</p>\n</li>\n<li>\n<p>Rules: 显示所有配置的告警和记录规则。</p>\n</li>\n<li>\n<p>Service Discovery: 展示了 Prometheus 的服务发现状态，这包括了 Prometheus 如何发现抓取目标，以及它们的当前状态和元数据信息。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"三-安装grafana图形展示\"><a class=\"anchor\" href=\"#三-安装grafana图形展示\">#</a> 三、安装 Grafana 图形展示</h4>\n<h5 id=\"31-grafana介绍\"><a class=\"anchor\" href=\"#31-grafana介绍\">#</a> 3.1 Grafana 介绍</h5>\n<p>Grafana 是一款开源的数据分析和可视化工具，从 2.5.0 版本开始，Grafana 已经内置了对 Prometheus 的支持，可以直接将 Prometheus 作为数据源进行查询和展示。</p>\n<h5 id=\"32-grafana安装\"><a class=\"anchor\" href=\"#32-grafana安装\">#</a> 3.2 Grafana 安装</h5>\n<p>1、访问 Grafana 官网 ﻿https://grafana.com/grafana/download﻿，下载 Grafana</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://dl.grafana.com/enterprise/release/grafana-enterprise-10.3.1-1.x86_64.rpm</span></pre></td></tr></table></figure><p>2、安装并启动 Grafana</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum localinstall grafana-enterprise-10.3.1-1.x86_64.rpm -y</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start grafana-server &amp;&amp; systemctl enable grafana-server</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp |grep 3000</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::3000                 :::*                    LISTEN      <span class=\"token number\">1787</span>/grafana</pre></td></tr></table></figure><p>3、访问 Grafana，通过﻿http://IP:3000﻿，默认 Grafana 用户名为﻿admin﻿，密码为﻿admin</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/kBj2SIo.jpeg\" alt=\"2.jpg\" /></p>\n<p>4、点击左边菜单选择﻿Administration--&gt;Default Preferences﻿（偏好设置）在﻿Language﻿选项中选择﻿简体中文﻿然后﻿Save﻿.</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/Xccw96a.png\" alt=\"1.png\" /></p>\n<h5 id=\"33-配置grafana数据源\"><a class=\"anchor\" href=\"#33-配置grafana数据源\">#</a> 3.3 配置 Grafana 数据源</h5>\n<p>1、配置 Grafana 数据源为 Prometheus，点击菜单，选择﻿Connections--&gt;Data sources--&gt; 选择 Prometheus</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/0CLhNrE.jpeg\" alt=\"5.jpg\" /></p>\n<p>2、导入 Grafana 默认监控 Prometheus 的 Dashboards，该 Dashboard 主要用于监控 Prometheus 服务器本身的性能和状态指标。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/ZsFdwXb.jpeg\" alt=\"4.jpg\" /></p>\n<p>3、通过图形界面展示 Prometheus 的数据指标；</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/ZsFdwXb.jpeg\" alt=\"4.jpg\" /></p>\n<h5 id=\"34-配置prometheus监控grafana\"><a class=\"anchor\" href=\"#34-配置prometheus监控grafana\">#</a> 3.4 配置 Prometheus 监控 Grafana</h5>\n<p>Grafana 作为一个广泛使用的可视化工具，其实也需要被监控。幸运的是 Grafana 本身提供了一个内置的指标端点。通过访问 ﻿http://&lt;grafana-ip:3000/metrics﻿，你可以获取到 Grafana 的性能指标。这些指标包括了 HTTP 请求统计、内存使用情况、图形的数量，活跃用户数等指标，它们对于监控 Grafana 的健康状况非常有帮助。</p>\n<p>1、访问 Grafana 对外暴露指标的 Metrics 接口，如果没有问题，会看到一系列的指标数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -s http://prom-node01.oldxu.net:3000/metrics| tail -10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># TYPE prometheus_template_text_expansions_total counter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>prometheus_template_text_expansions_total <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># TYPE promhttp_metric_handler_requests_in_flight gauge</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>promhttp_metric_handler_requests_in_flight <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># TYPE promhttp_metric_handler_requests_total counter</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>promhttp_metric_handler_requests_total<span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>promhttp_metric_handler_requests_total<span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>promhttp_metric_handler_requests_total<span class=\"token punctuation\">&#123;</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"503\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>2、配置 Prometheus，将 Grafana 作为一个监控目标（target）添加到配置中。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/prometheus/promtool check config /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Checking /etc/prometheus/prometheus.yml</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> SUCCESS: /etc/prometheus/prometheus.yml is valid prometheus config <span class=\"token function\">file</span> syntax</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X POST http://localhost:9090/-/reload</span></pre></td></tr></table></figure><p>3、访问 Prometheus，在 Status 中的 Targets 页面，能看到新添加的 grafana 目标；如果 State 显示 UP，说明 Prometheus 正在从 Grafana 抓取指标。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/Wh5m6k9.jpeg\" alt=\"8.jpg\" /></p>\n<p>4、接下来可以在 Grafana 中创建一个（Dashboard），也可以使用之前配置 Prometheus 导入的 Grafana 模板，这样就可以直观地展示被监控的 Grafana 服务状态；</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/9IFFRtb.jpeg\" alt=\"7.jpg\" /></p>\n<h4 id=\"四-配置prometheus监控node节点\"><a class=\"anchor\" href=\"#四-配置prometheus监控node节点\">#</a> 四、配置 Prometheus 监控 Node 节点</h4>\n<h5 id=\"41-如何监控node节点\"><a class=\"anchor\" href=\"#41-如何监控node节点\">#</a> 4.1 如何监控 Node 节点</h5>\n<p>监控节点（如服务器或者虚拟机）通常涉及收集硬件和操作系统层面的指标，比如 CPU 使用率、内存占用、磁盘 I/O、网络流量等。但是这些指标并不能直接被 Prometheus 抓取，因此我们需要借助 Node exporter 将对应的指标转为 Prometheus 能够兼容的指标格式，并对外提供 HTTP 接口暴露给 Prometheus 进行指标抓取。</p>\n<p><strong>监控地址规划：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP 地址</th>\n<th style=\"text-align:center\">主机名名称</th>\n<th style=\"text-align:center\">系统版本</th>\n<th style=\"text-align:center\">内核版本</th>\n<th style=\"text-align:center\">CPU</th>\n<th style=\"text-align:center\">内存</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.40.221</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node01.oldxu.net\">prom-node01.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.40.222</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node02.oldxu.net\">prom-node02.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.40.223</td>\n<td style=\"text-align:center\"><a href=\"http://prom-node03.oldxu.net\">prom-node03.oldxu.net</a></td>\n<td style=\"text-align:center\">Centos7.9</td>\n<td style=\"text-align:center\">3.10.0-957.el7.x86_64</td>\n<td style=\"text-align:center\">2Core</td>\n<td style=\"text-align:center\">2G</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"42-安装node_exporter\"><a class=\"anchor\" href=\"#42-安装node_exporter\">#</a> 4.2 安装 node_exporter</h5>\n<p>1、访问 Node-exporter 的 github，获取 Node-exporter 的下载地址， ﻿https://github.com/prometheus/node_exporter/releases/</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 加速地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget https://mirror.ghproxy.com/https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 推送给其他节点</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">222</span><span class=\"token punctuation\">..</span><span class=\"token number\">225</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">scp</span> node_exporter-1.7.0.linux-amd64.tar.gz root@192.168.40.<span class=\"token variable\">$i</span>:~</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>2、解压 node-exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar xf node_exporter-1.7.0.linux-amd64.tar.gz -C /etc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/node_exporter-1.7.0.linux-amd64/ /etc/node_exporter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll /etc/node_exporter/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token number\">19476</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> <span class=\"token number\">1001</span> <span class=\"token number\">1002</span>    <span class=\"token number\">11357</span> Nov <span class=\"token number\">13</span> 08:02 LICENSE</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rwxr-xr-x <span class=\"token number\">1</span> <span class=\"token number\">1001</span> <span class=\"token number\">1002</span> <span class=\"token number\">19925095</span> Nov <span class=\"token number\">13</span> 07:54 node_exporter</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> <span class=\"token number\">1001</span> <span class=\"token number\">1002</span>      <span class=\"token number\">463</span> Nov <span class=\"token number\">13</span> 08:02 NOTICE</pre></td></tr></table></figure><h5 id=\"43-配置node_exporter\"><a class=\"anchor\" href=\"#43-配置node_exporter\">#</a> 4.3 配置 node_exporter</h5>\n<p>启动 Node Exporter 即可开始进行指标采集，它默认启用了一些常见的收集器以监控 CPU、内存、网络等关键指标。然而，由于每个操作系统对收集器的支持程度不同，Node Exporter 也提供了一些 &quot;默认未启用的收集器&quot;。我们可以根据监控需求，通过特定的参数来启用这些收集器。</p>\n<ul>\n<li>要禁用默认激活的收集器，可以使用参数 ﻿--no-collector.<name></li>\n<li>要启用默认未激活的收集器，可以使用参数﻿--collector.<name></li>\n</ul>\n<p>如果只想启动某些特定的收集器，可以使用 ﻿--collector.disable-defaults﻿标志禁用所有默认的，然后在指定具体要启用收集器 ﻿--collector.&lt;name﻿ 来进行收集。</p>\n<p><em>默认关闭一些收集器的原因在于，有些指标采集需要占用过多资源开销、太重、太慢；所以谨慎开启；</em></p>\n<p>1、例如，禁止默认启动的 arp 的采集</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 直接启动会发现有 arp 采集</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/node_exporter/node_exporter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:21:35.150Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:117 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>arp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 禁用 arp 收集器，就看不到了</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/node_exporter/node_exporter --no-collector.arp</span></pre></td></tr></table></figure><p>2、启用默认未激活的﻿tcpstat﻿收集器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/node_exporter/node_exporter</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/node_exporter/node_exporter --collector.tcpstat</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:23:34.296Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:117 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>tcpstat</pre></td></tr></table></figure><p>3、也可以禁用所有收集器，仅启用那些只想启用的收集器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># /etc/node_exporter/node_exporter --collector.disable-defaults --collector.cpu --collector.meminfo --collector.diskstats --collector.netstat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.969Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:192 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Starting node_exporter\"</span> <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"(version=1.7.0, branch=HEAD, revision=7333465abf9efba81876303bb57e6fadb946041b)\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.969Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:193 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Build context\"</span> <span class=\"token assign-left variable\">build_context</span><span class=\"token operator\">=</span><span class=\"token string\">\"(go=go1.21.4, platform=linux/amd64, user=root@35918982f6d8, date=20231112-23:53:35, tags=netgo osusergo static_build)\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.969Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:195 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>warn <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Node Exporter is running as root user. This exporter is designed to run as unprivileged user, root is not required.\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>diskstats_common.go:111 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>diskstats <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Parsed flag --collector.diskstats.device-exclude\"</span> <span class=\"token assign-left variable\">flag</span><span class=\"token operator\">=</span>^<span class=\"token punctuation\">(</span>ram<span class=\"token operator\">|</span>loop<span class=\"token operator\">|</span>fd<span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">|</span>s<span class=\"token operator\">|</span><span class=\"token function\">v</span><span class=\"token operator\">|</span>xv<span class=\"token punctuation\">)</span>d<span class=\"token punctuation\">[</span>a-z<span class=\"token punctuation\">]</span><span class=\"token operator\">|</span>nvme<span class=\"token punctuation\">\\</span>d+n<span class=\"token punctuation\">\\</span>d+p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>d+$</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:110 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Enabled collectors\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:117 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>cpu</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:117 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>diskstats</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:117 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>meminfo</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>node_exporter.go:117 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">collector</span><span class=\"token operator\">=</span>netstat</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>tls_config.go:274 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Listening on\"</span> <span class=\"token assign-left variable\">address</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:9100</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span>-02-22T13:25:37.970Z <span class=\"token assign-left variable\">caller</span><span class=\"token operator\">=</span>tls_config.go:277 <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>info <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"TLS is disabled.\"</span> <span class=\"token assign-left variable\">http2</span><span class=\"token operator\">=</span>false <span class=\"token assign-left variable\">address</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:9100</pre></td></tr></table></figure><h5 id=\"44-启动node_exporter\"><a class=\"anchor\" href=\"#44-启动node_exporter\">#</a> 4.4 启动 node_exporter</h5>\n<p>1、配置 system 管理 Prometheus 启动和停止</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /usr/lib/systemd/system/node_exporter.service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>node_exporter</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">Documentation</span><span class=\"token operator\">=</span>https://prometheus.io/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/node_exporter/node_exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  --web.listen-address<span class=\"token operator\">=</span>:9100 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  --web.max-requests<span class=\"token operator\">=</span><span class=\"token number\">40</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token parameter variable\">--collector.mountstats</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token parameter variable\">--collector.systemd</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token parameter variable\">--collector.ethtool</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token parameter variable\">--collector.tcpstat</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">ExecReload</span><span class=\"token operator\">=</span>/bin/kill <span class=\"token parameter variable\">-HUP</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span>20s</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr></table></figure><p>2、启动 node-exporter</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start node_exporter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -lntp|grep 9100</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9100                 :::*                    LISTEN      <span class=\"token number\">6340</span>/node_exporter</pre></td></tr></table></figure><p>3、访问对应的 metrics，验证是否能采集到数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -s http://localhost:9100/metrics |head -10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># TYPE go_gc_duration_seconds summary</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span>.066e-05</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.25\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span>.523e-05</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.5\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span>.7351e-05</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"0.75\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">3</span>.9952e-05</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>go_gc_duration_seconds<span class=\"token punctuation\">&#123;</span>quantile<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token number\">0.000122787</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>go_gc_duration_seconds_sum <span class=\"token number\">0.000496506</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>go_gc_duration_seconds_count <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># HELP go_goroutines Number of goroutines that currently exist.</span></pre></td></tr></table></figure><h5 id=\"45-配置prometheus\"><a class=\"anchor\" href=\"#45-配置prometheus\">#</a> 4.5 配置 Prometheus</h5>\n<p>1、修改 Prometheus 配置，添加新的 Job 分组，然后将对应的节点纳入监控中；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/prometheus/prometheus.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 全局段定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>global:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  scrape_interval: 15s <span class=\"token comment\"># 设置 Prometheus 抓取指标数据的间隔，默认为 15 秒。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 抓取指定的目标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>scrape_configs:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  - job_name: <span class=\"token string\">\"prometheus\"</span> <span class=\"token comment\"># 定义一个抓取任务，名为 'prometheus'。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span> <span class=\"token comment\"># 指定 Prometheus 从监控目标暴露的 HTTP 端点路径抓取指标，默认为 '/metrics'。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    static_configs: <span class=\"token comment\"># 配置静态目标地址，Prometheus 将定期从如下这些地址抓取指标。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9090\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  - job_name: <span class=\"token string\">\"grafana\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:3000\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  - job_name: <span class=\"token string\">\"node_exporter\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    metrics_path: <span class=\"token string\">\"/metrics\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    static_configs:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - targets: <span class=\"token punctuation\">[</span><span class=\"token string\">\"prom-node01.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node02.oldxu.net:9100\"</span>,<span class=\"token string\">\"prom-node03.oldxu.net:9100\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>2、重新加载 Prometheus</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@prom-node01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -v -X POST http://localhost:9090/-/reload</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>* About to connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> to localhost port <span class=\"token number\">9090</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">#0)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*   Trying ::1<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>* Connected to localhost <span class=\"token punctuation\">(</span>::1<span class=\"token punctuation\">)</span> port <span class=\"token number\">9090</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">#0)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">></span> POST /-/reload HTTP/1.1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">></span> User-Agent: curl/7.29.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">></span> Host: localhost:9090</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">></span> Accept: */*</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">></span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span> HTTP/1.1 <span class=\"token number\">200</span> OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">&lt;</span> Date: Thu, <span class=\"token number\">22</span> Feb <span class=\"token number\">2024</span> <span class=\"token number\">13</span>:35:56 GMT</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">&lt;</span> Content-Length: <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">&lt;</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>* Connection <span class=\"token comment\">#0 to host localhost left intact</span></pre></td></tr></table></figure><p>3、检查 Prometheus 是否已将对应节点纳入监控（点击 Status--&gt;Targets）</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/ClR3Pyh.jpeg\" alt=\"1.jpg\" /></p>\n<h5 id=\"46-导入grafana模板\"><a class=\"anchor\" href=\"#46-导入grafana模板\">#</a> 4.6 导入 Grafana 模板</h5>\n<p>在 Grafana 的官方插件库中，有很多 Node-exporter 模板。其中相对受欢的模板的 ID 是： ﻿11074、1860﻿。</p>\n<ul>\n<li>11074﻿：模板包括了 CPU、内存、磁盘、网络、温度传感器等指标（常用）。</li>\n<li>1860﻿：模板包括 CPU、内存、磁盘、网络等。这运行状况，及时发现潜在问题并进行调优。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/oqN9oVU.jpeg\" alt=\"2.jpg\" /></p>\n<h4 id=\"五-node_exporter常用指标\"><a class=\"anchor\" href=\"#五-node_exporter常用指标\">#</a> 五、node_exporter 常用指标</h4>\n<h5 id=\"51-cpu与内存相关指标\"><a class=\"anchor\" href=\"#51-cpu与内存相关指标\">#</a> 5.1 CPU 与内存相关指标</h5>\n<p>1、CPU 负载相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:center\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_load1</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">过去 1 分钟的系统平均负载。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_load5</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">过去 5 分钟的系统平均负载。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_load15</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">过去 1 5 分钟的系统平均负载。</td>\n</tr>\n</tbody>\n</table>\n<p>2、CPU 使用相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:center\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_cpu_seconds_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:center\">CPU 在不同模式下使用的时间（以秒为单位）。</td>\n</tr>\n</tbody>\n</table>\n<p>3、内存相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:center\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_memory_MemTotal_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">系统总内存量（以字节为单位）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_memory_MemAvailable_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">系统当前可用的内存量（以字节为单位）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_memory_Cached_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">系统缓存使用的内存（以字节为单位）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_memory_Buffers_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">用于缓冲使用的内存（以字节为单位）。</td>\n</tr>\n</tbody>\n</table>\n<p>计算可用内存百分比： node_memory_MemAvailable_bytes /node_memory_MemTotal_bytes * 100</p>\n<p>计算已用内存百分比：(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) /node_memory_MemTotal_bytes *<br />\n100</p>\n<p>4、SWAP 相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:center\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_memory_SwapTotal_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">系统交换空间总量（以字节为单位）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_memory_SwapFree_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">系统未被使用的交换空间（以字节为单位）。</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"52-磁盘与网络相关指标\"><a class=\"anchor\" href=\"#52-磁盘与网络相关指标\">#</a> 5.2 磁盘与网络相关指标</h5>\n<p>1、磁盘空间相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:center\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_filesystem_size_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">文件系统大小（以字节为单位）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_filesystem_avail_bytes</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">文件系统可用空间（以字节为单位）。</td>\n</tr>\n</tbody>\n</table>\n<p>计算可用空间百分比： node_filesystem_avail_bytes /node_filesystem_size_bytes * 100</p>\n<p>计算已用空间百分比：(node_filesystem_size_bytes - node_filesystem_avail_bytes) /node_filesystem_size_bytes * 100</p>\n<p>2、磁盘 Inode 相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:center\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_filesystem_files</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">文件系统中 inode 能使用的总数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_filesystem_files_free</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:center\">文件系统中空闲 inode 的数量。</td>\n</tr>\n</tbody>\n</table>\n<p>计算已用的 Inode 百分比： (node_filesystem_files - node_filesystem_files_free) /node_filesystem_files * 100</p>\n<p>3、磁盘 IO 吞吐量相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_disk_read_bytes_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:left\">从给定设备读取的总字节数。（以字节为单位）。（使用 irate 可以得到每秒写入大小）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_disk_written_bytes_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:left\">向给定设备写入的总字节数。（以字节为单位）。（使用 irate 可以得到每秒写入大小）</td>\n</tr>\n</tbody>\n</table>\n<p>4、磁盘 IOPS 相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_disk_reads_completed_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:left\">磁盘设备完成的读操作总数。（使用 irate 可以得到每秒读操作的平均数）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_disk_writes_completed_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:left\">磁盘设备完成的写操作总数。（使用 irate 可以得到每秒读操作的平均数）</td>\n</tr>\n</tbody>\n</table>\n<p>5、网络核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_network_receive_bytes_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:left\">网络接口接收到的总字节数。（以字节为单位）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_network_transmit_bytes_total</td>\n<td style=\"text-align:center\">Counter</td>\n<td style=\"text-align:left\">网络接口发送出去的总字节数。（以字节为单位）。</td>\n</tr>\n</tbody>\n</table>\n<p>6、连接追踪核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_nf_conntrack_entries</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">系统正在跟踪的网络连接的数量。这包括所有类型的连接 TCP， UDP、ICMP 等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_nf_conntrack_entries_limit</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">系统 conntrack 能够跟踪的网络连接的最大数量。读取的是 /proc/sys/net/netfilter/nf_conntrack_max，内核参数为：net.netfilter.nf_conntrack_max）</td>\n</tr>\n</tbody>\n</table>\n<p>计算连接追踪使用百分比： node_nf_conntrack_entries /node_nf_conntrack_entries_limit * 100</p>\n<h5 id=\"53-tcp与其他相关指标\"><a class=\"anchor\" href=\"#53-tcp与其他相关指标\">#</a> 5.3 TCP 与其他相关指标</h5>\n<p>1、TCP 相关核心指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\" state=\"time_wait\">node_tcp_connection_states</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">当前已断开的 TCP 连接数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\" state=\"established\">node_tcp_connection_states</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">当前建立的 TCP 连接数。</td>\n</tr>\n</tbody>\n</table>\n<p>2、文件描述符</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_filefd_maximum</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">当前系统最大可用的文件描述符数量（由 fs.file-max 内核参数设定，具体读取的文件 /proc/sys/fs/file-max）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_filefd_allocated</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">当前系统已经分配的文件描述符的数量。</td>\n</tr>\n</tbody>\n</table>\n<p>当前文件描述符已使用百分比 ：(node_filefd_allocated /node_filefd_maximum) * 100</p>\n<p>3、系统其他指标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指标名称</th>\n<th style=\"text-align:center\">指标类型</th>\n<th style=\"text-align:left\">指标含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">node_time_seconds</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">当前系统的时间戳</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">node_boot_time_seconds</td>\n<td style=\"text-align:center\">gauge</td>\n<td style=\"text-align:left\">系统最后一次启动的时间戳。</td>\n</tr>\n</tbody>\n</table>\n<p>系统自启动以来，总共运行了多少天 = (node_time_seconds - node_boot_time_seconds)/ 86400</p>\n",
            "tags": [
                "Prometheus"
            ]
        }
    ]
}