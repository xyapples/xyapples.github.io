{
    "version": "https://jsonfeed.org/version/1",
    "title": "LinuxSre云原生 • All posts by \"rabbitmq\" tag",
    "description": "专注于 Linux 运维、云计算、云原⽣等技术",
    "home_page_url": "http://ixuyong.cn",
    "items": [
        {
            "id": "http://ixuyong.cn/posts/2692178654.html",
            "url": "http://ixuyong.cn/posts/2692178654.html",
            "title": "Rabbitmq集群部署",
            "date_published": "2025-05-29T12:35:53.000Z",
            "content_html": "<h3 id=\"rabbitmq集群部署\"><a class=\"anchor\" href=\"#rabbitmq集群部署\">#</a> Rabbitmq 集群部署</h3>\n<h4 id=\"一-环境配置\"><a class=\"anchor\" href=\"#一-环境配置\">#</a> 一、环境配置</h4>\n<h5 id=\"11-关闭防火墙-selinux\"><a class=\"anchor\" href=\"#11-关闭防火墙-selinux\">#</a> 1.1 关闭防火墙、Selinux</h5>\n<pre><code>systemctl disable --now firewalld \nsetenforce 0\nsed -i 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/sysconfig/selinux\nsed -i 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/selinux/config\n</code></pre>\n<h5 id=\"12-配置-yum-源\"><a class=\"anchor\" href=\"#12-配置-yum-源\">#</a> 1.2 配置 yum 源</h5>\n<pre><code>#rocky linux配置\nsed -e 's|^mirrorlist=|#mirrorlist=|g' \\\n    -e 's|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.aliyun.com/rockylinux|g' \\\n    -i.bak \\\n    /etc/yum.repos.d/rocky-*.repo\nyum clean all &amp;&amp; yum makecache\nmkdir /soft /data /scripts /backup\n</code></pre>\n<h5 id=\"13-安装ntpdate\"><a class=\"anchor\" href=\"#13-安装ntpdate\">#</a> 1.3 安装 ntpdate</h5>\n<pre><code>sudo dnf install epel-release -y\nsudo dnf config-manager --set-enabled epel\nsudo dnf install ntpsec\n</code></pre>\n<h5 id=\"14-配置时间同步\"><a class=\"anchor\" href=\"#14-配置时间同步\">#</a> 1.4 配置时间同步</h5>\n<pre><code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\necho 'Asia/Shanghai' &gt;/etc/timezone\nntpdate time2.aliyun.com\n# 加入到crontab\ncrontab -e\n*/5 * * * * /usr/sbin/ntpdate time2.aliyun.com\n</code></pre>\n<h5 id=\"15-配置文件描述符\"><a class=\"anchor\" href=\"#15-配置文件描述符\">#</a> 1.5 配置文件描述符</h5>\n<pre><code>ulimit -SHn 65535\nvim /etc/security/limits.conf\n# 末尾添加如下内容\n* soft nofile 65536\n* hard nofile 131072\n* soft nproc 65535\n* hard nproc 655350\n* soft memlock unlimited\n* hard memlock unlimited\n</code></pre>\n<h5 id=\"16-系统内核参数调优\"><a class=\"anchor\" href=\"#16-系统内核参数调优\">#</a> 1.6 系统内核参数调优</h5>\n<pre><code>cat &gt;&gt;/etc/sysctl.conf&lt;&lt;EOF\nvm.max_map_count = 262144\nvm.swappiness=1\n\nnet.ipv4.tcp_fin_timeout=2\nnet.ipv4.tcp_tw_reuse=1\n#net.ipv4.tcp_tw_recycle=1\nnet.ipv4.tcp_syncookies=1\nnet.ipv4.tcp_keepalive_time=600\nnet.ipv4.ip_local_port_range=4000 65000\nnet.ipv4.tcp_max_syn_backlog=16384\nnet.ipv4.route.gc_timeout=100\nnet.ipv4.tcp_max_tw_buckets= 5000\n\nnet.ipv4.tcp_syn_retries=1\nnet.ipv4.tcp_synack_retries=1\nnet.core.somaxconn=16384\nnet.core.netdev_max_backlog=16384\nnet.ipv4.tcp_max_orphans=16384\n\n# 设置最大内存共享段大小bytes\nkernel.shmmax=15461882265\nkernel.shmall=3774873\n# 修改消息队列长度\nkernel.msgmax=65535\nkernel.msgmnb=65535\nEOF\n</code></pre>\n<h5 id=\"17-修改默认资源限制\"><a class=\"anchor\" href=\"#17-修改默认资源限制\">#</a> 1.7 修改默认资源限制</h5>\n<pre><code>cat &gt;&gt;/etc/systemd/system.conf&lt;&lt; EOF\nDefaultLimitNOFILE=65536\nDefaultLimitNPROC=32000\nDefaultLimitMEMLOCK=infinity\nEOF\n</code></pre>\n<h5 id=\"18-执行命令生效状态\"><a class=\"anchor\" href=\"#18-执行命令生效状态\">#</a> 1.8 执行命令生效状态</h5>\n<pre><code>sysctl -p\n</code></pre>\n<h5 id=\"19-安装基础软件包\"><a class=\"anchor\" href=\"#19-安装基础软件包\">#</a> 1.9 安装基础软件包</h5>\n<pre><code>yum install wget jq psmisc vim unzip net-tools telnet tree yum-utils device-mapper-persistent-data \\\nlvm2 git nfs-utils iotop httpd-tools dos2unix lrzsz -y\n</code></pre>\n<h5 id=\"110-升级系统\"><a class=\"anchor\" href=\"#110-升级系统\">#</a> 1.10 升级系统</h5>\n<pre><code>yum update -y --exclude=kernel* &amp;&amp; reboot\n</code></pre>\n<h4 id=\"二-rabbitmq集群部署\"><a class=\"anchor\" href=\"#二-rabbitmq集群部署\">#</a> 二、Rabbitmq 集群部署</h4>\n<h5 id=\"21-环境准备\"><a class=\"anchor\" href=\"#21-环境准备\">#</a> 2.1 环境准备</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">192.168.40.101</th>\n<th style=\"text-align:center\">192.168.40.102</th>\n<th style=\"text-align:center\">192.168.40.103</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">master</td>\n<td style=\"text-align:center\">slave1</td>\n<td style=\"text-align:center\">slave2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"22-修改hosts\"><a class=\"anchor\" href=\"#22-修改hosts\">#</a> 2.2 修改 hosts</h5>\n<pre><code>vim /etc/hosts\n192.168.40.101 rabbitmq-01\n192.168.40.102 rabbitmq-02\n192.168.40.103 rabbitmq-03\n</code></pre>\n<h5 id=\"23-配置hosts\"><a class=\"anchor\" href=\"#23-配置hosts\">#</a> 2.3 配置 hosts</h5>\n<pre><code>hostnamectl set-hostname rabbitmq-01\nhostnamectl set-hostname rabbitmq-02\nhostnamectl set-hostname rabbitmq-03\n</code></pre>\n<h5 id=\"24-安装包下载\"><a class=\"anchor\" href=\"#24-安装包下载\">#</a> 2.4 安装包下载</h5>\n<pre><code>wget https://github.com/rabbitmq/erlang-rpm/releases/download/v27.3.1/erlang-27.3.1-1.el8.x86_64.rpm\nwget http://repo.iotti.biz/CentOS/7/x86_64/socat-1.7.3.2-5.el7.lux.x86_64.rpm\nwget https://github.com/rabbitmq/rabbitmq-server/releases/download/v4.1.0/rabbitmq-server-4.1.0-1.el8.noarch.rpm\n</code></pre>\n<h5 id=\"25-安装rabbitmq\"><a class=\"anchor\" href=\"#25-安装rabbitmq\">#</a> 2.5 安装 rabbitmq</h5>\n<ul>\n<li>RabbitMQ 是采用 Erlang 语言开发的，所以系统环境必须提供 Erlang 环境，需要是安装 Erlang。</li>\n<li>在 RabiitMQ 安装过程中需要依赖 socat 插件，首先安装该插件。</li>\n<li>Erlang 和 RabbitMQ 版本对照： <a href=\"https://www.rabbitmq.com/which-erlang.html\">https://www.rabbitmq.com/which-erlang.html</a></li>\n</ul>\n<pre><code>yum localinstall erlang-27.3.1-1.el8.x86_64.rpm -y\nyum localinstall socat-1.7.3.2-5.el7.lux.x86_64.rpm -y\nyum localinstall rabbitmq-server-4.1.0-1.el8.noarch.rpm -y\n</code></pre>\n<h5 id=\"26-配置rabbitmq\"><a class=\"anchor\" href=\"#26-配置rabbitmq\">#</a> 2.6 配置 rabbitmq</h5>\n<p>所有节点创建自定义数据和日志目录</p>\n<pre><code>mkdir -p /data/rabbitmq/data /data/rabbitmq/log\n</code></pre>\n<p>所有节点编辑配置文件</p>\n<pre><code>vim /etc/rabbitmq/rabbitmq-env.conf\nRABBITMQ_MNESIA_BASE=/data/rabbitmq/data\nRABBITMQ_LOG_BASE=/data/rabbitmq/log\nRABBITMQ_ERLANG_COOKIE=/data/rabbitmq/.erlang.cookie\n</code></pre>\n<p>所有节点赋予.erlang.cookie 文件权限（其他 2 台从节点 cookie 值要保持一致，权限为 owner 只读），RabbitMQ 的集群是依赖 erlang 集群，而 erlang 集群是通过这个 cookie 进行通信认证的。</p>\n<pre><code>vim /data/rabbitmq/.erlang.cookie\nKAIJQVKJHAGMUCWXZGVG \n\nchmod -R 400 /data/rabbitmq/.erlang.cookie\nchown -R rabbitmq.rabbitmq /data/rabbitmq/\n</code></pre>\n<h5 id=\"27-rabbitmq启动\"><a class=\"anchor\" href=\"#27-rabbitmq启动\">#</a> 2.7 rabbitmq 启动</h5>\n<p>所有节点启动 web 管理插件和分片插件</p>\n<pre><code>rabbitmq-plugins enable rabbitmq_management\nrabbitmq-plugins enable rabbitmq_sharding\n</code></pre>\n<p>所有节点设置开机自启</p>\n<pre><code>systemctl enable rabbitmq-server\nsystemctl restart rabbitmq-server\nsystemctl status rabbitmq-server\n</code></pre>\n<h5 id=\"28-加入集群\"><a class=\"anchor\" href=\"#28-加入集群\">#</a> 2.8 加入集群</h5>\n<p>创建集群，在 node2 和 node3 上执行加入集群命令（主节点无需执行如下操作）:</p>\n<pre><code>#1.关闭服务\nrabbitmqctl stop_app\n\n#2.加入集群\nrabbitmqctl join_cluster rabbit@rabbitmq-01\n\n#3.启动服务\nrabbitmqctl start_app\n\n#4.查看集群状态,任意节点执行\nrabbitmqctl cluster_status\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/gWflncf.jpeg\" alt=\"Snipaste_2025-05-29_20-40-27.jpg\" /></p>\n<h5 id=\"29-配置rabbitmq权限\"><a class=\"anchor\" href=\"#29-配置rabbitmq权限\">#</a> 2.9 配置 rabbitmq 权限</h5>\n<p>rabbitmq 有一个默认的账号密码 guest，但该情况仅限于本机 localhost 进行访问，所以需要添加一个远程登录的用户。</p>\n<p><strong>角色有四种：</strong></p>\n<ul>\n<li>administrator：可以登录控制台、查看所有信息、并对 rabbitmq 进行管理</li>\n<li>monToring：监控者；登录控制台，查看所有信息</li>\n<li>policymaker：策略制定者；登录控制台指定策略</li>\n<li>managment：普通管理员；登录控制</li>\n</ul>\n<pre><code># 添加用户\nrabbitmqctl add_user admin 123456\n\n# 为用户添加资源权限(授予访问虚拟机根节点的所有权限)\nrabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;\n\n# 设置用户角色,分配操作权限\nrabbitmqctl set_user_tags admin administrator\n</code></pre>\n<p>这里创建用户 xuyong，密码 123456，设置 adminstator 角色，赋予所有权限</p>\n<pre><code># 添加用户\nrabbitmqctl add_user xuyong 123456\n\n# 为用户添加资源权限(授予访问虚拟机根节点的所有权限)\nrabbitmqctl set_permissions -p &quot;/&quot; xuyong &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;\n\n# 新增虚拟主机\nrabbitmqctl add_vhost /xuyong\n\n# 将新虚拟主机授权给新用户\n# rabbitmqctl set_permissions -p vhost_name username “.*” “.*” “.*”(后面三个”*”代表用户拥有配置、写、读全部权限)\nrabbitmqctl set_permissions -p &quot;/xuyong&quot; xuyong &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;\n\n#查看权限\nrabbitmqctl list_permissions -p /xuyong\n\n# 设置用户角色,分配操作权限\nrabbitmqctl set_user_tags xuyong administrator\n\n# 删除guest用户\nrabbitmqctl delete_user guest\n</code></pre>\n<p>在其他节点检查，账户是否已同步</p>\n<pre><code>rabbitmqctl list_users\n</code></pre>\n<h5 id=\"210-访问rabbitmq\"><a class=\"anchor\" href=\"#210-访问rabbitmq\">#</a> 2.10 访问 rabbitmq</h5>\n<p>浏览器访问:<a href=\"http://192.168.40.101:15672/\">http://192.168.40.101:15672/</a><br />\n 用户名: admin<br />\n 密码：123456</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/KQpvPU4.jpeg\" alt=\"Snipaste_2025-05-29_20-29-59.jpg\" /></p>\n",
            "tags": [
                "Rabbitmq"
            ]
        }
    ]
}