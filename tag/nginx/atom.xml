<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://ixuyong.cn</id>
    <title>LinuxSre云原生 • Posts by &#34;nginx&#34; tag</title>
    <link href="http://ixuyong.cn" />
    <updated>2025-08-22T13:50:04.000Z</updated>
    <category term="Aliyun" />
    <category term="DevOps" />
    <category term="Docker" />
    <category term="ELKStack" />
    <category term="Harbor" />
    <category term="LVS" />
    <category term="Kubernetes" />
    <category term="Linux" />
    <category term="rsync" />
    <category term="Samba" />
    <category term="Vsftp" />
    <category term="Nginx" />
    <category term="MySQL" />
    <category term="Openvpn" />
    <category term="Prometheus" />
    <category term="Rabbitmq" />
    <category term="Redis" />
    <category term="Tomcat" />
    <category term="Windows" />
    <entry>
        <id>http://ixuyong.cn/posts/3682494305.html</id>
        <title>Nginx常用模块</title>
        <link rel="alternate" href="http://ixuyong.cn/posts/3682494305.html"/>
        <content type="html">&lt;h3 id=&#34;nginx常用模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nginx常用模块&#34;&gt;#&lt;/a&gt; Nginx 常用模块&lt;/h3&gt;
</content>
        <category term="Nginx" />
        <updated>2025-08-22T13:50:04.000Z</updated>
    </entry>
    <entry>
        <id>http://ixuyong.cn/posts/1697351306.html</id>
        <title>Nginx基础Http协议</title>
        <link rel="alternate" href="http://ixuyong.cn/posts/1697351306.html"/>
        <content type="html">&lt;h3 id=&#34;nginx基础http协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nginx基础http协议&#34;&gt;#&lt;/a&gt; Nginx 基础 Http 协议&lt;/h3&gt;
&lt;h4 id=&#34;1http协议介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1http协议介绍&#34;&gt;#&lt;/a&gt; 1.Http 协议介绍&lt;/h4&gt;
&lt;h5 id=&#34;11-什么是url&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-什么是url&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.1&lt;/strong&gt; 什么是 URL&lt;/h5&gt;
&lt;p&gt;通常我们在访问一个网站页面时，请求到的内容通称为 &amp;quot;资源&amp;quot;。而 “资源 “这一概念非常宽泛，它可以是一份文档，一张图片，或所有其他你能够想到的格式。每个资源都由一个 URI 来进行标识；比如: &lt;a href=&#34;http://fj.ixuyong.cn/public/tt.jpeg%E8%BF%99%E6%A0%B7%E7%9A%84%E8%B5%84%E6%BA%90%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BC%9A%E5%B0%86%E8%AF%A5%E5%85%B6%E7%A7%B0%E4%B8%BAURL%E5%9C%B0%E5%9D%80%EF%BC%9B%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91%E8%A7%A3%E9%87%8A%EF%BC%9AURL%E7%AE%80%E7%A7%B0%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%AE%9A%E4%BD%8D%E7%AC%A6%EF%BC%8C%E7%94%A8%E6%9D%A5%E5%94%AF%E4%B8%80%E5%9C%B0%E6%A0%87%E8%AF%86%E4%B8%87%E7%BB%B4%E7%BD%91%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E4%B8%AA%E8%B5%84%E6%BA%90%E3%80%82URL%E7%94%B1%E5%8D%8F%E8%AE%AE%E3%80%81%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%A7%B0%E3%80%81%E7%AB%AF%E5%8F%A3%E4%BB%A5%E5%8F%8A%E6%96%87%E4%BB%B6%E5%90%8D%E5%87%A0%E9%83%A8%E5%88%86%E6%9E%84%E6%88%90%E3%80%82&#34;&gt;http://fj.ixuyong.cn/public/tt.jpeg 这样的资源，我们会将该其称为 URL 地址；百度百科解释：URL 简称统一资源定位符，用来唯一地标识万维网中的某一个资源。URL 由协议、主机名称、端口以及文件名几部分构成。&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;12-什么是html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-什么是html&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.2&lt;/strong&gt; 什么是 HTML&lt;/h5&gt;
&lt;p&gt;Html 简称 Web Page，一个完整的 Html 页面可能会包含很多个 URL 的资源。(反之：我们也可以理解一个 HTML 文件是由多个不同的 URL 资源拼接而成的。)&lt;/p&gt;
&lt;h5 id=&#34;13-什么是http&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-什么是http&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.3&lt;/strong&gt; 什么是 HTTP&lt;/h5&gt;
&lt;p&gt;HTTP (Hyper Text Transfer Protocol) 中文名为超文本传输协议。是一种能够获取如 HTML 这样网络资源的通讯协议。它是在 Web 上进行数据交换的基础。HTTP 的概述参考 URL 简单理解：HTTP 协议就是将用户请求的 HTML 页面从一台 Web 服务器传输到客户端浏览器的一种协议。&lt;/p&gt;
&lt;h5 id=&#34;14-url-html-http之间关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-url-html-http之间关系&#34;&gt;#&lt;/a&gt; 1.4 URL、HTML、HTTP 之间关系&lt;/h5&gt;
&lt;p&gt;一个完整的 HTML 页面是由多个不同的 Url 资源组成的；而 HTTP 协议主要是用来传输这种 HTML 页面的；&lt;/p&gt;
&lt;h4 id=&#34;2http工作原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2http工作原理&#34;&gt;#&lt;/a&gt; 2.Http 工作原理&lt;/h4&gt;
&lt;h5 id=&#34;21-图解http工作原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-图解http工作原理&#34;&gt;#&lt;/a&gt; 2.1 图解 HTTP 工作原理&lt;/h5&gt;
&lt;p&gt;我们详细的了解下 HTTP 的工作原理，我们到底是如何获取到服务器上的页面。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/5p0uvcC.png&#34; alt=&#34;3.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;22-http工作原理总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-http工作原理总结&#34;&gt;#&lt;/a&gt; 2.2 HTTP 工作原理总结&lt;/h5&gt;
&lt;p&gt;整个用户访问网站过程就是 DNS-TCP-HTTP&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/Lwnt1Bw.png&#34; alt=&#34;2.png&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;3http请求request&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3http请求request&#34;&gt;#&lt;/a&gt; 3.Http 请求 Request&lt;/h4&gt;
&lt;p&gt;HTTP 请求的一个例子：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/InbGStI.png&#34; alt=&#34;4.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;31-请求method&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-请求method&#34;&gt;#&lt;/a&gt; 3.1 请求 Method&lt;/h5&gt;
&lt;p&gt;客户端向服务端发送请求时，会根据不同的资源发送不同的请求方法 Method：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GET：用于获取 URI 对应的资源；（比如看朋友圈)&lt;/li&gt;
&lt;li&gt;POST：用于提交请求，可以更新或者创建资源，是非幂等的；（发布朋友圈）&lt;/li&gt;
&lt;li&gt;PUT：用于向指定的 URI 传送更新资源，是幂等的；（更新朋友圈）&lt;/li&gt;
&lt;li&gt;DELETE：用于向指定的 URI 删除资源；（比如删朋友圈）&lt;/li&gt;
&lt;li&gt;HEAD：用于检查 (仅获取 Header 部分的内容)；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般创建对象时用 POST，更新对象时用 PUT；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PUT 是幂等的，POST 是非幂等的；&lt;/li&gt;
&lt;li&gt;幂等：对于相同的输入，每次得到的结果都是相等的；&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;32-请求header&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-请求header&#34;&gt;#&lt;/a&gt; 3.2 请求 Header&lt;/h5&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;:authority: www.xuliangwei.com&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;:method: GET&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;:path: /&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;:scheme: https&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Accept: text/html,  &lt;span class=&#34;token comment&#34;&gt;# 请求的类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Accept-Encoding: gzip, deflate  &lt;span class=&#34;token comment&#34;&gt;# 是否进行压缩&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Accept-Language: zh-CN,zh&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.9&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 请求的语言&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Cache-Control: max-age&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 缓存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Connection: keep-alive   &lt;span class=&#34;token comment&#34;&gt;# TCP 长连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Host: www.oldboyedu.com  &lt;span class=&#34;token comment&#34;&gt;# 请求的域名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;If-Modified-Since: Fri, 04 May &lt;span class=&#34;token number&#34;&gt;201808&lt;/span&gt;:13:44 GMT  &lt;span class=&#34;token comment&#34;&gt;# 修改的时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;User-Agent: Mozilla/5.0  &lt;span class=&#34;token comment&#34;&gt;# 请求浏览器的工具&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;33-请求connection&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-请求connection&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3.3&lt;/strong&gt; 请求 Connection&lt;/h5&gt;
&lt;p&gt;Http 请求中的长连接与短连接是什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http1.0 协议使用的是短连接：建立一次 tcp 的连接，发起一次 http 的请求，结束，tcp 断开。&lt;/li&gt;
&lt;li&gt;http1.1 协议使用的是长连接：建立一次 tcp 的连接，发起多次 http 的请求，结束，tcp 断开。&lt;/li&gt;
&lt;li&gt;HTTP 协议版本参考下图，HTTP1.0 使用的是短连接，HTTP1.1 串行连接，与 HTTP2.0 并行连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/bQERRRT.png&#34; alt=&#34;5.png&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;4http响应response&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4http响应response&#34;&gt;#&lt;/a&gt; 4.Http 响应 Response&lt;/h4&gt;
&lt;p&gt;HTTP 响应的一个例子：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/hX37K32.png&#34; alt=&#34;6.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;41-响应header&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-响应header&#34;&gt;#&lt;/a&gt; 4.1 响应 Header&lt;/h5&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;HTTP/1.1 &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt; OK        &lt;span class=&#34;token comment&#34;&gt;# 返回服务器的 http 协议，状态码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Date: Fri, &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt; Sep &lt;span class=&#34;token number&#34;&gt;2018&lt;/span&gt; 09:14:28 GMT  &lt;span class=&#34;token comment&#34;&gt;# 返回服务器的时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Server: Apache/2.4.6   &lt;span class=&#34;token comment&#34;&gt;# 返回服务器使用的软件 Apache&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Connection: Keep-Alive &lt;span class=&#34;token comment&#34;&gt;# TCP 长连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Keep-Alive: &lt;span class=&#34;token assign-left variable&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 长连接的超时时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;42-响应code&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-响应code&#34;&gt;#&lt;/a&gt; 4.2 响应 Code&lt;/h5&gt;
&lt;p&gt;http 响应状态码 Status-Code 以 3 位数字组成，用来标识该请求是否成功，比如是正常还是错误等。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Code&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;200&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;表示成功客户端成功接收到了服务端返回的数据，这是最常见的状态码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;206&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;客户端发完请求后，服务端只是返回了部分数据，就会出现该状态码，例如当下载一个很大的文件时，在没有下载完成前就会出现该状态码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;301&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;永久重定向 (redirect) http--&amp;gt;https&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;302&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;临时重定向 (redirect)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;400&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;客户端请求语法错误，服务端无法理解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;401&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务端开启了用户认证，而客户端没有提供正确的验证信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;403&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务端不允许客户端访问，或者没有找到默认返回页面 (默认所有的 web 服务器返回的页面都是 index.html、也可以调整默认返回页面 app.html)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;404&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;客户端请求的资源不存在 （路径写错了；服务端真的没有；）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;413&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;客户端向服务端上传一个比较大的文件，并且文件大小超过了服务端的限制 1MB；&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;500&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务端出现了内部错误，需要进行人为排查故障 （链接数据库类服务异常，会出现 500 错误）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;502&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务器充当代理角色时，后端被代理的服务器不可用或者没有正常回应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;503&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务当前不可用，由于超载或系统维护，服务器暂时的无法处理客户端请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;504&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务器充当代理角色时，后端的服务端没有按时返回数据，超时了&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;5http相关术语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5http相关术语&#34;&gt;#&lt;/a&gt; 5.Http 相关术语&lt;/h4&gt;
&lt;h5 id=&#34;51-什么是pv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-什么是pv&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.1&lt;/strong&gt; 什么是 PV&lt;/h5&gt;
&lt;p&gt;PV 即页面浏览量：比如用户访问一个网站算 1 个 pv，刷新一次页面则累计 pv+1，如果多次打开或刷新同一页面则浏览量累计。&lt;/p&gt;
&lt;h5 id=&#34;52-什么是uv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-什么是uv&#34;&gt;#&lt;/a&gt; 5.2 什么是 UV&lt;/h5&gt;
&lt;p&gt;UV 即独立访客，访问网站的一台电脑客户端为一个访客。可以理解成访问某网站的电脑的数量。比如电脑、手机算 2 个 UV，无论访问多少次网站，最终 UV 数量就是 2。&lt;/p&gt;
&lt;h5 id=&#34;53-什么是ip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-什么是ip&#34;&gt;#&lt;/a&gt; 5.3 什么是 IP&lt;/h5&gt;
&lt;p&gt;IP 即独立公网 IP 数，是指 1 天内多少个独立的 IP 浏览了页面，比如你在家通过拨号上网访问某个网站，此时网站会记录你的公网 IP 地址。那如果你在公司和很多同事同时访问一个网站，那该网站会记录多少个公网 IP 呢？（看公司有多少个出口公网地址）&lt;/p&gt;
&lt;h5 id=&#34;54-什么是并发&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#54-什么是并发&#34;&gt;#&lt;/a&gt; 5.4 什么是并发&lt;/h5&gt;
&lt;p&gt;并发：指的是同时，我们可以理解为一段时间内 (比如 10 秒)，网站支持同时访问的人数，假设 10s 并发值如果为 500 时，一天能达到多少 PV？ 500 * 6 * 60 * 24 =4320000&lt;/p&gt;
</content>
        <category term="Nginx" />
        <updated>2025-08-22T13:44:55.000Z</updated>
    </entry>
</feed>
