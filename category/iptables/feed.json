{
    "version": "https://jsonfeed.org/version/1",
    "title": "LinuxSre云原生 • All posts by \"iptables\" category",
    "description": "专注于 Linux 运维、云计算、云原⽣等技术",
    "home_page_url": "http://ixuyong.cn",
    "items": [
        {
            "id": "http://ixuyong.cn/posts/3328453550.html",
            "url": "http://ixuyong.cn/posts/3328453550.html",
            "title": "Iptables防火墙实战",
            "date_published": "2025-09-13T12:51:51.000Z",
            "content_html": "<h3 id=\"iptables防火墙实战\"><a class=\"anchor\" href=\"#iptables防火墙实战\">#</a> Iptables 防火墙实战</h3>\n<h4 id=\"1iptables基本介绍\"><a class=\"anchor\" href=\"#1iptables基本介绍\">#</a> 1.Iptables 基本介绍</h4>\n<h5 id=\"11-什么是防火墙\"><a class=\"anchor\" href=\"#11-什么是防火墙\">#</a> 1.1 什么是防火墙</h5>\n<ul>\n<li>过去，很长一段时期里，房屋都是草屋结构，如果一家失火，四邻也会跟着遭殃，所以为安全起见，古人就在自己居住地周围修筑搞搞的围墙，以阻挡外来的火势，保护自身的安全，这种墙就叫 “防火墙”。</li>\n<li>如今，“英特网” 把世界各地的计算机都紧密地连接在一起。如果不严加防卫，一旦网络被侵害，可能会出现不可预计的损失。那么互联网上，我们会采用类似防火墙的方法，来保护我们的网络不受侵害，为此我们需要设定防火墙规则，确定哪些类型的数据包允许通过，哪些不允许通过。</li>\n<li>那么具备这种功能的 “设备或软件” 就可以称之为 “防火墙”</li>\n</ul>\n<h5 id=\"12-防火墙的种类\"><a class=\"anchor\" href=\"#12-防火墙的种类\">#</a> 1.2 防火墙的种类</h5>\n<p>从逻辑上讲，防火墙可以大体分为主机防火墙和网络防火墙：</p>\n<ul>\n<li>主机防火墙：针对于单个主机进行防护，比如 Windowns。</li>\n<li>网络防火墙：往往处理网络入口，针对于网络入口进行防护， 服务于防火墙背后的服务器集群。</li>\n</ul>\n<p>从物理上讲，防火墙可以分为硬件防火墙和软件防火墙：</p>\n<ul>\n<li>硬件防火墙：在硬件级别实现部分防火墙功能，另外一部分功能基于软件实现，性能高、成本高。</li>\n<li>软件防火墙：以软件的方式模拟防火墙功能，运行在操作系统上，性能不高，成本低。</li>\n</ul>\n<h5 id=\"13-什么是iptables\"><a class=\"anchor\" href=\"#13-什么是iptables\">#</a> 1.3 什么是 iptables</h5>\n<ul>\n<li>iptables 其实不是真正的防火墙，就是一个代理程序，用户通过 iptables 这个代理程序，将安全规则执行到对应的 “安全框架” 中，这个 “安全框架” 才是真正的防火墙，这个安全框架叫 netfilter，是内核代码中不可缺少的一部分；</li>\n<li>iptables 位于操作系统的用户空间，我们后期是通过 iptables 命令工具操作 netfilter 内核框架；</li>\n<li>所以 iptables 的完整叫法应该是 netfilter/iptables，它是 linux 平台下的 “包过滤型防火墙”，这个包过滤防火墙是免费的，它可以替代昂贵的商业防火墙解决方案，完成数据包的过滤、连接追踪、限速、网络地址转换（NAT）等功能。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/QsIu39B.jpeg\" alt=\"1.jpg\" /></p>\n<h5 id=\"14-什么是包过滤防火墙\"><a class=\"anchor\" href=\"#14-什么是包过滤防火墙\">#</a> 1.4 什么是包过滤防火墙</h5>\n<p>包过滤防火墙它工作在 OSI 七层模型中的网络层，用来匹配网络数据包的 Header:</p>\n<ul>\n<li>1. 将 Head 与预先定义好的防火墙规则进行比对；</li>\n<li>2. 与规则相匹配的包会被放行；</li>\n<li>3. 与规则不匹配的包则可能会被丢弃，也可能执行更复杂的动作；</li>\n</ul>\n<p>由于包过滤防火墙工作在网络层，故也称 “网络层防火墙”，它通过检查每一个数据包的：</p>\n<ul>\n<li>源地址、目的地址；</li>\n<li>源端口、目的端口；</li>\n<li>协议类型 TCP、UDP、ICMP，等状态信息来判断是否符合规则；</li>\n</ul>\n<h5 id=\"15-包过滤防火墙如何实现\"><a class=\"anchor\" href=\"#15-包过滤防火墙如何实现\">#</a> 1.5 包过滤防火墙如何实现</h5>\n<p>包过滤防火墙是由 Netfilter 来实现，它是内核的一部分，如果我们想要防火墙能够达到 “防火” 的目的，则需要在内核中设置关卡，所有进出的数据报文都要经过这些关卡进行检查：</p>\n<ul>\n<li>将如何条件的放行；</li>\n<li>不符合条件的阻止；</li>\n<li>而这些关卡在 iptables 中不被称为 “关卡”，而是被称为 “链”；</li>\n</ul>\n<h4 id=\"2-iptables链的概念\"><a class=\"anchor\" href=\"#2-iptables链的概念\">#</a> 2. Iptables 链的概念</h4>\n<h5 id=\"21-什么是链\"><a class=\"anchor\" href=\"#21-什么是链\">#</a> 2.1 什么是链</h5>\n<p>在 iptables 中的关卡为什么被称为 “链” 呢？</p>\n<p>防火墙的作用就在于对经过的数据报文进行 &quot;规则&quot; 匹配，然后执行规则对应的 “动作”，所以当报文经过这些关卡的时候，则必须匹配这个关卡上的规则，但是这个关卡上可能不止一条规则，而是有很多条规则，当我们把这些规则串到一起的时候，就形成了 “链”。</p>\n<p>所以，每个经过这个 “关卡” 的报文，都要讲这条 “链” 上的所有规则匹配一遍，如果有如何条件的规则，则执行规则对应的动作，如果没有则执行默认链的动作。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/3sABXRs.jpeg\" alt=\"2.jpg\" /></p>\n<h5 id=\"22-iptables有哪些链链\"><a class=\"anchor\" href=\"#22-iptables有哪些链链\">#</a> 2.2 iptables 有哪些链链</h5>\n<p>当我们启动了防火墙功能时，报文需要经过很多关卡，也就是说，根据实际情况的不同，报文经过 “链” 可能不同，大体分为如下三类：</p>\n<ul>\n<li>1. 请求到达本机：  PREROUTING  --&gt;  INPUT  --&gt;  Local Process</li>\n<li>2. 请求经过本机：  PREROUTING  --&gt;  FORWARD --&gt; POSTROUTING</li>\n<li>3. 请求从本机发出：Process     --&gt;  OUTPUT  --&gt; POSTROUTING</li>\n</ul>\n<p>了解 iptables 链的数据包流向，后期在设定规则时，能很清楚的知道将规则设定在哪个链上。</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/GzkcMvH.jpeg\" alt=\"3.jpg\" /></p>\n<h4 id=\"3-iptables表的概念\"><a class=\"anchor\" href=\"#3-iptables表的概念\">#</a> 3. Iptables 表的概念</h4>\n<h5 id=\"31-什么是表\"><a class=\"anchor\" href=\"#31-什么是表\">#</a> 3.1 什么是表</h5>\n<p>我们对每个 “链” 上都放置了一串规则，但是这些规则有些很相似，比如：</p>\n<ul>\n<li>A 类规则都是对 IP 或者端口的过滤；</li>\n<li>B 类规则都是对报文进行修改的；</li>\n<li>C 类规则都是进行地址转换的；</li>\n</ul>\n<p>当我们把具有相同功能的规则集合在一起叫作 “表”，所以说，不同功能的规则，我们可以放置在不同的表中进行管理，二 iptables 已经为我们定义了 4 种表，每种表对应不同的功能。</p>\n<h5 id=\"32-表的功能\"><a class=\"anchor\" href=\"#32-表的功能\">#</a> 3.2 表的功能</h5>\n<table>\n<thead>\n<tr>\n<th>表名</th>\n<th>用途</th>\n<th>常用链</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filter</td>\n<td>默认表，用于数据包过滤（允许 / 拒绝流量）</td>\n<td>INPUT, FORWARD, OUTPUT</td>\n</tr>\n<tr>\n<td>nat</td>\n<td>网络地址转换（如端口转发、共享上网）</td>\n<td>PREROUTING,INPUT, OUTPUT, POSTROUTING</td>\n</tr>\n<tr>\n<td>mangle</td>\n<td>修改数据包内容（如 TTL、QoS 标记）</td>\n<td>PREROUTING, POSTROUTING，INPUT, FORWARD, OUTPUT</td>\n</tr>\n<tr>\n<td>raw</td>\n<td>关闭 nat 表上启用的连接追踪机制</td>\n<td>PREROUTING, OUTPUT</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"33-表与链的关系\"><a class=\"anchor\" href=\"#33-表与链的关系\">#</a> 3.3 表与链的关系</h5>\n<p>raw--&gt;mangle--&gt;nat--&gt;filter</p>\n<p><img loading=\"lazy\" data-src=\"https://wp-cdn.4ce.cn/v2/aJNFcbZ.jpeg\" alt=\"4.jpg\" /></p>\n<ul>\n<li>问题 1：来自 <code>10.0.0.1</code>  的地址，访问本机的 WEB 服务请求不允许，应该在哪个表的哪个链上设定规则？<br />\n答案一：很多同学会觉得是 PREROUTING 链，但其实是 INPUT 链，因为我们要做的是过滤，而 PREROUTING 不能做过滤，所以应该在 filter 表中的 INPUT 规则链上设定规则。</li>\n<li>问题 2：所有由本机发往 <code>10.0.0.0/24</code>  网段的 <code>TCP</code>  服务都不允许？<br />\n答案二：由本地发出会经过 OUTPUT、POSTROUTING，但由于 POSTROUTING 不支持做过滤，所以应该在 filter 表中的 OUTPUT 规则链上配置。</li>\n<li>问题 3：所有来自己本地内部网络的主机，向互联网发送 WEB 服务器请求都允许？<br />\n答案三：由本地发出会经过 PREROUTING,、FORWARD、POSTROUTING ，但由于 PREROUTING，POSTROUTING 不支持做过滤，所以应该在 filter 表中的 FORWARD 链上设定规则。</li>\n</ul>\n<h4 id=\"4-iptables规则管理\"><a class=\"anchor\" href=\"#4-iptables规则管理\">#</a> 4. Iptables 规则管理</h4>\n<h5 id=\"41-什么是规则\"><a class=\"anchor\" href=\"#41-什么是规则\">#</a> 4.1 什么是规则</h5>\n<ul>\n<li>数据包的过滤基于规则，而规则是由匹配条件 + 动作组成，那我们对规则的操作无非就是增删改查。</li>\n<li>操作规则的语法：iptables -t &lt;表名&gt; &lt; 选项 &gt; &lt; 链名 &gt; [规则] -j &lt; 动作 &gt;</li>\n<li>操作规则之前我们需要考量如下两个问题：\n<ul>\n<li>1）要实现什么功能：判断添加到哪个表上；</li>\n<li>2｝报文流经的路线：判断添加到哪个链上；</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>iptables 选项</th>\n<th>含义</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-t,--table</td>\n<td>指定要操作的表（默认 filter）</td>\n<td>iptables -t filter</td>\n</tr>\n<tr>\n<td>-A,--append</td>\n<td>最佳一条规则至链的末尾</td>\n<td>iptables -t filter -A INPUT</td>\n</tr>\n<tr>\n<td>-I,--insert</td>\n<td>追加一条规则至链的首部</td>\n<td>iptables -t filter -I INPUT</td>\n</tr>\n<tr>\n<td>-D,--delete</td>\n<td>指定删除一条规则</td>\n<td>iptables -t filter -D INPUT 1</td>\n</tr>\n<tr>\n<td>-R,--replace</td>\n<td>替换选定链中的规则</td>\n<td>iptables -t filter -R INPUT</td>\n</tr>\n<tr>\n<td>-S,--list-rules</td>\n<td>打印选定链中的所有规则</td>\n<td>iptables -t filter -S</td>\n</tr>\n<tr>\n<td>-Z,--zero</td>\n<td>将所有链中的数据包和字节计数器归零</td>\n<td>iptables -t filter -Z</td>\n</tr>\n<tr>\n<td>-N,--new-chain</td>\n<td>创建自定义名称规则链</td>\n<td>iptables -N New_Rules</td>\n</tr>\n<tr>\n<td>-E,--rename-chain</td>\n<td>给自定义链修改名称</td>\n<td>iptables -E Old_Rules New_Rules</td>\n</tr>\n<tr>\n<td>-X,--delete-chain</td>\n<td>删除自定义链</td>\n<td>iptables -X Rules_Name</td>\n</tr>\n<tr>\n<td>-P,--policy</td>\n<td>给链设定默认策略</td>\n<td>iptables -t filter -P DROP</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"42-如何查看规则\"><a class=\"anchor\" href=\"#42-如何查看规则\">#</a> 4.2 如何查看规则</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 如何查看</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -L -n -v --line-numbers</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-t</span>  指定表明</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-L</span> 查看详情</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-n</span> 不反解</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-v</span> 详细信息</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-line-numbers 显示规则编号</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#2. 如何添加规则： 禁止 10.0.0.10 ping 10.0.0.200</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -s 10.0.0.10 -j drop</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#3. 如何修改规则</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-R:修改 需要指定规则的编号</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -R INPUT 1 -p icmp -s 10.0.0.10 -j REJECT</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#4. 如何清空计数器</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -Z</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#5. 备份规则</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables-save > /etc/iptables.rule</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#6. 清空规则</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -F\t\t\t\t\t# 只操作 filter</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t nat -F\t\t\t# 清空 nat 表</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#7. 恢复规则</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables-restore &lt; /etc/iptables.rule</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#8. 永久生效</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>命令： iptables-restore <span class=\"token operator\">&lt;</span> /etc/iptables.rule  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>加入开机自启动 /etc/rc.local</pre></td></tr></table></figure><h4 id=\"5iptables基本匹配\"><a class=\"anchor\" href=\"#5iptables基本匹配\">#</a> 5.Iptables 基本匹配</h4>\n<h5 id=\"51-iptables匹配参数\"><a class=\"anchor\" href=\"#51-iptables匹配参数\">#</a> 5.1 iptables 匹配参数</h5>\n<table>\n<thead>\n<tr>\n<th>条件参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[!] -p, --protocol protocol</td>\n<td>指明需要匹配的协议，如 icmp、udp、tcp</td>\n</tr>\n<tr>\n<td>[!] -s, --source address[/mask][,...]</td>\n<td>指定匹配源地址，如有多个可以逗号分隔</td>\n</tr>\n<tr>\n<td>[!] -d, --destination address[/mask][,...]</td>\n<td>指定匹配目标地址，如有多个可以逗号分隔</td>\n</tr>\n<tr>\n<td>[!] --source-port,--sport port[:port]</td>\n<td>指定源端口</td>\n</tr>\n<tr>\n<td>[!] --destination-port,--dport port[:port]</td>\n<td>指定目标端口</td>\n</tr>\n<tr>\n<td>[!] -i, --in-interface name</td>\n<td>接收数据包的接口名称</td>\n</tr>\n<tr>\n<td>[!] -o, --out-interface name</td>\n<td>发送数据包的接口名称</td>\n</tr>\n<tr>\n<td>-m, --match match</td>\n<td>执行需要使用的匹配项，属于扩展匹配</td>\n</tr>\n<tr>\n<td>-j, --jump target</td>\n<td>执行匹配规则后的动作、ACCEPT、DROP、REJECT 等</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"52-iptables匹配示例\"><a class=\"anchor\" href=\"#52-iptables匹配示例\">#</a> 5.2 iptables 匹配示例</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>.仅允许<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token number\">10.0</span>.0.1<span class=\"token variable\">`</span></span> 访问 <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token number\">10.0</span>.0.200<span class=\"token variable\">`</span></span> 服务器的<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token number\">22</span><span class=\"token variable\">`</span></span>端口、其他地址全部拒绝<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -s 10.0.0.1 -d 10.0.0.200 -p tcp --dport 22 -j ACCEPT</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -A INPUT -d 10.0.0.200 -p tcp --dport 22 -j DROP</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">2</span>.所有来访问本机的协议，属于TCP协议的我们通通都放行；</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p tcp -j ACCEPT</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -j DROP</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">3</span>.凡是由本机发出的TCP协议报文，都允许出去，其他协议不行<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I OUTPUT -p tcp -j ACCEPT</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I OUTPUT -j DROP</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">4</span>.禁止其他主机从eth0向本机发送ping请求</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -i eth0 -p icmp -j DROP</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">5</span>.允许从本机发送<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ping</span><span class=\"token variable\">`</span></span>请求，其他任何协议都不允许；  【ssh也会掉线】</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I OUTPUT -p icmp -j ACCEPT</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -A OUTPUT -j DROP</span></pre></td></tr></table></figure><h4 id=\"6-iptables扩展匹配\"><a class=\"anchor\" href=\"#6-iptables扩展匹配\">#</a> 6. Iptables 扩展匹配</h4>\n<h5 id=\"61-multiport模块\"><a class=\"anchor\" href=\"#61-multiport模块\">#</a> 6.1 multiport 模块</h5>\n<p>使用 multiport 模块可以添加多个不连续的端口；-m multiport &lt;--sports|--dports|--ports&gt; 端口 1 [, 端口 2,.., 端口 n]</p>\n<p>示例 ： <code>10.0.0.10</code>  访问本机 <code>20、21、80、443</code>  允许通过；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -s 10.0.0.10 -d 10.0.0.200 -p tcp -m multiport --dport 20:22,80,443 -j ACCEPT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -A INPUT -j DROP</span></pre></td></tr></table></figure><h5 id=\"62-iprange模块\"><a class=\"anchor\" href=\"#62-iprange模块\">#</a> 6.2 iprange 模块</h5>\n<p>使用 iprange 模块可以指定 &quot;一段连续的 IP 地址范围&quot;，用于匹配报文的源地址或者目标地址， iprange 扩展模块中有两个扩展匹配条件可以使用。<br />\n[!] --src-range from [-to]： 原地址范围<br />\n [!] --dst-range from [-to]： 目标地址范围</p>\n<p>示例： <code>10.0.0.5-10.0.0.10</code>  地址段 <code>ping</code>  本机，则丢弃</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -m iprange --src-range 10.0.0.5-10.0.0.10 --dst-range 10.0.0.200 -j DROP</span></pre></td></tr></table></figure><h5 id=\"63-string模块\"><a class=\"anchor\" href=\"#63-string模块\">#</a> 6.3 String 模块</h5>\n<p>使用 string 扩展模块，可以指定要匹配的字符串，如果报文中包含对应的字符串，则符合匹配条件。</p>\n<ul>\n<li>--algo {bm|kmp} ：字符匹配的查询算法；</li>\n<li>[!] --string pattern ：字符匹配的字符串；</li>\n</ul>\n<p>示例：应用返回的报文中包含字符 <code>&quot;hello&quot;</code> ，我们就丢弃当前报文，其余正常通过。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 安装 HTTPd 服务并准备两个页面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install httpd -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start httpd</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"hello\" > /var/www/html/index.html</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"video\" > /var/www/html/test.html</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 192.168.40.200/index.html</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hello</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 192.168.40.200/test.html</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>video</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#2. 配置 iptables 规则 (响应做规则匹配)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I OUTPUT -p tcp -m string --algo kmp --string \"video\" -j DROP</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 192.168.40.200/index.html</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>hello</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 192.168.40.200/test.html #被拦截</span></pre></td></tr></table></figure><p>示例：用户请求后端节点，如果包含 “<a href=\"http://web.hmallleasing.com\">web.hmallleasing.com</a>” 则拒绝。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I FORWARD -p tcp -m sting --algo kmp --string \"web.hmallleasing.com\" -j DROP</span></pre></td></tr></table></figure><h5 id=\"64-time模块\"><a class=\"anchor\" href=\"#64-time模块\">#</a> 6.4 time 模块</h5>\n<p>使用 time 扩展模块，根据时间段区匹配报文，如果报文到达的时间在指定的时间范围以内，则符合匹配条件。</p>\n<ul>\n<li>--timestart hh:mm [:ss] ：开始时间</li>\n<li>--timestop hh:mm [:ss] ：结束时间</li>\n<li>[!] --monthdays day [,day...] ：指定一个月的某一天</li>\n<li>[!] --weekdays day [,day...] ：指定周一到周天</li>\n<li>--kerneltz ：使用内核时区而不是 UTC 时间</li>\n</ul>\n<p>示例一：拒绝每天 8:00  ~ 12:00   (00:00-04:00)、14:00 ~ 18:00   (06:00-10:00)，任何主机发送 icmp 协议。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#utc 时间与本地时间快 8 小时，所以需要 - 8 小时</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -m time --timestar 00:00 --timestop 04:00 -j DROP</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -m time --timestar 06:00 --timestop 10:00 -j DROP</span></pre></td></tr></table></figure><p>示例二：限制用户在上班时间 (每天 8:00  ~ 12:00   (00:00-04:00)、14:00 ~ 18:00   (06:00-10:00)) 禁止访问优酷、爱奇艺等资源，其他时间可以正常访问；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#网络策略</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"youku\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"iqyi\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"taobao\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"jd\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"youku\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"iqyi\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"taobao\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> FORWARD <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"jd\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#主机策略</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"youku\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"iqyi\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"taobao\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"jd\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 00:00 <span class=\"token parameter variable\">--timestop</span> 04:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"youku\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"iqyi\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"taobao\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-m</span> string <span class=\"token parameter variable\">--algo</span> kmp <span class=\"token parameter variable\">--string</span> <span class=\"token string\">\"jd\"</span> <span class=\"token parameter variable\">-m</span> <span class=\"token function\">time</span> <span class=\"token parameter variable\">--timestar</span> 06:00 <span class=\"token parameter variable\">--timestop</span> <span class=\"token number\">10</span>:00 <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#验证测试  </span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -HHost:youku.hmallleasing.com http://172.16.1.200/index.html #被限制访问</span></pre></td></tr></table></figure><h5 id=\"65-icmp模块\"><a class=\"anchor\" href=\"#65-icmp模块\">#</a> 6.5 icmp 模块</h5>\n<p>icmp 扩展模块：默认情况当禁止 ping 后，其他主机无法 ping 通本主机，本主机也无法 ping 通其他主机。</p>\n<p>假设现在的需求是本主机可以 ping 通其他主机，而其他主机依然无法 ping 同本主机。</p>\n<ul>\n<li type[code]|typename=\"\">[!] --icmp-type</li>\n<li>指定 ICMP 类型: echo-request（8 请求）、echo-reply（0 回应）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 禁用 icmp 无法满足需求</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -j DROP</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#2. 通过抓包可以发现 ping 会发送 echo request（请求）、echo-reply（回应）报文</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tcpdump -p icmp -v</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tcpdump: listening on eth0, link-type EN10MB <span class=\"token punctuation\">(</span>Ethernet<span class=\"token punctuation\">)</span>, capture size <span class=\"token number\">262144</span> bytes</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">20</span>:39:58.467850 IP <span class=\"token punctuation\">(</span>tos 0x0, ttl <span class=\"token number\">64</span>, <span class=\"token function\">id</span> <span class=\"token number\">25799</span>, offset <span class=\"token number\">0</span>, flags <span class=\"token punctuation\">[</span>DF<span class=\"token punctuation\">]</span>, proto ICMP <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, length <span class=\"token number\">84</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">192.168</span>.40.41 <span class=\"token operator\">></span> route: ICMP <span class=\"token builtin class-name\">echo</span> request, <span class=\"token function\">id</span> <span class=\"token number\">1770</span>, <span class=\"token function\">seq</span> <span class=\"token number\">1</span>, length <span class=\"token number\">64</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">20</span>:39:58.467878 IP <span class=\"token punctuation\">(</span>tos 0x0, ttl <span class=\"token number\">64</span>, <span class=\"token function\">id</span> <span class=\"token number\">48604</span>, offset <span class=\"token number\">0</span>, flags <span class=\"token punctuation\">[</span>none<span class=\"token punctuation\">]</span>, proto ICMP <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, length <span class=\"token number\">84</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    route <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.40.41: ICMP <span class=\"token builtin class-name\">echo</span> reply, <span class=\"token function\">id</span> <span class=\"token number\">1770</span>, <span class=\"token function\">seq</span> <span class=\"token number\">1</span>, length <span class=\"token number\">64</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#3. 使用 icmp 模块</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -m icmp --icmp-type \"echo-request\" -j DROP</span></pre></td></tr></table></figure><h5 id=\"66-connlimit模块\"><a class=\"anchor\" href=\"#66-connlimit模块\">#</a> 6.6 connlimit 模块</h5>\n<p>connlimit 扩展模块，限制每个客户端 IP 地址到服务器的并行连接数。</p>\n<ul>\n<li>--connlimit-upto n ：如果现有连接数小于或等于 n，则匹配。</li>\n<li>--connlimit-above n ：如果现有连接数大于 n，则匹配。</li>\n</ul>\n<p>DDOS 攻击脚本程序，模拟大量的并发数连接</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll flood_connect.c</span></pre></td></tr></table></figure><p>示例：使用脚本模拟 DDOS 攻击，然后检查网站是否异常，如果异常，则使用 iptables 限制并发连接数。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#1. 模拟 DDOS 攻击</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install httpd -y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"hello\" > /var/www/html/test.html</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"index-xuyong\" > /var/www/html/index.html</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl restart httpd</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># gcc flood_connect.c </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./a.out 192.168.40.200</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#2 通过 netstat 会发现大量的 ESTABLISHED 状态，从而造成正常用户请求异常，开启并发限制，然后测试</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -ntp |wc -l</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">1013</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -ntp | grep ESTABLISHED | wc -l</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">384</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -ntp | grep SYN_RECV | wc -l</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">72</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#3. 限制同一 IP 的并发连接数为 10</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p tcp --dport 80 -m connlimit --connlimit-above 10 -j DROP</span></pre></td></tr></table></figure><h5 id=\"67-limit模块\"><a class=\"anchor\" href=\"#67-limit模块\">#</a> 6.7 limit 模块</h5>\n<p>limit 扩展模块：限制单位时间内流入包的数量。</p>\n<p>可以以秒为单位进行限制，也可以以分钟、小时、天作为单位进行限制。</p>\n<ul>\n<li>--limit rate [second|minute|hour|day] ：平均匹配的速率</li>\n<li>--limit-burst number ：超过限制速率的包，允许超过 burst 所设定值，默认可超出 5 个</li>\n</ul>\n<p>示例一：限制主机每分钟接收 10 个 icmp 数据包，差不多 6s 会接收客户端一个数据包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I INPUT -p icmp -m limit --limit 10/minute -j ACCEPT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -A INPUT -p icmp -j REJECT</span></pre></td></tr></table></figure><p>示例二：允许 icmp 瞬间通过 10 个数据包通过，超过的数据包每分钟仅能通过一个</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -A INPUT -p icmp -m limit  --limit 1/m --limit-burst 10 -j ACCEPT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -A INPUT -p icmp -j REJECT</span></pre></td></tr></table></figure><p>示例三：限制主机传输时的带宽每秒不超过 500k</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#（500k * 1000=500000 字节 / 1500=333 个包）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 主机防护：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I OUTPUT -p tcp -m limit --limit 300/second -j ACCEPT</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -A OUTPUT -p tcp -j DROP</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># dd if=/dev/zero of=/var/www/html/bigdata bs=300M count=3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@redis ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget http://192.168.40.200/bigdata</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 网络防护：</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -I FORWARD -p tcp -m limit --limit 300/second -j ACCEPT</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@route ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -t filter -A FORWARD -p tcp -j DROP</span></pre></td></tr></table></figure><h5 id=\"68-tcp-flags模块\"><a class=\"anchor\" href=\"#68-tcp-flags模块\">#</a> 6.8 tcp-flags 模块</h5>\n<p>使用 tcp 扩展模块的 &quot;--tcp-flags&quot; 选项，即可对 TCP 的标志位进行匹配，匹配指定标志位的值是否为 &quot;1&quot;，在 tcp 协议建立连接的过程中，需要先进行三次握手，而三次握手就要依靠 tcp 头中的标记位进行。</p>\n<ul>\n<li>第一次：客户端向服务端发起第一次 TCP 连接时，在 TCP 的 flag 标志位中，SYN、RST、ACK、,FIN 等标记位仅有 SYN 为 1，其他标记位为 0。</li>\n<li>第二次：服务端向客户端返回 ACK，在 TCP 的 flag 标志位中，SYN、RST、ACK,FIN 等标记位 SYN、ACK 为 1，其他标记位为 0。</li>\n<li>第三次：客户端向服务端返回 ACK，在 TCP 的 flag 标志位中，SYN、RST、ACK,FIN 等标记位 ACK 为 1，其他标记位为 0。</li>\n</ul>\n<p>我们可以通过 --tcp-flag 指明需要匹配哪些标志位，然后再指明这些标志位中，哪些必须为 1，剩余的都必须为 0。</p>\n<p>所以当服务器接收新请求时，SYN 标志位必须 1，其他的标志位为 0，服务端响应这个连接时， SYN、ACK 标志位必须为 1，其他的标志位为 0。（这样可以避免木马程序通过端口主动向外发送新连接。）</p>\n<p>示例：客户端连接服务端 22 端口第一次握手必须是客户端发起的，所以 SYN 必须为 1，剩下全部为 0。然后服务端可以通过 22 端口返回对应的报文 SYN、ACK 为 1。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 \"--syn\" 选项相当于使用 \"--tcp-flags SYN,RST,ACK,FIN SYN\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">--dport</span> <span class=\"token number\">22</span> <span class=\"token parameter variable\">-m</span> tcp --tcp-flags SYN,ACK,FIN,RST SYN <span class=\"token parameter variable\">-j</span> ACCEPT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">--dport</span> <span class=\"token number\">22</span> <span class=\"token parameter variable\">-m</span> tcp --tcp-flags SYN,ACK,FIN,RST ACK <span class=\"token parameter variable\">-j</span> ACCEPT</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> OUTPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">--sport</span> <span class=\"token number\">22</span> <span class=\"token parameter variable\">-m</span> tcp --tcp-flags SYN,ACK,FIN,RST SYN,ACK <span class=\"token parameter variable\">-j</span> ACCEPT</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-A</span> OUTPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">--sport</span> <span class=\"token number\">22</span> <span class=\"token parameter variable\">-m</span> tcp --tcp-flags SYN,ACK,FIN,RST ACK <span class=\"token parameter variable\">-j</span> ACCEPT</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-A</span> OUTPUT <span class=\"token parameter variable\">-j</span> DROP</pre></td></tr></table></figure>",
            "tags": [
                "Iptables"
            ]
        }
    ]
}