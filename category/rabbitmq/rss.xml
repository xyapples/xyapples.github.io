<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>LinuxSre云原生 • Posts by &#34;rabbitmq&#34; category</title>
        <link>http://ixuyong.cn</link>
        <description>专注于 Linux 运维、云计算、云原⽣等技术</description>
        <language>zh-CN</language>
        <pubDate>Thu, 29 May 2025 20:35:53 +0800</pubDate>
        <lastBuildDate>Thu, 29 May 2025 20:35:53 +0800</lastBuildDate>
        <category>Docker</category>
        <category>ELKStack</category>
        <category>Harbor</category>
        <category>Kubernetes</category>
        <category>Redis</category>
        <category>rsync</category>
        <category>MySQL</category>
        <category>Windows</category>
        <category>Rabbitmq</category>
        <item>
            <guid isPermalink="true">http://ixuyong.cn/posts/2692178654.html</guid>
            <title>Rabbitmq集群部署</title>
            <link>http://ixuyong.cn/posts/2692178654.html</link>
            <category>Rabbitmq</category>
            <pubDate>Thu, 29 May 2025 20:35:53 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;rabbitmq集群部署&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rabbitmq集群部署&#34;&gt;#&lt;/a&gt; Rabbitmq 集群部署&lt;/h3&gt;
&lt;h4 id=&#34;一-环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境配置&#34;&gt;#&lt;/a&gt; 一、环境配置&lt;/h4&gt;
&lt;h5 id=&#34;11-关闭防火墙-selinux&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-关闭防火墙-selinux&#34;&gt;#&lt;/a&gt; 1.1 关闭防火墙、Selinux&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;systemctl disable --now firewalld 
setenforce 0
sed -i &#39;s#SELINUX=enforcing#SELINUX=disabled#g&#39; /etc/sysconfig/selinux
sed -i &#39;s#SELINUX=enforcing#SELINUX=disabled#g&#39; /etc/selinux/config
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;12-配置-yum-源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-配置-yum-源&#34;&gt;#&lt;/a&gt; 1.2 配置 yum 源&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;#rocky linux配置
sed -e &#39;s|^mirrorlist=|#mirrorlist=|g&#39; \
    -e &#39;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.aliyun.com/rockylinux|g&#39; \
    -i.bak \
    /etc/yum.repos.d/rocky-*.repo
yum clean all &amp;amp;&amp;amp; yum makecache
mkdir /soft /data /scripts /backup
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;13-安装ntpdate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-安装ntpdate&#34;&gt;#&lt;/a&gt; 1.3 安装 ntpdate&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;sudo dnf install epel-release -y
sudo dnf config-manager --set-enabled epel
sudo dnf install ntpsec
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;14-配置时间同步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-配置时间同步&#34;&gt;#&lt;/a&gt; 1.4 配置时间同步&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
echo &#39;Asia/Shanghai&#39; &amp;gt;/etc/timezone
ntpdate time2.aliyun.com
# 加入到crontab
crontab -e
*/5 * * * * /usr/sbin/ntpdate time2.aliyun.com
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;15-配置文件描述符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-配置文件描述符&#34;&gt;#&lt;/a&gt; 1.5 配置文件描述符&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;ulimit -SHn 65535
vim /etc/security/limits.conf
# 末尾添加如下内容
* soft nofile 65536
* hard nofile 131072
* soft nproc 65535
* hard nproc 655350
* soft memlock unlimited
* hard memlock unlimited
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;16-系统内核参数调优&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16-系统内核参数调优&#34;&gt;#&lt;/a&gt; 1.6 系统内核参数调优&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;cat &amp;gt;&amp;gt;/etc/sysctl.conf&amp;lt;&amp;lt;EOF
vm.max_map_count = 262144
vm.swappiness=1

net.ipv4.tcp_fin_timeout=2
net.ipv4.tcp_tw_reuse=1
#net.ipv4.tcp_tw_recycle=1
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_keepalive_time=600
net.ipv4.ip_local_port_range=4000 65000
net.ipv4.tcp_max_syn_backlog=16384
net.ipv4.route.gc_timeout=100
net.ipv4.tcp_max_tw_buckets= 5000

net.ipv4.tcp_syn_retries=1
net.ipv4.tcp_synack_retries=1
net.core.somaxconn=16384
net.core.netdev_max_backlog=16384
net.ipv4.tcp_max_orphans=16384

# 设置最大内存共享段大小bytes
kernel.shmmax=15461882265
kernel.shmall=3774873
# 修改消息队列长度
kernel.msgmax=65535
kernel.msgmnb=65535
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;17-修改默认资源限制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#17-修改默认资源限制&#34;&gt;#&lt;/a&gt; 1.7 修改默认资源限制&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;cat &amp;gt;&amp;gt;/etc/systemd/system.conf&amp;lt;&amp;lt; EOF
DefaultLimitNOFILE=65536
DefaultLimitNPROC=32000
DefaultLimitMEMLOCK=infinity
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;18-执行命令生效状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#18-执行命令生效状态&#34;&gt;#&lt;/a&gt; 1.8 执行命令生效状态&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;sysctl -p
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;19-安装基础软件包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#19-安装基础软件包&#34;&gt;#&lt;/a&gt; 1.9 安装基础软件包&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;yum install wget jq psmisc vim unzip net-tools telnet tree yum-utils device-mapper-persistent-data \
lvm2 git nfs-utils iotop httpd-tools dos2unix lrzsz -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;110-升级系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#110-升级系统&#34;&gt;#&lt;/a&gt; 1.10 升级系统&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;yum update -y --exclude=kernel* &amp;amp;&amp;amp; reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;二-rabbitmq集群部署&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-rabbitmq集群部署&#34;&gt;#&lt;/a&gt; 二、Rabbitmq 集群部署&lt;/h4&gt;
&lt;h5 id=&#34;21-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-环境准备&#34;&gt;#&lt;/a&gt; 2.1 环境准备&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;192.168.40.101&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;192.168.40.102&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;192.168.40.103&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;master&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;slave1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;slave2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;22-修改hosts&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-修改hosts&#34;&gt;#&lt;/a&gt; 2.2 修改 hosts&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/hosts
192.168.40.101 rabbitmq-01
192.168.40.102 rabbitmq-02
192.168.40.103 rabbitmq-03
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;23-配置hosts&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-配置hosts&#34;&gt;#&lt;/a&gt; 2.3 配置 hosts&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;hostnamectl set-hostname rabbitmq-01
hostnamectl set-hostname rabbitmq-02
hostnamectl set-hostname rabbitmq-03
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;24-安装包下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-安装包下载&#34;&gt;#&lt;/a&gt; 2.4 安装包下载&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/rabbitmq/erlang-rpm/releases/download/v27.3.1/erlang-27.3.1-1.el8.x86_64.rpm
wget http://repo.iotti.biz/CentOS/7/x86_64/socat-1.7.3.2-5.el7.lux.x86_64.rpm
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v4.1.0/rabbitmq-server-4.1.0-1.el8.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;25-安装rabbitmq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-安装rabbitmq&#34;&gt;#&lt;/a&gt; 2.5 安装 rabbitmq&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;RabbitMQ 是采用 Erlang 语言开发的，所以系统环境必须提供 Erlang 环境，需要是安装 Erlang。&lt;/li&gt;
&lt;li&gt;在 RabiitMQ 安装过程中需要依赖 socat 插件，首先安装该插件。&lt;/li&gt;
&lt;li&gt;Erlang 和 RabbitMQ 版本对照： &lt;a href=&#34;https://www.rabbitmq.com/which-erlang.html&#34;&gt;https://www.rabbitmq.com/which-erlang.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;yum localinstall erlang-27.3.1-1.el8.x86_64.rpm -y
yum localinstall socat-1.7.3.2-5.el7.lux.x86_64.rpm -y
yum localinstall rabbitmq-server-4.1.0-1.el8.noarch.rpm -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;26-配置rabbitmq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#26-配置rabbitmq&#34;&gt;#&lt;/a&gt; 2.6 配置 rabbitmq&lt;/h5&gt;
&lt;p&gt;所有节点创建自定义数据和日志目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p /data/rabbitmq/data /data/rabbitmq/log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所有节点编辑配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/rabbitmq/rabbitmq-env.conf
RABBITMQ_MNESIA_BASE=/data/rabbitmq/data
RABBITMQ_LOG_BASE=/data/rabbitmq/log
RABBITMQ_ERLANG_COOKIE=/data/rabbitmq/.erlang.cookie
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所有节点赋予.erlang.cookie 文件权限（其他 2 台从节点 cookie 值要保持一致，权限为 owner 只读），RabbitMQ 的集群是依赖 erlang 集群，而 erlang 集群是通过这个 cookie 进行通信认证的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim /data/rabbitmq/.erlang.cookie
KAIJQVKJHAGMUCWXZGVG 

chmod -R 400 /data/rabbitmq/.erlang.cookie
chown -R rabbitmq.rabbitmq /data/rabbitmq/
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;27-rabbitmq启动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#27-rabbitmq启动&#34;&gt;#&lt;/a&gt; 2.7 rabbitmq 启动&lt;/h5&gt;
&lt;p&gt;所有节点启动 web 管理插件和分片插件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rabbitmq-plugins enable rabbitmq_management
rabbitmq-plugins enable rabbitmq_sharding
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所有节点设置开机自启&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl enable rabbitmq-server
systemctl restart rabbitmq-server
systemctl status rabbitmq-server
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;28-加入集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#28-加入集群&#34;&gt;#&lt;/a&gt; 2.8 加入集群&lt;/h5&gt;
&lt;p&gt;创建集群，在 node2 和 node3 上执行加入集群命令（主节点无需执行如下操作）:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1.关闭服务
rabbitmqctl stop_app

#2.加入集群
rabbitmqctl join_cluster rabbit@rabbitmq-01

#3.启动服务
rabbitmqctl start_app

#4.查看集群状态,任意节点执行
rabbitmqctl cluster_status
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/gWflncf.jpeg&#34; alt=&#34;Snipaste_2025-05-29_20-40-27.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;29-配置rabbitmq权限&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#29-配置rabbitmq权限&#34;&gt;#&lt;/a&gt; 2.9 配置 rabbitmq 权限&lt;/h5&gt;
&lt;p&gt;rabbitmq 有一个默认的账号密码 guest，但该情况仅限于本机 localhost 进行访问，所以需要添加一个远程登录的用户。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;角色有四种：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;administrator：可以登录控制台、查看所有信息、并对 rabbitmq 进行管理&lt;/li&gt;
&lt;li&gt;monToring：监控者；登录控制台，查看所有信息&lt;/li&gt;
&lt;li&gt;policymaker：策略制定者；登录控制台指定策略&lt;/li&gt;
&lt;li&gt;managment：普通管理员；登录控制&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 添加用户
rabbitmqctl add_user admin 123456

# 为用户添加资源权限(授予访问虚拟机根节点的所有权限)
rabbitmqctl set_permissions -p &amp;quot;/&amp;quot; admin &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot;

# 设置用户角色,分配操作权限
rabbitmqctl set_user_tags admin administrator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里创建用户 xuyong，密码 123456，设置 adminstator 角色，赋予所有权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 添加用户
rabbitmqctl add_user xuyong 123456

# 为用户添加资源权限(授予访问虚拟机根节点的所有权限)
rabbitmqctl set_permissions -p &amp;quot;/&amp;quot; xuyong &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot;

# 新增虚拟主机
rabbitmqctl add_vhost /xuyong

# 将新虚拟主机授权给新用户
# rabbitmqctl set_permissions -p vhost_name username “.*” “.*” “.*”(后面三个”*”代表用户拥有配置、写、读全部权限)
rabbitmqctl set_permissions -p &amp;quot;/xuyong&amp;quot; xuyong &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot;

#查看权限
rabbitmqctl list_permissions -p /xuyong

# 设置用户角色,分配操作权限
rabbitmqctl set_user_tags xuyong administrator

# 删除guest用户
rabbitmqctl delete_user guest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在其他节点检查，账户是否已同步&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rabbitmqctl list_users
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;210-访问rabbitmq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#210-访问rabbitmq&#34;&gt;#&lt;/a&gt; 2.10 访问 rabbitmq&lt;/h5&gt;
&lt;p&gt;浏览器访问:&lt;a href=&#34;http://192.168.40.101:15672/&#34;&gt;http://192.168.40.101:15672/&lt;/a&gt;&lt;br /&gt;
 用户名: admin&lt;br /&gt;
 密码：123456&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://wp-cdn.4ce.cn/v2/KQpvPU4.jpeg&#34; alt=&#34;Snipaste_2025-05-29_20-29-59.jpg&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
